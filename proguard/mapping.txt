HttpUtils.HttpFetcher -> a.a:
    org.apache.http.client.HttpClient getHttpClient() -> a
    org.apache.http.HttpResponse uploadCollectedData(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    java.util.List paramBuilder(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
android.support.v13.app.FragmentPagerAdapter -> android.support.v13.app.FragmentPagerAdapter:
android.support.v13.app.FragmentStatePagerAdapter -> android.support.v13.app.FragmentStatePagerAdapter:
android.support.v13.app.FragmentTabHost -> android.support.v13.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v13.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.app.FragmentTransaction doTabChanged(java.lang.String,android.app.FragmentTransaction) -> a
android.support.v13.app.FragmentTabHost$1 -> android.support.v13.app.a:
android.support.v13.app.FragmentTabHost$SavedState -> android.support.v13.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v13.app.FragmentTabHost$SavedState$1 -> android.support.v13.app.b:
    android.support.v13.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v13.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v13.app.FragmentTabHost$TabInfo -> android.support.v13.app.c:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.app.Fragment fragment -> d
    android.app.Fragment access$102(android.support.v13.app.FragmentTabHost$TabInfo,android.app.Fragment) -> a
    android.app.Fragment access$100(android.support.v13.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v13.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v13.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v13.app.FragmentTabHost$TabInfo) -> d
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$300(android.support.v4.app.ActionBarDrawerToggle) -> access$300
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    boolean isMediaKey(int) -> isMediaKey
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> windowAttached
    void gainFocus() -> gainFocus
    void takeAudioFocus() -> takeAudioFocus
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> dropAudioFocus
    void loseFocus() -> loseFocus
    void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat printHelper -> printHelper
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> access$100
    int access$200(int) -> access$200
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> access$100
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> access$200
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> access$202
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> access$300
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> access$400
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> access$102
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> access$500
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> access$502
    void access$600(android.support.v4.widget.AutoScrollHelper) -> access$600
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> access$700
    int access$800(int,int,int) -> access$800
    float access$900(float,float,float) -> access$900
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$002
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> access$102
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$202
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> access$300
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> access$100
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> IMPL
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$900
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> access$1000
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
com.alipay.android.app.IAlixPay -> com.alipay.android.app.IAlixPay:
    java.lang.String Pay(java.lang.String) -> Pay
    java.lang.String test() -> test
    void registerCallback(com.alipay.android.app.IRemoteServiceCallback) -> registerCallback
    void unregisterCallback(com.alipay.android.app.IRemoteServiceCallback) -> unregisterCallback
    java.lang.String prePay(java.lang.String) -> prePay
com.alipay.android.app.IAlixPay$Stub -> com.alipay.android.app.IAlixPay$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_Pay -> TRANSACTION_Pay
    int TRANSACTION_test -> TRANSACTION_test
    int TRANSACTION_registerCallback -> TRANSACTION_registerCallback
    int TRANSACTION_unregisterCallback -> TRANSACTION_unregisterCallback
    int TRANSACTION_prePay -> TRANSACTION_prePay
    com.alipay.android.app.IAlixPay asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.alipay.android.app.IAlixPay$Stub$a -> com.alipay.android.app.IAlixPay$Stub$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a() -> a
    java.lang.String Pay(java.lang.String) -> Pay
    java.lang.String test() -> test
    void registerCallback(com.alipay.android.app.IRemoteServiceCallback) -> registerCallback
    void unregisterCallback(com.alipay.android.app.IRemoteServiceCallback) -> unregisterCallback
    java.lang.String prePay(java.lang.String) -> prePay
com.alipay.android.app.IRemoteServiceCallback -> com.alipay.android.app.IRemoteServiceCallback:
    void startActivity(java.lang.String,java.lang.String,int,android.os.Bundle) -> startActivity
    void payEnd(boolean,java.lang.String) -> payEnd
    boolean isHideLoadingScreen() -> isHideLoadingScreen
com.alipay.android.app.IRemoteServiceCallback$Stub -> com.alipay.android.app.IRemoteServiceCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_startActivity -> TRANSACTION_startActivity
    int TRANSACTION_payEnd -> TRANSACTION_payEnd
    int TRANSACTION_isHideLoadingScreen -> TRANSACTION_isHideLoadingScreen
    com.alipay.android.app.IRemoteServiceCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.alipay.android.app.IRemoteServiceCallback$Stub$a -> com.alipay.android.app.IRemoteServiceCallback$Stub$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a() -> a
    void startActivity(java.lang.String,java.lang.String,int,android.os.Bundle) -> startActivity
    void payEnd(boolean,java.lang.String) -> payEnd
    boolean isHideLoadingScreen() -> isHideLoadingScreen
com.alipay.mobilesecuritysdk.MainHandler -> com.alipay.mobilesecuritysdk.MainHandler:
    int mainhandler(android.content.Context,java.util.List,boolean) -> mainhandler
com.alipay.mobilesecuritysdk.constant.ConfigConstant -> com.alipay.mobilesecuritysdk.constant.ConfigConstant:
    boolean DEBUG -> DEBUG
    int DEFAULT_APP_INTERVAL -> DEFAULT_APP_INTERVAL
    long APP_INTERVAL_UINT -> APP_INTERVAL_UINT
    int DEFAULT_LOCATE_INTERVAL -> DEFAULT_LOCATE_INTERVAL
    long LOCATE_INTERVAL_UINT -> LOCATE_INTERVAL_UINT
    int DEFAULT_LOCATE_LINES -> DEFAULT_LOCATE_LINES
    int DEFAULT_MAIN_SWITCH_INTERVAL -> DEFAULT_MAIN_SWITCH_INTERVAL
    long MAIN_SWITCH_INTERVAL_UINT -> MAIN_SWITCH_INTERVAL_UINT
    java.lang.String MAIN_SWITCH_STATE_ON -> MAIN_SWITCH_STATE_ON
    java.lang.String MAIN_SWITCH_STATE_OFF -> MAIN_SWITCH_STATE_OFF
    long REQUEST_LOCATE_INTERVAL -> REQUEST_LOCATE_INTERVAL
    java.lang.String CONFIG_FILENAME -> CONFIG_FILENAME
    java.lang.String LOCATE_UPLOAD_FILENAME -> LOCATE_UPLOAD_FILENAME
    java.lang.String WIFI_UPLOAD_FILENAME -> WIFI_UPLOAD_FILENAME
    java.lang.String APP_UPLOAD_FILENAME -> APP_UPLOAD_FILENAME
    java.lang.String WIRELESS_FILENAME -> WIRELESS_FILENAME
    java.lang.String EMPTY -> EMPTY
    java.lang.String version -> version
    long ZERO -> ZERO
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String PERPERMISSION_READ_SMS -> PERPERMISSION_READ_SMS
    java.lang.String PERPERMISSION_RECEIVE_SMS -> PERPERMISSION_RECEIVE_SMS
    java.lang.String PERPERMISSION_SEND_SMS -> PERPERMISSION_SEND_SMS
    java.lang.String PERPERMISSION_INTERNET -> PERPERMISSION_INTERNET
    int RESULT_SUCESS -> RESULT_SUCESS
    int RESULT_INTERRUPTED -> RESULT_INTERRUPTED
    int RESULT_ERROR -> RESULT_ERROR
    java.lang.String MAIN_SWITCH_ADDRESS -> MAIN_SWITCH_ADDRESS
    java.lang.String DATA_POST_ADDRESS -> DATA_POST_ADDRESS
    java.lang.String DEBUG_DATA_POST_ADDR -> DEBUG_DATA_POST_ADDR
    java.lang.String SD_FILE -> SD_FILE
    int RESPONSE_CODE -> RESPONSE_CODE
    java.lang.String JSON_SECTION_LOC -> JSON_SECTION_LOC
    java.lang.String JSON_SECTION_APP -> JSON_SECTION_APP
    java.lang.String JSON_SECTION_WIFI -> JSON_SECTION_WIFI
    int REQUEST_TIMEOUT -> REQUEST_TIMEOUT
    int SO_TIMEOUT -> SO_TIMEOUT
    long MAX_SIZE_OF_FILE -> MAX_SIZE_OF_FILE
    java.lang.String MD5_SALT -> MD5_SALT
    java.lang.String SERVICE_ID -> SERVICE_ID
    java.lang.String LOG_DIR -> LOG_DIR
    int MAX_LOG_SIZE -> MAX_LOG_SIZE
    java.lang.String LOG_JSON_STR_CODE -> LOG_JSON_STR_CODE
    java.lang.String LOG_JSON_STR_ERROR -> LOG_JSON_STR_ERROR
com.alipay.mobilesecuritysdk.constant.ConfigNameEnum -> com.alipay.mobilesecuritysdk.constant.ConfigNameEnum:
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum MAIN_SWITCH_LUT -> MAIN_SWITCH_LUT
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum MAIN_SWITCH_STATE -> MAIN_SWITCH_STATE
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum MAIN_SWITCH_INTERVAL -> MAIN_SWITCH_INTERVAL
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum LOCATE_LUT -> LOCATE_LUT
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum LOCATE_INTERVAL -> LOCATE_INTERVAL
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum APP_LUT -> APP_LUT
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum APP_INTERVAL -> APP_INTERVAL
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum PACKAGE_CHANGED -> PACKAGE_CHANGED
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum LOCATION_MAX_LINES -> LOCATION_MAX_LINES
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum CONFIGS -> CONFIGS
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum PKG_NAME -> PKG_NAME
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum PUB_KEY_HASH -> PUB_KEY_HASH
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum APP_ITEM -> APP_ITEM
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum START_TAG -> START_TAG
    java.lang.String value -> value
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum[] values() -> values
    com.alipay.mobilesecuritysdk.constant.ConfigNameEnum valueOf(java.lang.String) -> valueOf
com.alipay.mobilesecuritysdk.constant.LocationNameEnum -> com.alipay.mobilesecuritysdk.constant.LocationNameEnum:
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum LOCATE_LATITUDE -> LOCATE_LATITUDE
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum LOCATE_LONGITUDE -> LOCATE_LONGITUDE
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum LOCATE_CELL_ID -> LOCATE_CELL_ID
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum LOCATE_LAC -> LOCATE_LAC
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum TIME_STAMP -> TIME_STAMP
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum LOCATE_WIFI -> LOCATE_WIFI
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum LOCATION_ITEM -> LOCATION_ITEM
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum START_TAG -> START_TAG
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum VERSION -> VERSION
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum MCC -> MCC
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum MNC -> MNC
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum PHONETYPE -> PHONETYPE
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum CDMA -> CDMA
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum BSSID -> BSSID
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum SSID -> SSID
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum LEVEL -> LEVEL
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum CURRENT -> CURRENT
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum TIME -> TIME
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum GSM -> GSM
    java.lang.String value -> value
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum[] values() -> values
    com.alipay.mobilesecuritysdk.constant.LocationNameEnum valueOf(java.lang.String) -> valueOf
com.alipay.mobilesecuritysdk.datainfo.AppInfo -> com.alipay.mobilesecuritysdk.datainfo.AppInfo:
    java.lang.String pkgName -> pkgName
    java.lang.String pkeyhash -> pkeyhash
    boolean validate() -> validate
    java.lang.String getPkgName() -> getPkgName
    void setPkgName(java.lang.String) -> setPkgName
    java.lang.String getPkeyhash() -> getPkeyhash
    void setPkeyhash(java.lang.String) -> setPkeyhash
com.alipay.mobilesecuritysdk.datainfo.GeoResponseInfo -> com.alipay.mobilesecuritysdk.datainfo.GeoResponseInfo:
    boolean isSuccess -> isSuccess
    java.lang.String mainSwitchState -> mainSwitchState
    int mainSwitchInterval -> mainSwitchInterval
    int locateInterval -> locateInterval
    int appInterval -> appInterval
    int locationMaxLines -> locationMaxLines
    boolean isSuccess() -> isSuccess
    void setSuccess(boolean) -> setSuccess
    java.lang.String getMainSwitchState() -> getMainSwitchState
    void setMainSwitchState(java.lang.String) -> setMainSwitchState
    int getMainSwitchInterval() -> getMainSwitchInterval
    void setMainSwitchInterval(int) -> setMainSwitchInterval
    int getLocateInterval() -> getLocateInterval
    void setLocateInterval(int) -> setLocateInterval
    int getAppInterval() -> getAppInterval
    void setAppInterval(int) -> setAppInterval
    int getLocationMaxLines() -> getLocationMaxLines
    void setLocationMaxLines(int) -> setLocationMaxLines
com.alipay.mobilesecuritysdk.datainfo.LocationInfo -> com.alipay.mobilesecuritysdk.datainfo.LocationInfo:
    int DEFINE_NUM -> DEFINE_NUM
    double MAX_LONGITUDE -> MAX_LONGITUDE
    double MIN_LONGITUDE -> MIN_LONGITUDE
    double MAX_LATITUDE -> MAX_LATITUDE
    double MIN_LATITUDE -> MIN_LATITUDE
    java.util.List wifi -> wifi
    java.util.List tid -> tid
    java.lang.String time -> time
    java.lang.String longitude -> longitude
    java.lang.String latitude -> latitude
    java.lang.String cid -> cid
    java.lang.String lac -> lac
    java.lang.String phonetype -> phonetype
    java.lang.String mcc -> mcc
    java.lang.String mnc -> mnc
    java.util.List getTid() -> getTid
    void setTid(java.util.List) -> setTid
    java.util.List getWifi() -> getWifi
    void setWifi(java.util.List) -> setWifi
    java.lang.String getPhonetype() -> getPhonetype
    void setPhonetype(java.lang.String) -> setPhonetype
    java.lang.String getMcc() -> getMcc
    void setMcc(java.lang.String) -> setMcc
    java.lang.String getMnc() -> getMnc
    void setMnc(java.lang.String) -> setMnc
    boolean validate() -> validate
    java.lang.String toString(double) -> toString
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    java.lang.String getLongitude() -> getLongitude
    void setLongitude(java.lang.String) -> setLongitude
    void setLongitude(double) -> setLongitude
    void setLongitude(int) -> setLongitude
    java.lang.String getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    void setLatitude(int) -> setLatitude
    void setLatitude(java.lang.String) -> setLatitude
    java.lang.String getCid() -> getCid
    void setCid(java.lang.String) -> setCid
    java.lang.String getLac() -> getLac
    void setLac(java.lang.String) -> setLac
com.alipay.mobilesecuritysdk.datainfo.SdkConfig -> com.alipay.mobilesecuritysdk.datainfo.SdkConfig:
    com.alipay.mobilesecuritysdk.datainfo.SdkConfig configSingleton -> configSingleton
    long mainSwitchLUT -> mainSwitchLUT
    java.lang.String mainSwitchState -> mainSwitchState
    int mainSwitchInterval -> mainSwitchInterval
    long locateLUT -> locateLUT
    int locateInterval -> locateInterval
    long appLUT -> appLUT
    int appInterval -> appInterval
    int locationMaxLines -> locationMaxLines
    com.alipay.mobilesecuritysdk.datainfo.SdkConfig getInstance() -> getInstance
    long getMainSwitchLUT() -> getMainSwitchLUT
    void setMainSwitchLUT(long) -> setMainSwitchLUT
    java.lang.String getMainSwitchState() -> getMainSwitchState
    void setMainSwitchState(java.lang.String) -> setMainSwitchState
    int getMainSwitchInterval() -> getMainSwitchInterval
    void setMainSwitchInterval(int) -> setMainSwitchInterval
    long getLocateLUT() -> getLocateLUT
    void setLocateLUT(long) -> setLocateLUT
    int getLocateInterval() -> getLocateInterval
    void setLocateInterval(int) -> setLocateInterval
    long getAppLUT() -> getAppLUT
    void setAppLUT(long) -> setAppLUT
    int getAppInterval() -> getAppInterval
    void setAppInterval(int) -> setAppInterval
    int getLocationMaxLines() -> getLocationMaxLines
    void setLocationMaxLines(int) -> setLocationMaxLines
com.alipay.mobilesecuritysdk.datainfo.UploadInfo -> com.alipay.mobilesecuritysdk.datainfo.UploadInfo:
    java.util.List tid -> tid
    java.util.List locates -> locates
    java.util.List appinfos -> appinfos
    java.util.List getTid() -> getTid
    void setTid(java.util.List) -> setTid
    java.util.List getLocates() -> getLocates
    void setLocates(java.util.List) -> setLocates
    java.util.List getAppinfos() -> getAppinfos
    void setAppinfos(java.util.List) -> setAppinfos
com.alipay.mobilesecuritysdk.datainfo.WifiCollectInfo -> com.alipay.mobilesecuritysdk.datainfo.WifiCollectInfo:
    java.lang.String mbssid -> mbssid
    int mlevel -> mlevel
    java.lang.String mssid -> mssid
    boolean miscurrent -> miscurrent
    java.lang.String time -> time
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    boolean isMiscurrent() -> isMiscurrent
    void setMiscurrent(boolean) -> setMiscurrent
    java.lang.String getMbssid() -> getMbssid
    void setMbssid(java.lang.String) -> setMbssid
    java.lang.String getMssid() -> getMssid
    void setMssid(java.lang.String) -> setMssid
    int getMlevel() -> getMlevel
    void setMlevel(int) -> setMlevel
    boolean validate() -> validate
com.alipay.mobilesecuritysdk.deviceID.CollectDeviceInfo -> com.alipay.mobilesecuritysdk.deviceID.CollectDeviceInfo:
    com.alipay.mobilesecuritysdk.deviceID.CollectDeviceInfo collectSingleton -> collectSingleton
    com.alipay.mobilesecuritysdk.deviceID.CollectDeviceInfo getInstance() -> getInstance
    java.lang.String getMacAddress(android.content.Context) -> getMacAddress
    java.lang.String getCpuNum() -> getCpuNum
    java.lang.String getSDKVer() -> getSDKVer
    java.lang.String getOsVer() -> getOsVer
    java.lang.String getPhoneModel() -> getPhoneModel
    java.lang.String getResolution(android.content.Context) -> getResolution
    java.lang.String getNetworkType(android.content.Context) -> getNetworkType
    java.lang.String getImei(android.content.Context) -> getImei
    java.lang.String getImsi(android.content.Context) -> getImsi
    java.lang.String getCpuFre() -> getCpuFre
    long getTotalMemory() -> getTotalMemory
    long getSDCardMemory() -> getSDCardMemory
    java.lang.String getRomName() -> getRomName
    java.lang.String getBluMac() -> getBluMac
    java.lang.String getDeviceMx(android.content.Context) -> getDeviceMx
    java.lang.String getBandVer() -> getBandVer
    java.lang.String getPackageName(android.content.Context) -> getPackageName
com.alipay.mobilesecuritysdk.deviceID.DataShare -> com.alipay.mobilesecuritysdk.deviceID.DataShare:
    java.lang.String GetDataFromSharedPre(android.content.SharedPreferences,java.lang.String) -> GetDataFromSharedPre
    void SetDataToSharePre(android.content.SharedPreferences,java.util.Map) -> SetDataToSharePre
com.alipay.mobilesecuritysdk.deviceID.DeviceIdManager -> com.alipay.mobilesecuritysdk.deviceID.DeviceIdManager:
    android.content.Context mcontext -> mcontext
    java.util.Map strMap -> strMap
    java.lang.String GetApDid(java.util.Map) -> GetApDid
    void Update(android.content.Context,java.util.Map) -> Update
    void UpdateLog() -> UpdateLog
com.alipay.mobilesecuritysdk.deviceID.DeviceIdManager$1 -> com.alipay.mobilesecuritysdk.deviceID.DeviceIdManager$1:
    com.alipay.mobilesecuritysdk.deviceID.DeviceIdManager this$0 -> this$0
    android.content.Context val$context -> val$context
    java.util.Map val$args -> val$args
    void run() -> run
com.alipay.mobilesecuritysdk.deviceID.DeviceIdManager$2 -> com.alipay.mobilesecuritysdk.deviceID.DeviceIdManager$2:
    com.alipay.mobilesecuritysdk.deviceID.DeviceIdManager this$0 -> this$0
    void run() -> run
com.alipay.mobilesecuritysdk.deviceID.DeviceIdModel -> com.alipay.mobilesecuritysdk.deviceID.DeviceIdModel:
    java.lang.String PREFS_NAME -> PREFS_NAME
    java.lang.String PRIVATE_NAME -> PRIVATE_NAME
    java.lang.String SERVICEID -> SERVICEID
    java.lang.String VER -> VER
    java.lang.String mah1 -> mah1
    java.lang.String mah2 -> mah2
    java.lang.String mah3 -> mah3
    java.lang.String mah4 -> mah4
    java.lang.String mah5 -> mah5
    java.lang.String mah6 -> mah6
    java.lang.String mah7 -> mah7
    java.lang.String mah8 -> mah8
    java.lang.String mah9 -> mah9
    java.lang.String mah10 -> mah10
    java.lang.String mas1 -> mas1
    java.lang.String mas2 -> mas2
    java.lang.String mas3 -> mas3
    java.lang.String mas4 -> mas4
    java.lang.String mtid -> mtid
    java.lang.String mutdid -> mutdid
    java.lang.String mAppId -> mAppId
    java.lang.String mDeviceInfo -> mDeviceInfo
    java.lang.String mDeviceId -> mDeviceId
    java.lang.String mPriDeviceId -> mPriDeviceId
    java.lang.String mtime -> mtime
    java.lang.String mApdtk -> mApdtk
    java.lang.String mRule -> mRule
    java.lang.String mCheckCode -> mCheckCode
    com.alipay.mobilesecuritysdk.deviceID.DeviceMetaData dv -> dv
    com.alipay.mobilesecuritysdk.deviceID.Profile profile -> profile
    void Init(android.content.Context,java.util.Map) -> Init
    java.lang.String UpdateId(android.content.Context,java.util.Map) -> UpdateId
    java.util.Map GetUploadInfo() -> GetUploadInfo
    java.util.Map GetLocalInfo() -> GetLocalInfo
    boolean CheckPrivateData(java.util.Map) -> CheckPrivateData
    java.util.Map GetPrivateData(android.content.Context) -> GetPrivateData
    java.util.Map GetShareData(android.content.Context) -> GetShareData
    void WritePrivateData(android.content.Context,java.lang.String) -> WritePrivateData
    boolean hasInPublic() -> hasInPublic
    java.lang.String readDataFromSettings() -> readDataFromSettings
    void WriteDataToSettings(java.lang.String) -> WriteDataToSettings
    void WriteDataToSdCard(java.lang.String) -> WriteDataToSdCard
    java.lang.String readDataFromSdCard() -> readDataFromSdCard
    boolean hasDataInSettings() -> hasDataInSettings
    boolean hasDataInSdcard() -> hasDataInSdcard
    boolean checkCheckCode(java.lang.String,java.lang.String) -> checkCheckCode
    java.lang.String generaterCheckCode() -> generaterCheckCode
    java.lang.String getCheckCodeString() -> getCheckCodeString
    boolean checkApdid() -> checkApdid
    com.alipay.mobilesecuritysdk.deviceID.IdResponseInfo UploadData(android.content.Context) -> UploadData
    java.lang.String UpdateId(android.content.Context) -> UpdateId
    void Log(java.lang.String) -> Log
com.alipay.mobilesecuritysdk.deviceID.DeviceMetaData -> com.alipay.mobilesecuritysdk.deviceID.DeviceMetaData:
    java.lang.String mah1 -> mah1
    java.lang.String mah2 -> mah2
    java.lang.String mah3 -> mah3
    java.lang.String mah4 -> mah4
    java.lang.String mah5 -> mah5
    java.lang.String mah6 -> mah6
    java.lang.String mah7 -> mah7
    java.lang.String mah8 -> mah8
    java.lang.String mah9 -> mah9
    java.lang.String mah10 -> mah10
    java.lang.String mas1 -> mas1
    java.lang.String mas2 -> mas2
    java.lang.String mas3 -> mas3
    java.lang.String mas4 -> mas4
    java.lang.String mtime -> mtime
    java.lang.String mtid -> mtid
    java.lang.String mutdid -> mutdid
    java.lang.String mappId -> mappId
    java.lang.String AUTH -> AUTH
    java.lang.String DATABASE_NAME -> DATABASE_NAME
    int DATABASE_VER -> DATABASE_VER
    java.lang.String DEVICE_TABLE_NAME -> DEVICE_TABLE_NAME
    java.lang.String mdeviceId -> mdeviceId
    java.lang.String mpriDeviceId -> mpriDeviceId
    java.lang.String mapdtk -> mapdtk
    java.lang.String mcheckCode -> mcheckCode
    java.lang.String mrule -> mrule
    java.lang.String getMappId() -> getMappId
    void setMappId(java.lang.String) -> setMappId
    java.lang.String getMdeviceId() -> getMdeviceId
    void setMdeviceId(java.lang.String) -> setMdeviceId
    java.lang.String getMpriDeviceId() -> getMpriDeviceId
    void setMpriDeviceId(java.lang.String) -> setMpriDeviceId
    java.lang.String getMcheckCode() -> getMcheckCode
    void setMcheckCode(java.lang.String) -> setMcheckCode
    java.lang.String getMrule() -> getMrule
    void setMrule(java.lang.String) -> setMrule
    java.lang.String getMtid() -> getMtid
    void setMtid(java.lang.String) -> setMtid
    java.lang.String getMutdid() -> getMutdid
    void setMutdid(java.lang.String) -> setMutdid
    java.lang.String getMah1() -> getMah1
    void setMah1(java.lang.String) -> setMah1
    java.lang.String getMah2() -> getMah2
    void setMah2(java.lang.String) -> setMah2
    java.lang.String getMah3() -> getMah3
    void setMah3(java.lang.String) -> setMah3
    java.lang.String getMah4() -> getMah4
    void setMah4(java.lang.String) -> setMah4
    java.lang.String getMah5() -> getMah5
    void setMah5(java.lang.String) -> setMah5
    java.lang.String getMah6() -> getMah6
    void setMah6(java.lang.String) -> setMah6
    java.lang.String getMah7() -> getMah7
    void setMah7(java.lang.String) -> setMah7
    java.lang.String getMah8() -> getMah8
    void setMah8(java.lang.String) -> setMah8
    java.lang.String getMah9() -> getMah9
    void setMah9(java.lang.String) -> setMah9
    java.lang.String getMah10() -> getMah10
    void setMah10(java.lang.String) -> setMah10
    java.lang.String getMtime() -> getMtime
    void setMtime(java.lang.String) -> setMtime
    java.lang.String getMapdtk() -> getMapdtk
    void setMapdtk(java.lang.String) -> setMapdtk
    java.lang.String getMas1() -> getMas1
    void setMas1(java.lang.String) -> setMas1
    java.lang.String getMas2() -> getMas2
    void setMas2(java.lang.String) -> setMas2
    java.lang.String getMas3() -> getMas3
    void setMas3(java.lang.String) -> setMas3
    java.lang.String getMas4() -> getMas4
    void setMas4(java.lang.String) -> setMas4
com.alipay.mobilesecuritysdk.deviceID.IdResponseInfo -> com.alipay.mobilesecuritysdk.deviceID.IdResponseInfo:
    java.lang.String merrorcode -> merrorcode
    java.lang.String mversion -> mversion
    java.lang.String mapdid -> mapdid
    java.lang.String mapdtk -> mapdtk
    java.lang.String mrule -> mrule
    java.lang.String mtime -> mtime
    java.lang.String mcheckcode -> mcheckcode
    java.lang.String fuction -> fuction
    java.util.List arrList -> arrList
    boolean msuccess -> msuccess
    java.lang.String getFuction() -> getFuction
    void setFuction(java.lang.String) -> setFuction
    java.util.List getArrList() -> getArrList
    void setArrList(java.util.List) -> setArrList
    java.lang.String getMcheckcode() -> getMcheckcode
    void setMcheckcode(java.lang.String) -> setMcheckcode
    java.lang.String getMtime() -> getMtime
    void setMtime(java.lang.String) -> setMtime
    boolean isMsuccess() -> isMsuccess
    void setMsuccess(boolean) -> setMsuccess
    java.lang.String isMerrorcode() -> isMerrorcode
    void setMerrorcode(java.lang.String) -> setMerrorcode
    java.lang.String getMversion() -> getMversion
    void setMversion(java.lang.String) -> setMversion
    java.lang.String getMapdid() -> getMapdid
    void setMapdid(java.lang.String) -> setMapdid
    java.lang.String getMapdtk() -> getMapdtk
    void setMapdtk(java.lang.String) -> setMapdtk
    java.lang.String getMrule() -> getMrule
    void setMrule(java.lang.String) -> setMrule
com.alipay.mobilesecuritysdk.deviceID.LOG -> com.alipay.mobilesecuritysdk.deviceID.LOG:
    java.io.File logFileDir -> logFileDir
    java.io.File logFileName -> logFileName
    java.lang.String model -> model
    java.lang.String pkgName -> pkgName
    boolean DBG -> DBG
    java.lang.String TAG -> TAG
    android.content.Context mcontext -> mcontext
    void init(android.content.Context) -> init
    void uploadLogFile() -> uploadLogFile
    boolean doUpload(java.lang.String) -> doUpload
    void logMessage(java.util.List) -> logMessage
    long checkLogFile() -> checkLogFile
    java.lang.String getCurLogFileName() -> getCurLogFileName
    void getInfo(android.content.Context) -> getInfo
    java.lang.String toJsonString(java.lang.String) -> toJsonString
    java.lang.String getStackString(java.lang.Throwable) -> getStackString
com.alipay.mobilesecuritysdk.deviceID.Profile -> com.alipay.mobilesecuritysdk.deviceID.Profile:
    java.lang.String devicever -> devicever
    java.lang.String generatePrivateData(java.util.Map) -> generatePrivateData
    java.lang.String MaptoString(java.util.Map) -> MaptoString
    java.lang.String generateUploadData(java.util.Map) -> generateUploadData
    com.alipay.mobilesecuritysdk.deviceID.IdResponseInfo ParseResponse(java.lang.String) -> ParseResponse
    java.util.Map getMap(java.lang.String) -> getMap
    java.lang.String GetDataFromSharedPre(android.content.SharedPreferences,java.lang.String) -> GetDataFromSharedPre
    void SetDataToSharePre(android.content.SharedPreferences,java.util.Map) -> SetDataToSharePre
com.alipay.mobilesecuritysdk.deviceID.SecurityUtils -> com.alipay.mobilesecuritysdk.deviceID.SecurityUtils:
    java.lang.String TAG -> TAG
    java.lang.String str -> str
    java.lang.String getSeed() -> getSeed
    java.lang.String encrypt(java.lang.String,java.lang.String) -> encrypt
    java.lang.String decrypt(java.lang.String,java.lang.String) -> decrypt
    byte[] getRawKey(byte[]) -> getRawKey
    byte[] encrypt(byte[],byte[]) -> encrypt
    byte[] decrypt(byte[],byte[]) -> decrypt
    java.lang.String toHex(java.lang.String) -> toHex
    java.lang.String fromHex(java.lang.String) -> fromHex
    byte[] toByte(java.lang.String) -> toByte
    java.lang.String toHex(byte[]) -> toHex
    void appendHex(java.lang.StringBuffer,byte) -> appendHex
com.alipay.mobilesecuritysdk.face.SecurityClientMobile -> com.alipay.mobilesecuritysdk.face.SecurityClientMobile:
    java.lang.Thread workThread -> workThread
    boolean isError -> isError
    boolean isDebug -> isDebug
    java.lang.String GetApdid(android.content.Context,java.util.Map) -> GetApdid
    void start(android.content.Context,java.util.List,boolean) -> start
    void stop() -> stop
    void setError(boolean) -> setError
    void setDebug(boolean) -> setDebug
    boolean isDebug() -> isDebug
    boolean access$0() -> access$0
com.alipay.mobilesecuritysdk.face.SecurityClientMobile$1 -> com.alipay.mobilesecuritysdk.face.SecurityClientMobile$1:
    android.content.Context val$context -> val$context
    java.util.List val$tid -> val$tid
    boolean val$isCollected -> val$isCollected
    void run() -> run
com.alipay.mobilesecuritysdk.model.CollectedInfo -> com.alipay.mobilesecuritysdk.model.CollectedInfo:
    int MODULUS_FIX -> MODULUS_FIX
    com.alipay.mobilesecuritysdk.model.DataProfile profile -> profile
    java.lang.String GetLocationInfo(android.content.Context,java.util.List) -> GetLocationInfo
    java.util.List collectLocateInfos(android.content.Context) -> collectLocateInfos
    void SetPhoneType(android.telephony.TelephonyManager,com.alipay.mobilesecuritysdk.datainfo.LocationInfo,int) -> SetPhoneType
    java.util.List collectappInfos(android.content.Context) -> collectappInfos
    java.lang.String getSignatureHash(byte[]) -> getSignatureHash
    java.util.List GetWifiInfos(android.content.Context) -> GetWifiInfos
com.alipay.mobilesecuritysdk.model.DataProfile -> com.alipay.mobilesecuritysdk.model.DataProfile:
    java.util.List tid -> tid
    java.util.List getTid() -> getTid
    void setTid(java.util.List) -> setTid
    com.alipay.mobilesecuritysdk.datainfo.SdkConfig getConfigs(java.lang.String) -> getConfigs
    void saveConfigs(com.alipay.mobilesecuritysdk.datainfo.SdkConfig,java.lang.String) -> saveConfigs
    com.alipay.mobilesecuritysdk.datainfo.GeoResponseInfo analysisServerRespond(java.lang.String) -> analysisServerRespond
    com.alipay.mobilesecuritysdk.datainfo.SdkConfig GetDefaultConfig() -> GetDefaultConfig
    java.lang.String AppToString(java.lang.String,java.util.List) -> AppToString
    java.lang.String LocationToString(java.lang.String,java.util.List) -> LocationToString
    org.json.JSONArray GetWifiToJson(java.util.List) -> GetWifiToJson
    org.json.JSONArray GetTIDJson() -> GetTIDJson
    org.json.JSONArray GetJsonFromFile(java.lang.String) -> GetJsonFromFile
    void cleanUploadFiles(java.lang.String) -> cleanUploadFiles
com.alipay.mobilesecuritysdk.model.SecLocationListener -> com.alipay.mobilesecuritysdk.model.SecLocationListener:
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.alipay.mobilesecuritysdk.model.Upload -> com.alipay.mobilesecuritysdk.model.Upload:
    android.content.Context mcontext -> mcontext
    com.alipay.mobilesecuritysdk.model.DataProfile profile -> profile
    com.alipay.mobilesecuritysdk.datainfo.UploadInfo info -> info
    com.alipay.mobilesecuritysdk.datainfo.UploadInfo getInfo() -> getInfo
    void setInfo(com.alipay.mobilesecuritysdk.datainfo.UploadInfo) -> setInfo
    com.alipay.mobilesecuritysdk.datainfo.GeoResponseInfo uploadData(java.util.List,com.alipay.mobilesecuritysdk.datainfo.SdkConfig) -> uploadData
    com.alipay.mobilesecuritysdk.datainfo.GeoResponseInfo communicateSwitch() -> communicateSwitch
    com.alipay.mobilesecuritysdk.datainfo.GeoResponseInfo uploadCollectedData(java.lang.String,java.lang.String,java.lang.String) -> uploadCollectedData
com.alipay.mobilesecuritysdk.util.CommonUtils -> com.alipay.mobilesecuritysdk.util.CommonUtils:
    boolean outOfDate(long,long,int) -> outOfDate
    boolean isNetWorkActive(android.content.Context) -> isNetWorkActive
    java.lang.String convertDate2String(java.util.Date) -> convertDate2String
    boolean isBlank(java.lang.String) -> isBlank
    boolean IsEmpty(java.lang.String) -> IsEmpty
    boolean isBlankCollection(java.util.List) -> isBlankCollection
    boolean equalsIgnoreCase(java.lang.String,java.lang.String) -> equalsIgnoreCase
    int string2int(java.lang.String) -> string2int
    long string2long(java.lang.String) -> string2long
    java.lang.String MD5(java.lang.String) -> MD5
    org.json.JSONObject GetJsonFromFile(java.lang.String) -> GetJsonFromFile
    java.lang.String ReadFile(java.lang.String) -> ReadFile
    void WriteFile(java.lang.String,java.lang.String) -> WriteFile
    java.lang.String textCompress(java.lang.String) -> textCompress
    boolean GetSdCardFile() -> GetSdCardFile
com.alipay.sdk.a -> com.alipay.sdk.a:
    boolean a -> a
com.alipay.sdk.app.AuthTask -> com.alipay.sdk.app.AuthTask:
    android.app.Activity a -> a
    java.lang.String auth(java.lang.String) -> auth
com.alipay.sdk.app.H5AuthActivity -> com.alipay.sdk.app.H5AuthActivity:
    android.webkit.WebView a -> a
    com.alipay.sdk.widget.a b -> b
    android.os.Handler c -> c
    boolean d -> d
    java.lang.Runnable e -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void finish() -> finish
    void a() -> a
    void b() -> b
    void a(org.json.JSONObject) -> a
    void c() -> c
    void d() -> d
    void a(java.lang.String) -> a
    void a(com.alipay.sdk.authjs.a) -> a
    void e() -> e
    void f() -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void a(com.alipay.sdk.app.H5AuthActivity) -> a
    void b(com.alipay.sdk.app.H5AuthActivity) -> b
    void c(com.alipay.sdk.app.H5AuthActivity) -> c
    android.webkit.WebView d(com.alipay.sdk.app.H5AuthActivity) -> d
    boolean e(com.alipay.sdk.app.H5AuthActivity) -> e
    boolean a(com.alipay.sdk.app.H5AuthActivity,boolean) -> a
    void f(com.alipay.sdk.app.H5AuthActivity) -> f
    java.lang.Runnable g(com.alipay.sdk.app.H5AuthActivity) -> g
    android.os.Handler h(com.alipay.sdk.app.H5AuthActivity) -> h
    void i(com.alipay.sdk.app.H5AuthActivity) -> i
    void a(com.alipay.sdk.app.H5AuthActivity,java.lang.String) -> a
    void a(com.alipay.sdk.app.H5AuthActivity,com.alipay.sdk.authjs.a) -> a
com.alipay.sdk.app.H5AuthActivity$a -> com.alipay.sdk.app.H5AuthActivity$a:
    com.alipay.sdk.app.H5AuthActivity a -> a
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
com.alipay.sdk.app.H5AuthActivity$b -> com.alipay.sdk.app.H5AuthActivity$b:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.alipay.sdk.app.H5PayActivity -> com.alipay.sdk.app.H5PayActivity:
    android.webkit.WebView a -> a
    com.alipay.sdk.widget.a b -> b
    android.os.Handler c -> c
    boolean d -> d
    boolean e -> e
    java.lang.Runnable f -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void finish() -> finish
    void a() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void b() -> b
    void c() -> c
    boolean a(com.alipay.sdk.app.H5PayActivity) -> a
    boolean b(com.alipay.sdk.app.H5PayActivity) -> b
    boolean a(com.alipay.sdk.app.H5PayActivity,boolean) -> a
    void c(com.alipay.sdk.app.H5PayActivity) -> c
    java.lang.Runnable d(com.alipay.sdk.app.H5PayActivity) -> d
    android.os.Handler e(com.alipay.sdk.app.H5PayActivity) -> e
    void f(com.alipay.sdk.app.H5PayActivity) -> f
com.alipay.sdk.app.H5PayActivity$a -> com.alipay.sdk.app.H5PayActivity$a:
    com.alipay.sdk.app.H5PayActivity a -> a
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
com.alipay.sdk.app.H5PayActivity$b -> com.alipay.sdk.app.H5PayActivity$b:
    com.alipay.sdk.app.H5PayActivity a -> a
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message) -> onFormResubmission
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.alipay.sdk.app.PayTask -> com.alipay.sdk.app.PayTask:
    android.app.Activity b -> b
    java.lang.String c -> c
    java.lang.Object a -> a
    boolean d -> d
    java.lang.String pay(java.lang.String) -> pay
    java.lang.String getVersion() -> getVersion
    boolean checkAccountIfExist() -> checkAccountIfExist
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String a(com.alipay.sdk.protocol.a) -> a
com.alipay.sdk.app.a -> com.alipay.sdk.app.a:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.alipay.sdk.app.aa -> com.alipay.sdk.app.aa:
    com.alipay.sdk.app.H5PayActivity$b a -> a
    void run() -> run
com.alipay.sdk.app.ab -> com.alipay.sdk.app.ab:
    java.lang.String a -> a
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String a(int,java.lang.String,java.lang.String) -> a
com.alipay.sdk.app.ac -> com.alipay.sdk.app.ac:
    com.alipay.sdk.app.ac a -> a
    com.alipay.sdk.app.ac b -> b
    com.alipay.sdk.app.ac c -> c
    com.alipay.sdk.app.ac d -> d
    com.alipay.sdk.app.ac e -> e
    com.alipay.sdk.app.ac f -> f
    int g -> g
    java.lang.String h -> h
    com.alipay.sdk.app.ac[] i -> i
    com.alipay.sdk.app.ac[] values() -> values
    com.alipay.sdk.app.ac valueOf(java.lang.String) -> valueOf
    void b(int) -> b
    int a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    com.alipay.sdk.app.ac a(int) -> a
com.alipay.sdk.app.b -> com.alipay.sdk.app.b:
    java.lang.String a -> a
    com.alipay.sdk.app.H5AuthActivity b -> b
    void run() -> run
com.alipay.sdk.app.c -> com.alipay.sdk.app.c:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void run() -> run
com.alipay.sdk.app.d -> com.alipay.sdk.app.d:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void run() -> run
com.alipay.sdk.app.e -> com.alipay.sdk.app.e:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void run() -> run
com.alipay.sdk.app.f -> com.alipay.sdk.app.f:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void run() -> run
com.alipay.sdk.app.g -> com.alipay.sdk.app.g:
    java.lang.String a -> a
    com.alipay.sdk.app.H5AuthActivity b -> b
    void run() -> run
com.alipay.sdk.app.h -> com.alipay.sdk.app.h:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.i -> com.alipay.sdk.app.i:
    com.alipay.sdk.app.h a -> a
    void run() -> run
com.alipay.sdk.app.j -> com.alipay.sdk.app.j:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.k -> com.alipay.sdk.app.k:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.l -> com.alipay.sdk.app.l:
    com.alipay.sdk.app.H5AuthActivity a -> a
    void a(com.alipay.sdk.authjs.a) -> a
com.alipay.sdk.app.m -> com.alipay.sdk.app.m:
    android.webkit.SslErrorHandler a -> a
    com.alipay.sdk.app.H5AuthActivity$b b -> b
    void run() -> run
com.alipay.sdk.app.n -> com.alipay.sdk.app.n:
    com.alipay.sdk.app.m a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.o -> com.alipay.sdk.app.o:
    com.alipay.sdk.app.m a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.p -> com.alipay.sdk.app.p:
    com.alipay.sdk.app.H5AuthActivity$b a -> a
    void run() -> run
com.alipay.sdk.app.q -> com.alipay.sdk.app.q:
    com.alipay.sdk.app.H5PayActivity a -> a
    void run() -> run
com.alipay.sdk.app.r -> com.alipay.sdk.app.r:
    android.webkit.JsResult a -> a
    com.alipay.sdk.app.H5PayActivity$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.s -> com.alipay.sdk.app.s:
    android.webkit.JsResult a -> a
    com.alipay.sdk.app.H5PayActivity$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.t -> com.alipay.sdk.app.t:
    android.webkit.JsResult a -> a
    com.alipay.sdk.app.H5PayActivity$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.u -> com.alipay.sdk.app.u:
    android.webkit.JsResult a -> a
    com.alipay.sdk.app.H5PayActivity$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.v -> com.alipay.sdk.app.v:
    android.webkit.JsPromptResult a -> a
    com.alipay.sdk.app.H5PayActivity$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.w -> com.alipay.sdk.app.w:
    android.webkit.JsPromptResult a -> a
    com.alipay.sdk.app.H5PayActivity$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.x -> com.alipay.sdk.app.x:
    android.webkit.SslErrorHandler a -> a
    com.alipay.sdk.app.H5PayActivity$b b -> b
    void run() -> run
com.alipay.sdk.app.y -> com.alipay.sdk.app.y:
    com.alipay.sdk.app.x a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.app.z -> com.alipay.sdk.app.z:
    com.alipay.sdk.app.x a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.auth.APAuthInfo -> com.alipay.sdk.auth.APAuthInfo:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String getAppId() -> getAppId
    java.lang.String getProductId() -> getProductId
    java.lang.String getPid() -> getPid
    java.lang.String getRedirectUri() -> getRedirectUri
com.alipay.sdk.auth.AlipaySDK -> com.alipay.sdk.auth.AlipaySDK:
    void auth(android.app.Activity,com.alipay.sdk.auth.APAuthInfo) -> auth
com.alipay.sdk.auth.AuthActivity -> com.alipay.sdk.auth.AuthActivity:
    java.lang.String a -> a
    java.lang.String b -> b
    android.webkit.WebView c -> c
    java.lang.String d -> d
    com.alipay.sdk.widget.a e -> e
    android.os.Handler f -> f
    boolean g -> g
    java.lang.Runnable h -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void a() -> a
    void a(org.json.JSONObject) -> a
    boolean a(java.lang.String) -> a
    void b() -> b
    void c() -> c
    void b(java.lang.String) -> b
    void a(com.alipay.sdk.authjs.a) -> a
    void d() -> d
    void e() -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void a(com.alipay.sdk.auth.AuthActivity) -> a
    void b(com.alipay.sdk.auth.AuthActivity) -> b
    void c(com.alipay.sdk.auth.AuthActivity) -> c
    android.webkit.WebView d(com.alipay.sdk.auth.AuthActivity) -> d
    boolean e(com.alipay.sdk.auth.AuthActivity) -> e
    boolean a(com.alipay.sdk.auth.AuthActivity,boolean) -> a
    boolean a(com.alipay.sdk.auth.AuthActivity,java.lang.String) -> a
    void f(com.alipay.sdk.auth.AuthActivity) -> f
    java.lang.Runnable g(com.alipay.sdk.auth.AuthActivity) -> g
    android.os.Handler h(com.alipay.sdk.auth.AuthActivity) -> h
    void i(com.alipay.sdk.auth.AuthActivity) -> i
    void b(com.alipay.sdk.auth.AuthActivity,java.lang.String) -> b
    void a(com.alipay.sdk.auth.AuthActivity,com.alipay.sdk.authjs.a) -> a
com.alipay.sdk.auth.AuthActivity$a -> com.alipay.sdk.auth.AuthActivity$a:
    com.alipay.sdk.auth.AuthActivity a -> a
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
com.alipay.sdk.auth.AuthActivity$b -> com.alipay.sdk.auth.AuthActivity$b:
    com.alipay.sdk.auth.AuthActivity a -> a
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.alipay.sdk.auth.a -> com.alipay.sdk.auth.a:
    com.alipay.sdk.auth.AuthActivity a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.alipay.sdk.auth.b -> com.alipay.sdk.auth.b:
    java.lang.String a -> a
    com.alipay.sdk.auth.AuthActivity b -> b
    void run() -> run
com.alipay.sdk.auth.c -> com.alipay.sdk.auth.c:
    com.alipay.sdk.auth.AuthActivity a -> a
    void run() -> run
com.alipay.sdk.auth.d -> com.alipay.sdk.auth.d:
    com.alipay.sdk.auth.AuthActivity a -> a
    void run() -> run
com.alipay.sdk.auth.e -> com.alipay.sdk.auth.e:
    com.alipay.sdk.auth.AuthActivity a -> a
    void run() -> run
com.alipay.sdk.auth.f -> com.alipay.sdk.auth.f:
    com.alipay.sdk.auth.AuthActivity a -> a
    void run() -> run
com.alipay.sdk.auth.g -> com.alipay.sdk.auth.g:
    java.lang.String a -> a
    com.alipay.sdk.auth.AuthActivity b -> b
    void run() -> run
com.alipay.sdk.auth.h -> com.alipay.sdk.auth.h:
    com.alipay.sdk.auth.AuthActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.auth.i -> com.alipay.sdk.auth.i:
    com.alipay.sdk.auth.h a -> a
    void run() -> run
com.alipay.sdk.auth.j -> com.alipay.sdk.auth.j:
    com.alipay.sdk.auth.AuthActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.auth.k -> com.alipay.sdk.auth.k:
    com.alipay.sdk.auth.AuthActivity a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.auth.l -> com.alipay.sdk.auth.l:
    com.alipay.sdk.auth.AuthActivity a -> a
    void a(com.alipay.sdk.authjs.a) -> a
com.alipay.sdk.auth.m -> com.alipay.sdk.auth.m:
    android.webkit.SslErrorHandler a -> a
    com.alipay.sdk.auth.AuthActivity$b b -> b
    void run() -> run
com.alipay.sdk.auth.n -> com.alipay.sdk.auth.n:
    com.alipay.sdk.auth.m a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.auth.o -> com.alipay.sdk.auth.o:
    com.alipay.sdk.auth.m a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.alipay.sdk.auth.p -> com.alipay.sdk.auth.p:
    java.lang.String a -> a
    int b -> b
    boolean a(android.content.Context) -> a
    void a(android.app.Activity,com.alipay.sdk.auth.APAuthInfo) -> a
    void b(android.app.Activity,com.alipay.sdk.auth.APAuthInfo) -> b
    void c(android.app.Activity,com.alipay.sdk.auth.APAuthInfo) -> c
    void a(android.app.Activity,java.lang.String) -> a
com.alipay.sdk.authjs.a -> com.alipay.sdk.authjs.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String m -> m
    org.json.JSONObject l -> l
    boolean n -> n
    java.lang.String a(com.alipay.sdk.authjs.a$a) -> a
    boolean b() -> b
    void a(boolean) -> a
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    java.lang.String e() -> e
    void c(java.lang.String) -> c
    java.lang.String f() -> f
    void d(java.lang.String) -> d
    org.json.JSONObject g() -> g
    void a(org.json.JSONObject) -> a
    java.lang.String a() -> a
com.alipay.sdk.authjs.a$1 -> com.alipay.sdk.authjs.a$1:
    int[] a -> a
com.alipay.sdk.authjs.a$a -> com.alipay.sdk.authjs.a$a:
    com.alipay.sdk.authjs.a$a a -> a
    com.alipay.sdk.authjs.a$a b -> b
    com.alipay.sdk.authjs.a$a c -> c
    com.alipay.sdk.authjs.a$a d -> d
    com.alipay.sdk.authjs.a$a e -> e
    com.alipay.sdk.authjs.a$a[] f -> f
    com.alipay.sdk.authjs.a$a[] values() -> values
    com.alipay.sdk.authjs.a$a valueOf(java.lang.String) -> valueOf
com.alipay.sdk.authjs.b -> com.alipay.sdk.authjs.b:
    void a(com.alipay.sdk.authjs.a) -> a
com.alipay.sdk.authjs.c -> com.alipay.sdk.authjs.c:
    com.alipay.sdk.authjs.b a -> a
    android.content.Context b -> b
    void a(java.lang.String) -> a
    void a(com.alipay.sdk.authjs.a) -> a
    void a(java.lang.String,com.alipay.sdk.authjs.a$a) -> a
    void a(java.lang.Runnable) -> a
    com.alipay.sdk.authjs.a$a b(com.alipay.sdk.authjs.a) -> b
    void c(com.alipay.sdk.authjs.a) -> c
    com.alipay.sdk.authjs.a$a a(com.alipay.sdk.authjs.c,com.alipay.sdk.authjs.a) -> a
    void a(com.alipay.sdk.authjs.c,java.lang.String,com.alipay.sdk.authjs.a$a) -> a
    com.alipay.sdk.authjs.b a(com.alipay.sdk.authjs.c) -> a
com.alipay.sdk.authjs.d -> com.alipay.sdk.authjs.d:
    com.alipay.sdk.authjs.a a -> a
    com.alipay.sdk.authjs.c b -> b
    void run() -> run
com.alipay.sdk.authjs.e -> com.alipay.sdk.authjs.e:
    com.alipay.sdk.authjs.a a -> a
    com.alipay.sdk.authjs.c b -> b
    void run() -> run
com.alipay.sdk.cons.a -> com.alipay.sdk.cons.a:
    boolean a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
com.alipay.sdk.cons.b -> com.alipay.sdk.cons.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
com.alipay.sdk.cons.c -> com.alipay.sdk.cons.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
com.alipay.sdk.data.a -> com.alipay.sdk.data.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    java.lang.String toString() -> toString
    java.lang.String f(java.lang.String) -> f
com.alipay.sdk.data.b -> com.alipay.sdk.data.b:
    java.lang.String a -> a
    com.alipay.sdk.data.e a(com.alipay.sdk.data.c,java.lang.String,org.json.JSONObject) -> a
    com.alipay.sdk.data.e a(org.json.JSONObject,boolean) -> a
    void a(com.alipay.sdk.data.c,com.alipay.sdk.data.e,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
    java.lang.String d(java.lang.String) -> d
    java.lang.String e(java.lang.String) -> e
    void a(com.alipay.sdk.data.c,org.apache.http.HttpResponse) -> a
    byte[] a(byte[]) -> a
    com.alipay.sdk.data.e a() -> a
com.alipay.sdk.data.c -> com.alipay.sdk.data.c:
    java.lang.String a -> a
    org.apache.http.Header[] b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    void a(org.apache.http.Header[]) -> a
    org.apache.http.Header[] b() -> b
    java.util.ArrayList a() -> a
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    void e() -> e
com.alipay.sdk.data.d -> com.alipay.sdk.data.d:
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.alipay.sdk.data.d g -> g
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String c() -> c
    com.alipay.sdk.data.d a() -> a
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(com.alipay.sdk.tid.b) -> a
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String b() -> b
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String a(android.content.Context,java.util.HashMap) -> a
com.alipay.sdk.data.e -> com.alipay.sdk.data.e:
    com.alipay.sdk.data.a a -> a
    org.json.JSONObject e -> e
    org.json.JSONObject f -> f
    long g -> g
    java.lang.ref.WeakReference b -> b
    boolean c -> c
    boolean d -> d
    void a(boolean) -> a
    boolean a() -> a
    java.lang.String b() -> b
    void b(boolean) -> b
    long c() -> c
    void a(long) -> a
    com.alipay.sdk.data.c d() -> d
    void a(com.alipay.sdk.data.c) -> a
    void a(org.json.JSONObject) -> a
    org.json.JSONObject a(java.lang.String) -> a
    boolean e() -> e
    java.lang.String toString() -> toString
    com.alipay.sdk.data.a f() -> f
com.alipay.sdk.data.f -> com.alipay.sdk.data.f:
    int a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    org.json.JSONObject i -> i
    java.lang.String j -> j
    boolean k -> k
    com.alipay.sdk.data.a l -> l
    org.apache.http.Header[] m -> m
    com.alipay.sdk.data.a a() -> a
    void b() -> b
    int c() -> c
    void a(int) -> a
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void a(long) -> a
    void a(org.json.JSONObject) -> a
    void e(java.lang.String) -> e
    void a(com.alipay.sdk.data.a) -> a
com.alipay.sdk.encrypt.a -> com.alipay.sdk.encrypt.a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    char h -> h
    byte[] i -> i
    char[] j -> j
    boolean a(char) -> a
    boolean b(char) -> b
    boolean c(char) -> c
    java.lang.String a(byte[]) -> a
    byte[] a(java.lang.String) -> a
    int a(char[]) -> a
com.alipay.sdk.encrypt.b -> com.alipay.sdk.encrypt.b:
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(int,java.lang.String,java.lang.String) -> a
com.alipay.sdk.encrypt.c -> com.alipay.sdk.encrypt.c:
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String b(byte[]) -> b
com.alipay.sdk.encrypt.d -> com.alipay.sdk.encrypt.d:
    java.lang.String b -> b
    java.lang.String a -> a
    java.security.PublicKey b(java.lang.String,java.lang.String) -> b
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String c(java.lang.String,java.lang.String) -> c
    java.lang.String d(java.lang.String,java.lang.String) -> d
    boolean a(java.lang.String,java.lang.String,java.lang.String) -> a
com.alipay.sdk.encrypt.e -> com.alipay.sdk.encrypt.e:
    java.lang.String a -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
com.alipay.sdk.exception.NetErrorException -> com.alipay.sdk.exception.NetErrorException:
    long serialVersionUID -> serialVersionUID
    int NET_CONNECTION_ERROR -> NET_CONNECTION_ERROR
    int SERVER_ERROR -> SERVER_ERROR
    int SSL_ERROR -> SSL_ERROR
    int errorCode -> errorCode
    int getErrorCode() -> getErrorCode
    void setErrorCode(int) -> setErrorCode
    void printException(java.lang.String,java.lang.Throwable) -> printException
com.alipay.sdk.net.a -> com.alipay.sdk.net.a:
    android.content.Context b -> b
    java.lang.String a -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.net.URL b() -> b
    org.apache.http.entity.ByteArrayEntity a(com.alipay.sdk.data.c,java.lang.String) -> a
    org.apache.http.HttpResponse b(java.lang.String) -> b
    org.apache.http.HttpResponse a(java.lang.String,com.alipay.sdk.data.c) -> a
    org.apache.http.HttpHost c() -> c
    org.apache.http.HttpHost d() -> d
    org.apache.http.HttpHost e() -> e
    android.net.NetworkInfo f() -> f
    java.lang.String g() -> g
com.alipay.sdk.net.b -> com.alipay.sdk.net.b:
    java.lang.String a -> a
    com.alipay.sdk.net.b c -> c
    org.apache.http.impl.client.DefaultHttpClient b -> b
    com.alipay.sdk.net.b c() -> c
    void d() -> d
    com.alipay.sdk.net.b a() -> a
    void e() -> e
    void b() -> b
    org.apache.http.params.HttpParams f() -> f
    org.apache.http.conn.ClientConnectionManager g() -> g
    org.apache.http.HttpResponse a(org.apache.http.client.methods.HttpUriRequest) -> a
    org.apache.http.HttpResponse a(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> a
    org.apache.http.HttpResponse a(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> a
    org.apache.http.HttpResponse a(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> a
    java.lang.Object a(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> a
    java.lang.Object a(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> a
    java.lang.Object a(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> a
    java.lang.Object a(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> a
com.alipay.sdk.net.c -> com.alipay.sdk.net.c:
    com.alipay.sdk.net.a a -> a
    org.apache.http.HttpResponse a(android.content.Context,java.lang.String,java.lang.String,com.alipay.sdk.data.c) -> a
    java.lang.String a(org.apache.http.HttpResponse) -> a
    void a() -> a
com.alipay.sdk.net.d -> com.alipay.sdk.net.d:
    int a -> a
    com.alipay.sdk.data.c b -> b
    com.alipay.sdk.protocol.c a(android.content.Context,com.alipay.sdk.data.e,boolean) -> a
    org.json.JSONObject a(android.content.Context,com.alipay.sdk.data.e,com.alipay.sdk.data.f) -> a
    java.lang.String a(java.lang.String) -> a
    org.json.JSONObject a(android.content.Context,com.alipay.sdk.data.e,com.alipay.sdk.data.f,java.lang.String,java.lang.String) -> a
    org.json.JSONObject a(com.alipay.sdk.data.f,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,com.alipay.sdk.data.c,com.alipay.sdk.data.f) -> a
    org.json.JSONObject a(java.lang.String,com.alipay.sdk.data.f) -> a
    void a(org.json.JSONObject) -> a
com.alipay.sdk.pay.Base64 -> com.alipay.sdk.pay.Base64:
    int BASELENGTH -> BASELENGTH
    int LOOKUPLENGTH -> LOOKUPLENGTH
    int TWENTYFOURBITGROUP -> TWENTYFOURBITGROUP
    int EIGHTBIT -> EIGHTBIT
    int SIXTEENBIT -> SIXTEENBIT
    int FOURBYTE -> FOURBYTE
    int SIGN -> SIGN
    char PAD -> PAD
    byte[] base64Alphabet -> base64Alphabet
    char[] lookUpBase64Alphabet -> lookUpBase64Alphabet
    boolean isWhiteSpace(char) -> isWhiteSpace
    boolean isPad(char) -> isPad
    boolean isData(char) -> isData
    java.lang.String encode(byte[]) -> encode
    byte[] decode(java.lang.String) -> decode
    int removeWhiteSpace(char[]) -> removeWhiteSpace
com.alipay.sdk.pay.LuckyPayUtils -> com.alipay.sdk.pay.LuckyPayUtils:
    android.content.Context context -> context
    com.alipay.sdk.pay.LuckyPayUtils$ResponseHandler handler -> handler
    java.lang.String PARTNER -> PARTNER
    java.lang.String SELLER -> SELLER
    java.lang.String RSA_PRIVATE -> RSA_PRIVATE
    java.lang.String RSA_PUBLIC -> RSA_PUBLIC
    int SDK_PAY_FLAG -> SDK_PAY_FLAG
    int SDK_CHECK_FLAG -> SDK_CHECK_FLAG
    android.os.Handler mHandler -> mHandler
    void pay(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> pay
    void getSDKVersion() -> getSDKVersion
    java.lang.String getOrderInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getOrderInfo
    java.lang.String sign(java.lang.String) -> sign
    java.lang.String getSignType() -> getSignType
    android.content.Context access$0(com.alipay.sdk.pay.LuckyPayUtils) -> access$0
    com.alipay.sdk.pay.LuckyPayUtils$ResponseHandler access$1(com.alipay.sdk.pay.LuckyPayUtils) -> access$1
    android.os.Handler access$2(com.alipay.sdk.pay.LuckyPayUtils) -> access$2
com.alipay.sdk.pay.LuckyPayUtils$1 -> com.alipay.sdk.pay.LuckyPayUtils$1:
    com.alipay.sdk.pay.LuckyPayUtils this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.alipay.sdk.pay.LuckyPayUtils$2 -> com.alipay.sdk.pay.LuckyPayUtils$2:
    com.alipay.sdk.pay.LuckyPayUtils this$0 -> this$0
    java.lang.String val$payInfo -> val$payInfo
    void run() -> run
com.alipay.sdk.pay.LuckyPayUtils$ResponseHandler -> com.alipay.sdk.pay.LuckyPayUtils$ResponseHandler:
    void onWebserviceSucceed() -> onWebserviceSucceed
com.alipay.sdk.pay.PayResult -> com.alipay.sdk.pay.PayResult:
    java.lang.String resultStatus -> resultStatus
    java.lang.String result -> result
    java.lang.String memo -> memo
    java.lang.String toString() -> toString
    java.lang.String gatValue(java.lang.String,java.lang.String) -> gatValue
    java.lang.String getResultStatus() -> getResultStatus
    java.lang.String getMemo() -> getMemo
    java.lang.String getResult() -> getResult
com.alipay.sdk.pay.PayUtils -> com.alipay.sdk.pay.PayUtils:
    android.content.Context context -> context
    com.alipay.sdk.pay.PayUtils$ResponseHandler handler -> handler
    java.lang.String PARTNER -> PARTNER
    java.lang.String SELLER -> SELLER
    java.lang.String RSA_PUBLIC -> RSA_PUBLIC
    java.lang.String RSA_PRIVATE -> RSA_PRIVATE
    int SDK_PAY_FLAG -> SDK_PAY_FLAG
    int SDK_CHECK_FLAG -> SDK_CHECK_FLAG
    android.os.Handler mHandler -> mHandler
    void pay(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> pay
    void getSDKVersion() -> getSDKVersion
    java.lang.String getOrderInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getOrderInfo
    java.lang.String sign(java.lang.String) -> sign
    java.lang.String getSignType() -> getSignType
    android.content.Context access$0(com.alipay.sdk.pay.PayUtils) -> access$0
    com.alipay.sdk.pay.PayUtils$ResponseHandler access$1(com.alipay.sdk.pay.PayUtils) -> access$1
    android.os.Handler access$2(com.alipay.sdk.pay.PayUtils) -> access$2
com.alipay.sdk.pay.PayUtils$1 -> com.alipay.sdk.pay.PayUtils$1:
    com.alipay.sdk.pay.PayUtils this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.alipay.sdk.pay.PayUtils$2 -> com.alipay.sdk.pay.PayUtils$2:
    com.alipay.sdk.pay.PayUtils this$0 -> this$0
    java.lang.String val$payInfo -> val$payInfo
    void run() -> run
com.alipay.sdk.pay.PayUtils$ResponseHandler -> com.alipay.sdk.pay.PayUtils$ResponseHandler:
    void onWebserviceSucceed() -> onWebserviceSucceed
com.alipay.sdk.pay.SignUtils -> com.alipay.sdk.pay.SignUtils:
    java.lang.String ALGORITHM -> ALGORITHM
    java.lang.String SIGN_ALGORITHMS -> SIGN_ALGORITHMS
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String sign(java.lang.String,java.lang.String) -> sign
com.alipay.sdk.protocol.a -> com.alipay.sdk.protocol.a:
    com.alipay.sdk.protocol.a a -> a
    com.alipay.sdk.protocol.a b -> b
    com.alipay.sdk.protocol.a c -> c
    com.alipay.sdk.protocol.a d -> d
    com.alipay.sdk.protocol.a e -> e
    com.alipay.sdk.protocol.a f -> f
    com.alipay.sdk.protocol.a g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    org.json.JSONObject k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    boolean o -> o
    boolean p -> p
    boolean q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    org.json.JSONObject u -> u
    com.alipay.sdk.protocol.a[] v -> v
    com.alipay.sdk.protocol.a[] values() -> values
    com.alipay.sdk.protocol.a valueOf(java.lang.String) -> valueOf
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    org.json.JSONObject m() -> m
    java.lang.String g() -> g
    java.lang.String h() -> h
    boolean i() -> i
    boolean j() -> j
    boolean k() -> k
    java.lang.String l() -> l
    java.lang.String[] a(java.lang.String) -> a
    com.alipay.sdk.protocol.a[] a(com.alipay.sdk.protocol.b) -> a
com.alipay.sdk.protocol.b -> com.alipay.sdk.protocol.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    org.json.JSONObject l -> l
    org.json.JSONObject b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    com.alipay.sdk.protocol.b a(org.json.JSONObject) -> a
    com.alipay.sdk.protocol.b a(org.json.JSONObject,java.lang.String) -> a
    com.alipay.sdk.protocol.b a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,org.json.JSONObject) -> a
    com.alipay.sdk.protocol.b a(java.lang.String,com.alipay.sdk.protocol.a) -> a
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    org.json.JSONObject a() -> a
    java.lang.String i() -> i
    java.lang.String j() -> j
    boolean k() -> k
    boolean l() -> l
    boolean m() -> m
com.alipay.sdk.protocol.c -> com.alipay.sdk.protocol.c:
    com.alipay.sdk.data.e a -> a
    com.alipay.sdk.data.f b -> b
    org.json.JSONObject c -> c
    com.alipay.sdk.data.e a() -> a
    com.alipay.sdk.data.f b() -> b
    org.json.JSONObject c() -> c
    void a(org.json.JSONObject) -> a
com.alipay.sdk.protocol.d -> com.alipay.sdk.protocol.d:
    com.alipay.sdk.protocol.c a(com.alipay.sdk.protocol.c) -> a
com.alipay.sdk.protocol.e -> com.alipay.sdk.protocol.e:
    com.alipay.sdk.protocol.g a(com.alipay.sdk.protocol.c) -> a
    void b(com.alipay.sdk.protocol.c) -> b
com.alipay.sdk.protocol.e$1 -> com.alipay.sdk.protocol.e$1:
    int[] a -> a
com.alipay.sdk.protocol.f -> com.alipay.sdk.protocol.f:
    com.alipay.sdk.protocol.f a -> a
    com.alipay.sdk.protocol.f b -> b
    com.alipay.sdk.protocol.f c -> c
    com.alipay.sdk.protocol.f d -> d
    java.lang.String e -> e
    com.alipay.sdk.protocol.f[] f -> f
    com.alipay.sdk.protocol.f[] values() -> values
    com.alipay.sdk.protocol.f valueOf(java.lang.String) -> valueOf
    java.lang.String a() -> a
    com.alipay.sdk.protocol.f a(java.lang.String) -> a
com.alipay.sdk.protocol.g -> com.alipay.sdk.protocol.g:
    int l -> l
    boolean m -> m
    boolean a() -> a
    int b() -> b
    java.lang.String c() -> c
    boolean d() -> d
    void a(org.json.JSONObject) -> a
com.alipay.sdk.protocol.h -> com.alipay.sdk.protocol.h:
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    boolean k -> k
    boolean d() -> d
    void a(boolean) -> a
    boolean a() -> a
    int b() -> b
    java.lang.String c() -> c
com.alipay.sdk.sys.a -> com.alipay.sdk.sys.a:
    com.alipay.sdk.sys.a c -> c
    android.content.Context a -> a
    com.alipay.sdk.data.d b -> b
    com.alipay.sdk.sys.a a() -> a
    android.content.Context d() -> d
    void a(android.content.Context,com.alipay.sdk.data.d) -> a
    com.alipay.sdk.data.d e() -> e
    boolean b() -> b
    java.lang.String a(java.lang.String[]) -> a
    java.lang.String f() -> f
    java.lang.String c() -> c
    boolean a(java.lang.String) -> a
com.alipay.sdk.sys.b -> com.alipay.sdk.sys.b:
    double a -> a
    double b -> b
    void a(android.content.Context) -> a
    double b() -> b
    double c() -> c
    java.lang.String a() -> a
com.alipay.sdk.tid.a -> com.alipay.sdk.tid.a:
    java.lang.String a -> a
    int b -> b
    java.lang.ref.WeakReference c -> c
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    long d(java.lang.String,java.lang.String) -> d
    java.util.List a() -> a
    java.lang.String c(java.lang.String,java.lang.String) -> c
    boolean a(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String) -> a
    java.lang.String e(java.lang.String,java.lang.String) -> e
    void a(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void b(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    void a(android.database.sqlite.SQLiteDatabase,java.lang.String) -> a
    void a(android.database.sqlite.SQLiteDatabase) -> a
com.alipay.sdk.tid.b -> com.alipay.sdk.tid.b:
    com.alipay.sdk.tid.b c -> c
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    void a(android.content.Context) -> a
    boolean d() -> d
    com.alipay.sdk.tid.b a() -> a
    void e() -> e
    java.lang.String f() -> f
com.alipay.sdk.util.a -> com.alipay.sdk.util.a:
    java.lang.String[] a(java.lang.String) -> a
    void b(java.lang.String) -> b
com.alipay.sdk.util.b -> com.alipay.sdk.util.b:
    int b -> b
    java.lang.Object a -> a
    boolean c -> c
    java.lang.String a(android.app.Activity,java.lang.String) -> a
    java.lang.String b(android.app.Activity,java.lang.String) -> b
    boolean a(android.content.Context) -> a
com.alipay.sdk.util.c -> com.alipay.sdk.util.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.alipay.sdk.util.c e -> e
    com.alipay.sdk.util.c a(android.content.Context) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    java.lang.String c() -> c
    com.alipay.sdk.util.f b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
com.alipay.sdk.util.d -> com.alipay.sdk.util.d:
    org.json.JSONObject a(org.json.JSONObject,org.json.JSONObject) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
com.alipay.sdk.util.e -> com.alipay.sdk.util.e:
    boolean a -> a
    java.lang.String b -> b
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void a(java.lang.Object) -> a
com.alipay.sdk.util.f -> com.alipay.sdk.util.f:
    com.alipay.sdk.util.f a -> a
    com.alipay.sdk.util.f b -> b
    com.alipay.sdk.util.f c -> c
    com.alipay.sdk.util.f d -> d
    com.alipay.sdk.util.f e -> e
    com.alipay.sdk.util.f f -> f
    com.alipay.sdk.util.f g -> g
    com.alipay.sdk.util.f h -> h
    com.alipay.sdk.util.f i -> i
    com.alipay.sdk.util.f j -> j
    com.alipay.sdk.util.f k -> k
    com.alipay.sdk.util.f l -> l
    com.alipay.sdk.util.f m -> m
    com.alipay.sdk.util.f n -> n
    com.alipay.sdk.util.f o -> o
    int p -> p
    java.lang.String q -> q
    com.alipay.sdk.util.f[] r -> r
    com.alipay.sdk.util.f[] values() -> values
    com.alipay.sdk.util.f valueOf(java.lang.String) -> valueOf
    int b() -> b
    java.lang.String a() -> a
    com.alipay.sdk.util.f a(int) -> a
com.alipay.sdk.util.g -> com.alipay.sdk.util.g:
    android.app.Activity b -> b
    com.alipay.android.app.IAlixPay c -> c
    java.lang.Object d -> d
    boolean e -> e
    java.lang.String a -> a
    android.content.ServiceConnection f -> f
    com.alipay.android.app.IRemoteServiceCallback g -> g
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,android.content.Intent) -> a
    com.alipay.android.app.IAlixPay a(com.alipay.sdk.util.g,com.alipay.android.app.IAlixPay) -> a
    java.lang.Object a(com.alipay.sdk.util.g) -> a
    android.app.Activity b(com.alipay.sdk.util.g) -> b
com.alipay.sdk.util.h -> com.alipay.sdk.util.h:
    com.alipay.sdk.util.g a -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.alipay.sdk.util.i -> com.alipay.sdk.util.i:
    com.alipay.sdk.util.g a -> a
    boolean isHideLoadingScreen() -> isHideLoadingScreen
    void payEnd(boolean,java.lang.String) -> payEnd
    void startActivity(java.lang.String,java.lang.String,int,android.os.Bundle) -> startActivity
com.alipay.sdk.util.j -> com.alipay.sdk.util.j:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String a(byte[]) -> a
    byte[] a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    android.util.DisplayMetrics g(android.content.Context) -> g
    java.lang.String d() -> d
    java.lang.String f(android.content.Context) -> f
    java.lang.String e() -> e
    int a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String) -> a
com.alipay.sdk.widget.a -> com.alipay.sdk.widget.a:
    android.app.Activity a -> a
    android.app.ProgressDialog b -> b
    boolean a() -> a
    void b() -> b
    void a(java.lang.CharSequence) -> a
    void c() -> c
    android.app.ProgressDialog a(com.alipay.sdk.widget.a) -> a
    android.app.ProgressDialog a(com.alipay.sdk.widget.a,android.app.ProgressDialog) -> a
    android.app.Activity b(com.alipay.sdk.widget.a) -> b
com.alipay.sdk.widget.b -> com.alipay.sdk.widget.b:
    boolean a -> a
    android.content.DialogInterface$OnCancelListener b -> b
    java.lang.CharSequence c -> c
    com.alipay.sdk.widget.a d -> d
    void run() -> run
com.alipay.sdk.widget.c -> com.alipay.sdk.widget.c:
    com.alipay.sdk.widget.a a -> a
    void run() -> run
com.alipay.sdk.widget.d -> com.alipay.sdk.widget.d:
    boolean a -> a
    android.app.Dialog a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.content.DialogInterface$OnClickListener,java.lang.String,android.content.DialogInterface$OnClickListener) -> a
    android.app.AlertDialog$Builder a(android.content.Context,java.lang.String,android.content.DialogInterface$OnClickListener,java.lang.String,android.content.DialogInterface$OnClickListener) -> a
com.alipay.sdk.widget.e -> com.alipay.sdk.widget.e:
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.amap.api.location.AMapLocalDayWeatherForecast -> com.amap.api.location.AMapLocalDayWeatherForecast:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.lang.String getDate() -> getDate
    void a(java.lang.String) -> a
    java.lang.String getWeek() -> getWeek
    void b(java.lang.String) -> b
    java.lang.String getDayWeather() -> getDayWeather
    void c(java.lang.String) -> c
    java.lang.String getNightWeather() -> getNightWeather
    void d(java.lang.String) -> d
    java.lang.String getDayTemp() -> getDayTemp
    void e(java.lang.String) -> e
    java.lang.String getNightTemp() -> getNightTemp
    void f(java.lang.String) -> f
    java.lang.String getDayWindDir() -> getDayWindDir
    void g(java.lang.String) -> g
    java.lang.String getNightWindDir() -> getNightWindDir
    void h(java.lang.String) -> h
    java.lang.String getDayWindPower() -> getDayWindPower
    void i(java.lang.String) -> i
    java.lang.String getNightWindPower() -> getNightWindPower
    void j(java.lang.String) -> j
com.amap.api.location.AMapLocalWeatherForecast -> com.amap.api.location.AMapLocalWeatherForecast:
    java.lang.String a -> a
    java.util.List b -> b
    com.amap.api.location.core.AMapLocException c -> c
    com.amap.api.location.core.AMapLocException getAMapException() -> getAMapException
    void a(com.amap.api.location.core.AMapLocException) -> a
    java.lang.String getReportTime() -> getReportTime
    void a(java.lang.String) -> a
    java.util.List getWeatherForecast() -> getWeatherForecast
    void a(java.util.List) -> a
com.amap.api.location.AMapLocalWeatherListener -> com.amap.api.location.AMapLocalWeatherListener:
    void onWeatherLiveSearched(com.amap.api.location.AMapLocalWeatherLive) -> onWeatherLiveSearched
    void onWeatherForecaseSearched(com.amap.api.location.AMapLocalWeatherForecast) -> onWeatherForecaseSearched
com.amap.api.location.AMapLocalWeatherLive -> com.amap.api.location.AMapLocalWeatherLive:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.amap.api.location.core.AMapLocException g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    com.amap.api.location.core.AMapLocException getAMapException() -> getAMapException
    void a(com.amap.api.location.core.AMapLocException) -> a
    java.lang.String getWeather() -> getWeather
    void a(java.lang.String) -> a
    java.lang.String getTemperature() -> getTemperature
    void b(java.lang.String) -> b
    java.lang.String getWindDir() -> getWindDir
    void c(java.lang.String) -> c
    java.lang.String getWindPower() -> getWindPower
    void d(java.lang.String) -> d
    java.lang.String getHumidity() -> getHumidity
    void e(java.lang.String) -> e
    java.lang.String getReportTime() -> getReportTime
    void f(java.lang.String) -> f
com.amap.api.location.AMapLocation -> com.amap.api.location.AMapLocation:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    com.amap.api.location.core.AMapLocException m -> m
    java.lang.String getPoiName() -> getPoiName
    void setPoiName(java.lang.String) -> setPoiName
    java.lang.String getCountry() -> getCountry
    void setCountry(java.lang.String) -> setCountry
    java.lang.String getRoad() -> getRoad
    void setRoad(java.lang.String) -> setRoad
    com.amap.api.location.core.AMapLocException getAMapException() -> getAMapException
    void setAMapException(com.amap.api.location.core.AMapLocException) -> setAMapException
    void a(java.lang.String) -> a
    void setAddress(java.lang.String) -> setAddress
    java.lang.String getPoiId() -> getPoiId
    void setPoiId(java.lang.String) -> setPoiId
    java.lang.String getFloor() -> getFloor
    void setFloor(java.lang.String) -> setFloor
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getDistrict() -> getDistrict
    void setDistrict(java.lang.String) -> setDistrict
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.lang.String getAdCode() -> getAdCode
    void setAdCode(java.lang.String) -> setAdCode
    java.lang.String getAddress() -> getAddress
    java.lang.String getStreet() -> getStreet
com.amap.api.location.AMapLocationListener -> com.amap.api.location.AMapLocationListener:
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.LocationManagerProxy -> com.amap.api.location.LocationManagerProxy:
    java.lang.String GPS_PROVIDER -> GPS_PROVIDER
    java.lang.String NETWORK_PROVIDER -> NETWORK_PROVIDER
    java.lang.String KEY_LOCATION_CHANGED -> KEY_LOCATION_CHANGED
    java.lang.String KEY_PROVIDER_ENABLED -> KEY_PROVIDER_ENABLED
    java.lang.String KEY_PROXIMITY_ENTERING -> KEY_PROXIMITY_ENTERING
    java.lang.String KEY_STATUS_CHANGED -> KEY_STATUS_CHANGED
    int WEATHER_TYPE_LIVE -> WEATHER_TYPE_LIVE
    int WEATHER_TYPE_FORECAST -> WEATHER_TYPE_FORECAST
    android.location.LocationManager c -> c
    com.amap.api.location.LocationManagerProxy d -> d
    com.amap.api.location.a e -> e
    android.content.Context f -> f
    com.amap.api.location.h g -> g
    com.amap.api.location.LocationManagerProxy$b h -> h
    java.util.ArrayList i -> i
    java.util.Hashtable j -> j
    java.util.Vector k -> k
    java.util.Vector l -> l
    com.amap.api.location.LocationManagerProxy$a m -> m
    android.content.Context a -> a
    java.lang.Object b -> b
    void a() -> a
    com.amap.api.location.LocationManagerProxy getInstance(android.app.Activity) -> getInstance
    com.amap.api.location.LocationManagerProxy getInstance(android.content.Context) -> getInstance
    void a(android.content.Context,android.content.Context) -> a
    void addProximityAlert(double,double,float,long,android.app.PendingIntent) -> addProximityAlert
    void addGeoFenceAlert(double,double,float,long,android.app.PendingIntent) -> addGeoFenceAlert
    void removeGeoFenceAlert(android.app.PendingIntent) -> removeGeoFenceAlert
    void removeProximityAlert(android.app.PendingIntent) -> removeProximityAlert
    com.amap.api.location.AMapLocation getLastKnownLocation(java.lang.String) -> getLastKnownLocation
    void setGpsEnable(boolean) -> setGpsEnable
    void a(java.lang.String,long,float,com.amap.api.location.AMapLocationListener,boolean) -> a
    void requestLocationUpdates(java.lang.String,long,float,com.amap.api.location.AMapLocationListener) -> requestLocationUpdates
    void requestLocationData(java.lang.String,long,float,com.amap.api.location.AMapLocationListener) -> requestLocationData
    void removeUpdates(com.amap.api.location.AMapLocationListener) -> removeUpdates
    void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent) -> requestLocationUpdates
    void removeUpdates(android.app.PendingIntent) -> removeUpdates
    java.util.List getAllProviders() -> getAllProviders
    java.util.List getProviders(boolean) -> getProviders
    java.util.List getProviders(android.location.Criteria,boolean) -> getProviders
    java.lang.String getBestProvider(android.location.Criteria,boolean) -> getBestProvider
    boolean isProviderEnabled(java.lang.String) -> isProviderEnabled
    com.amap.api.location.LocationProviderProxy getProvider(java.lang.String) -> getProvider
    android.location.GpsStatus getGpsStatus(android.location.GpsStatus) -> getGpsStatus
    void removeGpsStatusListener(android.location.GpsStatus$Listener) -> removeGpsStatusListener
    boolean addGpsStatusListener(android.location.GpsStatus$Listener) -> addGpsStatusListener
    void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int) -> addTestProvider
    void setTestProviderEnabled(java.lang.String,boolean) -> setTestProviderEnabled
    void setTestProviderLocation(java.lang.String,android.location.Location) -> setTestProviderLocation
    void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long) -> setTestProviderStatus
    void clearTestProviderEnabled(java.lang.String) -> clearTestProviderEnabled
    void clearTestProviderLocation(java.lang.String) -> clearTestProviderLocation
    void clearTestProviderStatus(java.lang.String) -> clearTestProviderStatus
    void requestWeatherUpdates(int,com.amap.api.location.AMapLocalWeatherListener) -> requestWeatherUpdates
    void destory() -> destory
    void destroy() -> destroy
    java.lang.String getVersion() -> getVersion
    void startSocket() -> startSocket
    void stopScocket() -> stopScocket
    java.util.ArrayList a(com.amap.api.location.LocationManagerProxy) -> a
    android.content.Context b(com.amap.api.location.LocationManagerProxy) -> b
    java.util.Vector c(com.amap.api.location.LocationManagerProxy) -> c
    java.util.Vector d(com.amap.api.location.LocationManagerProxy) -> d
    android.location.LocationManager e(com.amap.api.location.LocationManagerProxy) -> e
    com.amap.api.location.LocationManagerProxy$a f(com.amap.api.location.LocationManagerProxy) -> f
com.amap.api.location.LocationManagerProxy$a -> com.amap.api.location.LocationManagerProxy$a:
    com.amap.api.location.LocationManagerProxy a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.LocationManagerProxy$b -> com.amap.api.location.LocationManagerProxy$b:
    com.amap.api.location.LocationManagerProxy a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.LocationProviderProxy -> com.amap.api.location.LocationProviderProxy:
    int AVAILABLE -> AVAILABLE
    int OUT_OF_SERVICE -> OUT_OF_SERVICE
    int TEMPORARILY_UNAVAILABLE -> TEMPORARILY_UNAVAILABLE
    java.lang.String AMapNetwork -> AMapNetwork
    android.location.LocationManager a -> a
    java.lang.String b -> b
    com.amap.api.location.LocationProviderProxy a(android.location.LocationManager,java.lang.String) -> a
    android.location.LocationProvider a() -> a
    int getAccuracy() -> getAccuracy
    java.lang.String getName() -> getName
    int getPowerRequirement() -> getPowerRequirement
    boolean hasMonetaryCost() -> hasMonetaryCost
    boolean meetsCriteria(android.location.Criteria) -> meetsCriteria
    boolean requiresCell() -> requiresCell
    boolean requiresNetwork() -> requiresNetwork
    boolean requiresSatellite() -> requiresSatellite
    boolean supportsAltitude() -> supportsAltitude
    boolean supportsBearing() -> supportsBearing
    boolean supportsSpeed() -> supportsSpeed
com.amap.api.location.a -> com.amap.api.location.a:
    android.content.Context l -> l
    java.util.Vector a -> a
    com.amap.api.location.a$a m -> m
    java.util.Vector n -> n
    com.amap.api.location.d b -> b
    com.amap.api.location.c c -> c
    com.amap.api.location.AMapLocation o -> o
    com.amap.api.location.AMapLocation p -> p
    java.lang.Thread q -> q
    boolean d -> d
    long e -> e
    boolean f -> f
    boolean g -> g
    com.amap.api.location.b h -> h
    long i -> i
    com.amap.api.location.a j -> j
    android.content.Context k -> k
    long r -> r
    float s -> s
    com.amap.api.location.a a(android.content.Context,android.content.Context,android.location.LocationManager) -> a
    void e() -> e
    void a(double,double,float,long,android.app.PendingIntent) -> a
    void b(double,double,float,long,android.app.PendingIntent) -> b
    void a(android.app.PendingIntent) -> a
    void b(android.app.PendingIntent) -> b
    com.amap.api.location.AMapLocation a() -> a
    void a(long,float,com.amap.api.location.AMapLocationListener,java.lang.String,boolean) -> a
    void c(boolean) -> c
    void a(com.amap.api.location.AMapLocationListener) -> a
    void b() -> b
    void a(boolean) -> a
    void d(boolean) -> d
    void c() -> c
    void d() -> d
    void b(boolean) -> b
    void a(int,com.amap.api.location.AMapLocalWeatherListener) -> a
    void f() -> f
    void g() -> g
    com.amap.api.location.AMapLocation a(com.amap.api.location.a,com.amap.api.location.AMapLocation) -> a
    com.amap.api.location.AMapLocation a(com.amap.api.location.a) -> a
    com.amap.api.location.AMapLocation b(com.amap.api.location.a,com.amap.api.location.AMapLocation) -> b
    java.util.Vector b(com.amap.api.location.a) -> b
    android.content.Context c(com.amap.api.location.a) -> c
    void d(com.amap.api.location.a) -> d
    com.amap.api.location.AMapLocation e(com.amap.api.location.a) -> e
    void f(com.amap.api.location.a) -> f
com.amap.api.location.a$1 -> com.amap.api.location.a$1:
    int a -> a
    com.amap.api.location.AMapLocalWeatherListener b -> b
    com.amap.api.location.a c -> c
    void run() -> run
com.amap.api.location.a$2 -> com.amap.api.location.a$2:
    com.amap.api.location.a a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.amap.api.location.a$3 -> com.amap.api.location.a$3:
    com.amap.api.location.a a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.amap.api.location.a$a -> com.amap.api.location.a$a:
    com.amap.api.location.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.location.b -> com.amap.api.location.b:
    android.content.Context f -> f
    com.amap.api.location.b$a a -> a
    com.amap.api.location.AMapLocalWeatherListener b -> b
    com.amap.api.location.a c -> c
    int g -> g
    com.amap.api.location.AMapLocalWeatherListener h -> h
    java.util.List d -> d
    java.util.List e -> e
    boolean i -> i
    void a(int,com.amap.api.location.AMapLocalWeatherListener,com.amap.api.location.AMapLocation) -> a
    void a(com.amap.api.location.AMapLocation,java.lang.String,com.amap.api.location.AMapLocalWeatherListener) -> a
    byte[] a(com.amap.api.location.AMapLocation,java.lang.String) -> a
    java.lang.String a() -> a
    com.amap.api.location.AMapLocalWeatherLive a(java.lang.String,com.amap.api.location.AMapLocation) -> a
    com.amap.api.location.AMapLocalWeatherForecast b(java.lang.String,com.amap.api.location.AMapLocation) -> b
    java.lang.String a(org.json.JSONObject,java.lang.String) -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.b$a -> com.amap.api.location.b$a:
    java.lang.ref.WeakReference a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.location.b$a$1 -> com.amap.api.location.b$a$1:
    com.amap.api.location.b a -> a
    com.amap.api.location.AMapLocation b -> b
    com.amap.api.location.b$a c -> c
    void run() -> run
com.amap.api.location.c -> com.amap.api.location.c:
    com.aps.l a -> a
    boolean d -> d
    android.content.Context e -> e
    long f -> f
    com.amap.api.location.a$a g -> g
    com.amap.api.location.a h -> h
    boolean b -> b
    boolean i -> i
    boolean c -> c
    void a(boolean) -> a
    boolean a() -> a
    void b() -> b
    void c() -> c
    void b(boolean) -> b
    void d() -> d
    void run() -> run
    void a(long) -> a
    com.aps.c e() -> e
    com.aps.c f() -> f
    boolean g() -> g
    com.amap.api.location.AMapLocation a(com.aps.c) -> a
    void a(com.aps.k,android.app.PendingIntent) -> a
    void b(com.aps.k,android.app.PendingIntent) -> b
    void a(android.app.PendingIntent) -> a
    void b(android.app.PendingIntent) -> b
com.amap.api.location.core.AMapLocException -> com.amap.api.location.core.AMapLocException:
    java.lang.String ERROR_IO -> ERROR_IO
    java.lang.String ERROR_SOCKET -> ERROR_SOCKET
    java.lang.String ERROR_SOCKE_TIME_OUT -> ERROR_SOCKE_TIME_OUT
    java.lang.String ERROR_INVALID_PARAMETER -> ERROR_INVALID_PARAMETER
    java.lang.String ERROR_NULL_PARAMETER -> ERROR_NULL_PARAMETER
    java.lang.String ERROR_URL -> ERROR_URL
    java.lang.String ERROR_UNKNOW_HOST -> ERROR_UNKNOW_HOST
    java.lang.String ERROR_UNKNOW_SERVICE -> ERROR_UNKNOW_SERVICE
    java.lang.String ERROR_PROTOCOL -> ERROR_PROTOCOL
    java.lang.String ERROR_CONNECTION -> ERROR_CONNECTION
    java.lang.String ERROR_UNKNOWN -> ERROR_UNKNOWN
    java.lang.String ERROR_FAILURE_AUTH -> ERROR_FAILURE_AUTH
    java.lang.String ERROR_FAILURE_INFO -> ERROR_FAILURE_INFO
    java.lang.String ERROR_FAILURE_LOCATION -> ERROR_FAILURE_LOCATION
    java.lang.String ERROR_OVER_QUOTA -> ERROR_OVER_QUOTA
    int ERROR_CODE_IO -> ERROR_CODE_IO
    int ERROR_CODE_SOCKET -> ERROR_CODE_SOCKET
    int ERROR_CODE_SOCKE_TIME_OUT -> ERROR_CODE_SOCKE_TIME_OUT
    int ERROR_CODE_INVALID_PARAMETER -> ERROR_CODE_INVALID_PARAMETER
    int ERROR_CODE_NULL_PARAMETER -> ERROR_CODE_NULL_PARAMETER
    int ERROR_CODE_URL -> ERROR_CODE_URL
    int ERROR_CODE_UNKNOW_HOST -> ERROR_CODE_UNKNOW_HOST
    int ERROR_CODE_UNKNOW_SERVICE -> ERROR_CODE_UNKNOW_SERVICE
    int ERROR_CODE_PROTOCOL -> ERROR_CODE_PROTOCOL
    int ERROR_CODE_CONNECTION -> ERROR_CODE_CONNECTION
    int ERROR_CODE_UNKNOWN -> ERROR_CODE_UNKNOWN
    int ERROR_CODE_FAILURE_AUTH -> ERROR_CODE_FAILURE_AUTH
    int ERROR_CODE_FAILURE_INFO -> ERROR_CODE_FAILURE_INFO
    int ERROR_CODE_FAILURE_LOCATION -> ERROR_CODE_FAILURE_LOCATION
    int ERROR_CODE_OVER_QUOTA -> ERROR_CODE_OVER_QUOTA
    java.lang.String a -> a
    int b -> b
    java.lang.String getErrorMessage() -> getErrorMessage
    int getErrorCode() -> getErrorCode
    void a(java.lang.String) -> a
com.amap.api.location.core.CoordinateConvert -> com.amap.api.location.core.CoordinateConvert:
    com.amap.api.location.core.GeoPoint fromGpsToAMap(double,double) -> fromGpsToAMap
    double[] fromSeveralGpsToAMap(java.lang.String) -> fromSeveralGpsToAMap
    double[] fromSeveralGpsToAMap(double[]) -> fromSeveralGpsToAMap
com.amap.api.location.core.GeoPoint -> com.amap.api.location.core.GeoPoint:
    long a -> a
    long b -> b
    double c -> c
    double d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getLongitudeE6() -> getLongitudeE6
    int getLatitudeE6() -> getLatitudeE6
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.location.core.SocketService -> com.amap.api.location.core.SocketService:
    com.aps.l a -> a
    java.lang.String b -> b
    com.amap.api.location.core.SocketService$a c -> c
    java.net.ServerSocket d -> d
    boolean e -> e
    java.net.Socket f -> f
    com.aps.c g -> g
    boolean h -> h
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void startSocket() -> startSocket
    void stopScocket() -> stopScocket
    void a(java.net.Socket) -> a
    void apsInit() -> apsInit
    void a(com.amap.api.location.core.SocketService,java.net.Socket) -> a
com.amap.api.location.core.SocketService$a -> com.amap.api.location.core.SocketService$a:
    int a -> a
    com.amap.api.location.core.SocketService b -> b
    com.amap.api.location.core.SocketService c -> c
    void run() -> run
com.amap.api.location.core.a -> com.amap.api.location.core.a:
    int b -> b
    java.lang.String a -> a
    android.content.Context c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    android.content.SharedPreferences l -> l
    android.content.SharedPreferences$Editor m -> m
    java.lang.reflect.Method n -> n
    int a() -> a
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    boolean d(java.lang.String) -> d
    java.lang.String j() -> j
    java.lang.String k() -> k
    boolean e(java.lang.String) -> e
    boolean h() -> h
    byte[] f(java.lang.String) -> f
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    boolean i() -> i
    void c(java.lang.String) -> c
    void a(android.content.Context,long) -> a
    long c(android.content.Context) -> c
    void a(android.content.SharedPreferences$Editor) -> a
com.amap.api.location.core.b -> com.amap.api.location.core.b:
    char[] a -> a
    byte[] b -> b
    java.lang.String a(byte[]) -> a
    byte[] a(java.lang.String) -> a
com.amap.api.location.core.c -> com.amap.api.location.core.c:
    com.amap.api.location.core.c c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.content.Context f -> f
    android.telephony.TelephonyManager g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String a -> a
    java.lang.String m -> m
    java.util.HashMap b -> b
    java.lang.String n -> n
    boolean o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String a() -> a
    com.amap.api.location.core.c a(android.content.Context) -> a
    java.lang.String b() -> b
    java.lang.String m() -> m
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String d(java.lang.String) -> d
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String k(android.content.Context) -> k
    int l(android.content.Context) -> l
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int m(android.content.Context) -> m
    java.lang.String g(android.content.Context) -> g
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String j(android.content.Context) -> j
    void n() -> n
    void e(java.lang.String) -> e
    boolean a(double,double) -> a
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    boolean a(boolean) -> a
    boolean l() -> l
    java.lang.String c(java.lang.String) -> c
com.amap.api.location.core.c$a -> com.amap.api.location.core.c$a:
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void characters(char[],int,int) -> characters
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.amap.api.location.core.d -> com.amap.api.location.core.d:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String e -> e
    android.content.SharedPreferences f -> f
    android.content.SharedPreferences$Editor g -> g
    java.lang.reflect.Method h -> h
    java.lang.String d -> d
    boolean a(android.content.Context) -> a
    com.amap.api.location.AMapLocation b(android.content.Context) -> b
    void a(android.content.Context,com.amap.api.location.AMapLocation) -> a
    void a(android.content.SharedPreferences$Editor) -> a
    java.lang.String a() -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    boolean c(android.content.Context) -> c
com.amap.api.location.core.e -> com.amap.api.location.core.e:
    char[] a -> a
    byte[] b -> b
    javax.crypto.spec.IvParameterSpec c -> c
    byte[] a(byte[],java.security.Key) -> a
    java.security.PublicKey a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(byte[]) -> b
    java.lang.String b(java.lang.String,java.lang.String) -> b
    byte[] b(java.lang.String) -> b
    byte[] a(byte[],java.lang.String) -> a
    javax.crypto.spec.SecretKeySpec c(java.lang.String) -> c
    byte[] b(byte[],java.lang.String) -> b
    byte[] c(byte[],java.lang.String) -> c
    byte[] a(byte[],byte[]) -> a
    java.lang.String d(byte[],java.lang.String) -> d
    java.lang.String a(byte[]) -> a
    byte[] b(byte[],byte[]) -> b
com.amap.api.location.core.f -> com.amap.api.location.core.f:
    com.amap.api.location.core.GeoPoint a(android.os.Parcel) -> a
    com.amap.api.location.core.GeoPoint[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.location.core.g -> com.amap.api.location.core.g:
    java.lang.String[] a -> a
    java.lang.String a(byte[]) -> a
    java.lang.String a(java.lang.String) -> a
com.amap.api.location.d -> com.amap.api.location.d:
    android.location.LocationManager a -> a
    com.amap.api.location.a$a d -> d
    com.amap.api.location.a e -> e
    android.content.Context f -> f
    android.location.LocationListener b -> b
    android.location.LocationListener c -> c
    android.location.GpsStatus$Listener g -> g
    void a(long,float) -> a
    void a() -> a
    void b() -> b
    void a(int,android.location.GpsStatus) -> a
    com.amap.api.location.a a(com.amap.api.location.d) -> a
    com.amap.api.location.a$a b(com.amap.api.location.d) -> b
    android.content.Context c(com.amap.api.location.d) -> c
    void a(com.amap.api.location.d,int,android.location.GpsStatus) -> a
com.amap.api.location.e -> com.amap.api.location.e:
    com.amap.api.location.d a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.amap.api.location.f -> com.amap.api.location.f:
    com.amap.api.location.d a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.amap.api.location.g -> com.amap.api.location.g:
    com.amap.api.location.d a -> a
    void onGpsStatusChanged(int) -> onGpsStatusChanged
com.amap.api.location.h -> com.amap.api.location.h:
    com.amap.api.location.LocationManagerProxy a -> a
    com.amap.api.location.AMapLocationListener b -> b
    boolean a(com.amap.api.location.AMapLocationListener,long,float,java.lang.String) -> a
    void a() -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.i -> com.amap.api.location.i:
    long a -> a
    com.amap.api.location.AMapLocationListener b -> b
    java.lang.Boolean c -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.android.volley.AuthFailureError -> com.android.volley.AuthFailureError:
    android.content.Intent mResolutionIntent -> mResolutionIntent
    android.content.Intent getResolutionIntent() -> getResolutionIntent
    java.lang.String getMessage() -> getMessage
com.android.volley.BuildConfig -> com.android.volley.BuildConfig:
    boolean DEBUG -> DEBUG
com.android.volley.Cache -> com.android.volley.Cache:
    com.android.volley.Cache$Entry get(java.lang.String) -> get
    void put(java.lang.String,com.android.volley.Cache$Entry) -> put
    void initialize() -> initialize
    void invalidate(java.lang.String,boolean) -> invalidate
    void remove(java.lang.String) -> remove
    void clear() -> clear
com.android.volley.Cache$Entry -> com.android.volley.Cache$Entry:
    byte[] data -> data
    java.lang.String etag -> etag
    long serverDate -> serverDate
    long ttl -> ttl
    long softTtl -> softTtl
    java.util.Map responseHeaders -> responseHeaders
    boolean isExpired() -> isExpired
    boolean refreshNeeded() -> refreshNeeded
com.android.volley.CacheDispatcher -> com.android.volley.CacheDispatcher:
    boolean DEBUG -> DEBUG
    java.util.concurrent.BlockingQueue mCacheQueue -> mCacheQueue
    java.util.concurrent.BlockingQueue mNetworkQueue -> mNetworkQueue
    com.android.volley.Cache mCache -> mCache
    com.android.volley.ResponseDelivery mDelivery -> mDelivery
    boolean mQuit -> mQuit
    void quit() -> quit
    void run() -> run
    java.util.concurrent.BlockingQueue access$0(com.android.volley.CacheDispatcher) -> access$0
com.android.volley.CacheDispatcher$1 -> com.android.volley.CacheDispatcher$1:
    com.android.volley.CacheDispatcher this$0 -> this$0
    com.android.volley.Request val$request -> val$request
    void run() -> run
com.android.volley.DefaultRetryPolicy -> com.android.volley.DefaultRetryPolicy:
    int mCurrentTimeoutMs -> mCurrentTimeoutMs
    int mCurrentRetryCount -> mCurrentRetryCount
    int mMaxNumRetries -> mMaxNumRetries
    float mBackoffMultiplier -> mBackoffMultiplier
    int DEFAULT_TIMEOUT_MS -> DEFAULT_TIMEOUT_MS
    int DEFAULT_MAX_RETRIES -> DEFAULT_MAX_RETRIES
    float DEFAULT_BACKOFF_MULT -> DEFAULT_BACKOFF_MULT
    int getCurrentTimeout() -> getCurrentTimeout
    int getCurrentRetryCount() -> getCurrentRetryCount
    void retry(com.android.volley.VolleyError) -> retry
    boolean hasAttemptRemaining() -> hasAttemptRemaining
com.android.volley.ExecutorDelivery -> com.android.volley.ExecutorDelivery:
    java.util.concurrent.Executor mResponsePoster -> mResponsePoster
    void postResponse(com.android.volley.Request,com.android.volley.Response) -> postResponse
    void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> postResponse
    void postError(com.android.volley.Request,com.android.volley.VolleyError) -> postError
com.android.volley.ExecutorDelivery$1 -> com.android.volley.ExecutorDelivery$1:
    com.android.volley.ExecutorDelivery this$0 -> this$0
    android.os.Handler val$handler -> val$handler
    void execute(java.lang.Runnable) -> execute
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable -> com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable:
    com.android.volley.Request mRequest -> mRequest
    com.android.volley.Response mResponse -> mResponse
    java.lang.Runnable mRunnable -> mRunnable
    com.android.volley.ExecutorDelivery this$0 -> this$0
    void run() -> run
com.android.volley.Network -> com.android.volley.Network:
    com.android.volley.NetworkResponse performRequest(com.android.volley.Request) -> performRequest
com.android.volley.NetworkDispatcher -> com.android.volley.NetworkDispatcher:
    java.util.concurrent.BlockingQueue mQueue -> mQueue
    com.android.volley.Network mNetwork -> mNetwork
    com.android.volley.Cache mCache -> mCache
    com.android.volley.ResponseDelivery mDelivery -> mDelivery
    boolean mQuit -> mQuit
    void quit() -> quit
    void run() -> run
    void parseAndDeliverNetworkError(com.android.volley.Request,com.android.volley.VolleyError) -> parseAndDeliverNetworkError
com.android.volley.NetworkError -> com.android.volley.NetworkError:
com.android.volley.NetworkResponse -> com.android.volley.NetworkResponse:
    int statusCode -> statusCode
    byte[] data -> data
    java.util.Map headers -> headers
    boolean notModified -> notModified
com.android.volley.NoConnectionError -> com.android.volley.NoConnectionError:
com.android.volley.ParseError -> com.android.volley.ParseError:
com.android.volley.Request -> com.android.volley.Request:
    java.lang.String DEFAULT_PARAMS_ENCODING -> DEFAULT_PARAMS_ENCODING
    com.android.volley.VolleyLog$MarkerLog mEventLog -> mEventLog
    int mMethod -> mMethod
    java.lang.String mUrl -> mUrl
    int mDefaultTrafficStatsTag -> mDefaultTrafficStatsTag
    com.android.volley.Response$ErrorListener mErrorListener -> mErrorListener
    java.lang.Integer mSequence -> mSequence
    com.android.volley.RequestQueue mRequestQueue -> mRequestQueue
    boolean mShouldCache -> mShouldCache
    boolean mCanceled -> mCanceled
    boolean mResponseDelivered -> mResponseDelivered
    long mRequestBirthTime -> mRequestBirthTime
    long SLOW_REQUEST_THRESHOLD_MS -> SLOW_REQUEST_THRESHOLD_MS
    com.android.volley.RetryPolicy mRetryPolicy -> mRetryPolicy
    com.android.volley.Cache$Entry mCacheEntry -> mCacheEntry
    java.lang.Object mTag -> mTag
    int getMethod() -> getMethod
    void setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    int getTrafficStatsTag() -> getTrafficStatsTag
    void setRetryPolicy(com.android.volley.RetryPolicy) -> setRetryPolicy
    void addMarker(java.lang.String) -> addMarker
    void finish(java.lang.String) -> finish
    void setRequestQueue(com.android.volley.RequestQueue) -> setRequestQueue
    void setSequence(int) -> setSequence
    int getSequence() -> getSequence
    java.lang.String getUrl() -> getUrl
    java.lang.String getCacheKey() -> getCacheKey
    void setCacheEntry(com.android.volley.Cache$Entry) -> setCacheEntry
    com.android.volley.Cache$Entry getCacheEntry() -> getCacheEntry
    void cancel() -> cancel
    boolean isCanceled() -> isCanceled
    java.util.Map getHeaders() -> getHeaders
    java.util.Map getPostParams() -> getPostParams
    java.lang.String getPostParamsEncoding() -> getPostParamsEncoding
    java.lang.String getPostBodyContentType() -> getPostBodyContentType
    byte[] getPostBody() -> getPostBody
    java.util.Map getParams() -> getParams
    java.lang.String getParamsEncoding() -> getParamsEncoding
    java.lang.String getBodyContentType() -> getBodyContentType
    byte[] getBody() -> getBody
    byte[] encodeParameters(java.util.Map,java.lang.String) -> encodeParameters
    void setShouldCache(boolean) -> setShouldCache
    boolean shouldCache() -> shouldCache
    com.android.volley.Request$Priority getPriority() -> getPriority
    int getTimeoutMs() -> getTimeoutMs
    com.android.volley.RetryPolicy getRetryPolicy() -> getRetryPolicy
    void markDelivered() -> markDelivered
    boolean hasHadResponseDelivered() -> hasHadResponseDelivered
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    com.android.volley.VolleyError parseNetworkError(com.android.volley.VolleyError) -> parseNetworkError
    void deliverResponse(java.lang.Object) -> deliverResponse
    void deliverError(com.android.volley.VolleyError) -> deliverError
    int compareTo(com.android.volley.Request) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
    com.android.volley.VolleyLog$MarkerLog access$1(com.android.volley.Request) -> access$1
com.android.volley.Request$1 -> com.android.volley.Request$1:
    com.android.volley.Request this$0 -> this$0
    java.lang.String val$tag -> val$tag
    long val$threadId -> val$threadId
    void run() -> run
com.android.volley.Request$Method -> com.android.volley.Request$Method:
    int DEPRECATED_GET_OR_POST -> DEPRECATED_GET_OR_POST
    int GET -> GET
    int POST -> POST
    int PUT -> PUT
    int DELETE -> DELETE
com.android.volley.Request$Priority -> com.android.volley.Request$Priority:
    com.android.volley.Request$Priority LOW -> LOW
    com.android.volley.Request$Priority NORMAL -> NORMAL
    com.android.volley.Request$Priority HIGH -> HIGH
    com.android.volley.Request$Priority IMMEDIATE -> IMMEDIATE
    com.android.volley.Request$Priority[] ENUM$VALUES -> ENUM$VALUES
    com.android.volley.Request$Priority[] values() -> values
    com.android.volley.Request$Priority valueOf(java.lang.String) -> valueOf
com.android.volley.RequestQueue -> com.android.volley.RequestQueue:
    java.util.concurrent.atomic.AtomicInteger mSequenceGenerator -> mSequenceGenerator
    java.util.Map mWaitingRequests -> mWaitingRequests
    java.util.Set mCurrentRequests -> mCurrentRequests
    java.util.concurrent.PriorityBlockingQueue mCacheQueue -> mCacheQueue
    java.util.concurrent.PriorityBlockingQueue mNetworkQueue -> mNetworkQueue
    int DEFAULT_NETWORK_THREAD_POOL_SIZE -> DEFAULT_NETWORK_THREAD_POOL_SIZE
    com.android.volley.Cache mCache -> mCache
    com.android.volley.Network mNetwork -> mNetwork
    com.android.volley.ResponseDelivery mDelivery -> mDelivery
    com.android.volley.NetworkDispatcher[] mDispatchers -> mDispatchers
    com.android.volley.CacheDispatcher mCacheDispatcher -> mCacheDispatcher
    void start() -> start
    void stop() -> stop
    int getSequenceNumber() -> getSequenceNumber
    com.android.volley.Cache getCache() -> getCache
    void cancelAll(com.android.volley.RequestQueue$RequestFilter) -> cancelAll
    void cancelAll(java.lang.Object) -> cancelAll
    com.android.volley.Request add(com.android.volley.Request) -> add
    void finish(com.android.volley.Request) -> finish
com.android.volley.RequestQueue$1 -> com.android.volley.RequestQueue$1:
    com.android.volley.RequestQueue this$0 -> this$0
    java.lang.Object val$tag -> val$tag
    boolean apply(com.android.volley.Request) -> apply
com.android.volley.RequestQueue$RequestFilter -> com.android.volley.RequestQueue$RequestFilter:
    boolean apply(com.android.volley.Request) -> apply
com.android.volley.Response -> com.android.volley.Response:
    java.lang.Object result -> result
    com.android.volley.Cache$Entry cacheEntry -> cacheEntry
    com.android.volley.VolleyError error -> error
    boolean intermediate -> intermediate
    com.android.volley.Response success(java.lang.Object,com.android.volley.Cache$Entry) -> success
    com.android.volley.Response error(com.android.volley.VolleyError) -> error
    boolean isSuccess() -> isSuccess
com.android.volley.Response$ErrorListener -> com.android.volley.Response$ErrorListener:
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.android.volley.Response$Listener -> com.android.volley.Response$Listener:
    void onResponse(java.lang.Object) -> onResponse
com.android.volley.ResponseDelivery -> com.android.volley.ResponseDelivery:
    void postResponse(com.android.volley.Request,com.android.volley.Response) -> postResponse
    void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable) -> postResponse
    void postError(com.android.volley.Request,com.android.volley.VolleyError) -> postError
com.android.volley.RetryPolicy -> com.android.volley.RetryPolicy:
    int getCurrentTimeout() -> getCurrentTimeout
    int getCurrentRetryCount() -> getCurrentRetryCount
    void retry(com.android.volley.VolleyError) -> retry
com.android.volley.ServerError -> com.android.volley.ServerError:
com.android.volley.TimeoutError -> com.android.volley.TimeoutError:
com.android.volley.VolleyError -> com.android.volley.VolleyError:
    com.android.volley.NetworkResponse networkResponse -> networkResponse
com.android.volley.VolleyLog -> com.android.volley.VolleyLog:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    void v(java.lang.String,java.lang.Object[]) -> v
    void d(java.lang.String,java.lang.Object[]) -> d
    void e(java.lang.String,java.lang.Object[]) -> e
    void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    void wtf(java.lang.String,java.lang.Object[]) -> wtf
    void wtf(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> wtf
    java.lang.String buildMessage(java.lang.String,java.lang.Object[]) -> buildMessage
com.android.volley.VolleyLog$MarkerLog -> com.android.volley.VolleyLog$MarkerLog:
    boolean ENABLED -> ENABLED
    long MIN_DURATION_FOR_LOGGING_MS -> MIN_DURATION_FOR_LOGGING_MS
    java.util.List mMarkers -> mMarkers
    boolean mFinished -> mFinished
    void add(java.lang.String,long) -> add
    void finish(java.lang.String) -> finish
    void finalize() -> finalize
    long getTotalDuration() -> getTotalDuration
com.android.volley.VolleyLog$MarkerLog$Marker -> com.android.volley.VolleyLog$MarkerLog$Marker:
    java.lang.String name -> name
    long thread -> thread
    long time -> time
com.android.volley.toolbox.AndroidAuthenticator -> com.android.volley.toolbox.AndroidAuthenticator:
    android.content.Context mContext -> mContext
    android.accounts.Account mAccount -> mAccount
    java.lang.String mAuthTokenType -> mAuthTokenType
    android.accounts.Account getAccount() -> getAccount
    java.lang.String getAuthToken() -> getAuthToken
    void invalidateAuthToken(java.lang.String) -> invalidateAuthToken
com.android.volley.toolbox.Authenticator -> com.android.volley.toolbox.Authenticator:
    java.lang.String getAuthToken() -> getAuthToken
    void invalidateAuthToken(java.lang.String) -> invalidateAuthToken
com.android.volley.toolbox.BasicNetwork -> com.android.volley.toolbox.BasicNetwork:
    boolean DEBUG -> DEBUG
    int SLOW_REQUEST_THRESHOLD_MS -> SLOW_REQUEST_THRESHOLD_MS
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    com.android.volley.toolbox.HttpStack mHttpStack -> mHttpStack
    com.android.volley.toolbox.ByteArrayPool mPool -> mPool
    com.android.volley.NetworkResponse performRequest(com.android.volley.Request) -> performRequest
    void logSlowRequests(long,com.android.volley.Request,byte[],org.apache.http.StatusLine) -> logSlowRequests
    void attemptRetryOnException(java.lang.String,com.android.volley.Request,com.android.volley.VolleyError) -> attemptRetryOnException
    void addCacheHeaders(java.util.Map,com.android.volley.Cache$Entry) -> addCacheHeaders
    void logError(java.lang.String,java.lang.String,long) -> logError
    byte[] entityToBytes(org.apache.http.HttpEntity) -> entityToBytes
    java.util.Map convertHeaders(org.apache.http.Header[]) -> convertHeaders
com.android.volley.toolbox.ByteArrayPool -> com.android.volley.toolbox.ByteArrayPool:
    java.util.List mBuffersByLastUse -> mBuffersByLastUse
    java.util.List mBuffersBySize -> mBuffersBySize
    int mCurrentSize -> mCurrentSize
    int mSizeLimit -> mSizeLimit
    java.util.Comparator BUF_COMPARATOR -> BUF_COMPARATOR
    byte[] getBuf(int) -> getBuf
    void returnBuf(byte[]) -> returnBuf
    void trim() -> trim
com.android.volley.toolbox.ByteArrayPool$1 -> com.android.volley.toolbox.ByteArrayPool$1:
    int compare(byte[],byte[]) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.android.volley.toolbox.ClearCacheRequest -> com.android.volley.toolbox.ClearCacheRequest:
    com.android.volley.Cache mCache -> mCache
    java.lang.Runnable mCallback -> mCallback
    boolean isCanceled() -> isCanceled
    com.android.volley.Request$Priority getPriority() -> getPriority
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    void deliverResponse(java.lang.Object) -> deliverResponse
com.android.volley.toolbox.DiskBasedCache -> com.android.volley.toolbox.DiskBasedCache:
    java.util.Map mEntries -> mEntries
    long mTotalSize -> mTotalSize
    java.io.File mRootDirectory -> mRootDirectory
    int mMaxCacheSizeInBytes -> mMaxCacheSizeInBytes
    int DEFAULT_DISK_USAGE_BYTES -> DEFAULT_DISK_USAGE_BYTES
    float HYSTERESIS_FACTOR -> HYSTERESIS_FACTOR
    int CACHE_VERSION -> CACHE_VERSION
    void clear() -> clear
    com.android.volley.Cache$Entry get(java.lang.String) -> get
    void initialize() -> initialize
    void invalidate(java.lang.String,boolean) -> invalidate
    void put(java.lang.String,com.android.volley.Cache$Entry) -> put
    void remove(java.lang.String) -> remove
    java.lang.String getFilenameForKey(java.lang.String) -> getFilenameForKey
    java.io.File getFileForKey(java.lang.String) -> getFileForKey
    void pruneIfNeeded(int) -> pruneIfNeeded
    void putEntry(java.lang.String,com.android.volley.toolbox.DiskBasedCache$CacheHeader) -> putEntry
    void removeEntry(java.lang.String) -> removeEntry
    byte[] streamToBytes(java.io.InputStream,int) -> streamToBytes
com.android.volley.toolbox.DiskBasedCache$CacheHeader -> com.android.volley.toolbox.DiskBasedCache$CacheHeader:
    long size -> size
    java.lang.String key -> key
    java.lang.String etag -> etag
    long serverDate -> serverDate
    long ttl -> ttl
    long softTtl -> softTtl
    java.util.Map responseHeaders -> responseHeaders
    com.android.volley.toolbox.DiskBasedCache$CacheHeader readHeader(java.io.InputStream) -> readHeader
    com.android.volley.Cache$Entry toCacheEntry(byte[]) -> toCacheEntry
    boolean writeHeader(java.io.OutputStream) -> writeHeader
    void writeStringStringMap(java.util.Map,java.io.ObjectOutputStream) -> writeStringStringMap
    java.util.Map readStringStringMap(java.io.ObjectInputStream) -> readStringStringMap
com.android.volley.toolbox.DiskBasedCache$CountingInputStream -> com.android.volley.toolbox.DiskBasedCache$CountingInputStream:
    int bytesRead -> bytesRead
    int read() -> read
    int read(byte[],int,int) -> read
    int access$1(com.android.volley.toolbox.DiskBasedCache$CountingInputStream) -> access$1
com.android.volley.toolbox.HttpClientStack -> com.android.volley.toolbox.HttpClientStack:
    org.apache.http.client.HttpClient mClient -> mClient
    java.lang.String HEADER_CONTENT_TYPE -> HEADER_CONTENT_TYPE
    void addHeaders(org.apache.http.client.methods.HttpUriRequest,java.util.Map) -> addHeaders
    java.util.List getPostParameterPairs(java.util.Map) -> getPostParameterPairs
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> performRequest
    org.apache.http.client.methods.HttpUriRequest createHttpRequest(com.android.volley.Request,java.util.Map) -> createHttpRequest
    void setEntityIfNonEmptyBody(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,com.android.volley.Request) -> setEntityIfNonEmptyBody
    void onPrepareRequest(org.apache.http.client.methods.HttpUriRequest) -> onPrepareRequest
com.android.volley.toolbox.HttpHeaderParser -> com.android.volley.toolbox.HttpHeaderParser:
    com.android.volley.Cache$Entry parseCacheHeaders(com.android.volley.NetworkResponse) -> parseCacheHeaders
    long parseDateAsEpoch(java.lang.String) -> parseDateAsEpoch
    java.lang.String parseCharset(java.util.Map) -> parseCharset
com.android.volley.toolbox.HttpStack -> com.android.volley.toolbox.HttpStack:
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> performRequest
com.android.volley.toolbox.HurlStack -> com.android.volley.toolbox.HurlStack:
    java.lang.String HEADER_CONTENT_TYPE -> HEADER_CONTENT_TYPE
    com.android.volley.toolbox.HurlStack$UrlRewriter mUrlRewriter -> mUrlRewriter
    javax.net.ssl.SSLSocketFactory mSslSocketFactory -> mSslSocketFactory
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> performRequest
    org.apache.http.HttpEntity entityFromConnection(java.net.HttpURLConnection) -> entityFromConnection
    java.net.HttpURLConnection createConnection(java.net.URL) -> createConnection
    java.net.HttpURLConnection openConnection(java.net.URL,com.android.volley.Request) -> openConnection
    void setConnectionParametersForRequest(java.net.HttpURLConnection,com.android.volley.Request) -> setConnectionParametersForRequest
    void addBodyIfExists(java.net.HttpURLConnection,com.android.volley.Request) -> addBodyIfExists
com.android.volley.toolbox.HurlStack$UrlRewriter -> com.android.volley.toolbox.HurlStack$UrlRewriter:
    java.lang.String rewriteUrl(java.lang.String) -> rewriteUrl
com.android.volley.toolbox.ImageLoader -> com.android.volley.toolbox.ImageLoader:
    com.android.volley.RequestQueue mRequestQueue -> mRequestQueue
    int mBatchResponseDelayMs -> mBatchResponseDelayMs
    com.android.volley.toolbox.ImageLoader$ImageCache mCache -> mCache
    java.util.HashMap mInFlightRequests -> mInFlightRequests
    java.util.HashMap mBatchedResponses -> mBatchedResponses
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRunnable -> mRunnable
    com.android.volley.toolbox.ImageLoader$ImageListener getImageListener(android.widget.ImageView,int,int) -> getImageListener
    com.android.volley.toolbox.ImageLoader$ImageContainer get(java.lang.String,com.android.volley.toolbox.ImageLoader$ImageListener) -> get
    com.android.volley.toolbox.ImageLoader$ImageContainer get(java.lang.String,com.android.volley.toolbox.ImageLoader$ImageListener,int,int) -> get
    void setBatchedResponseDelay(int) -> setBatchedResponseDelay
    void onGetImageSuccess(java.lang.String,android.graphics.Bitmap) -> onGetImageSuccess
    void onGetImageError(java.lang.String,com.android.volley.VolleyError) -> onGetImageError
    void batchResponse(java.lang.String,com.android.volley.toolbox.ImageLoader$BatchedImageRequest,com.android.volley.VolleyError) -> batchResponse
    void throwIfNotOnMainThread() -> throwIfNotOnMainThread
    java.lang.String getCacheKey(java.lang.String,int,int) -> getCacheKey
    java.util.HashMap access$0(com.android.volley.toolbox.ImageLoader) -> access$0
    java.util.HashMap access$1(com.android.volley.toolbox.ImageLoader) -> access$1
    void access$2(com.android.volley.toolbox.ImageLoader,java.lang.String,android.graphics.Bitmap) -> access$2
    void access$3(com.android.volley.toolbox.ImageLoader,java.lang.String,com.android.volley.VolleyError) -> access$3
    void access$4(com.android.volley.toolbox.ImageLoader,java.lang.Runnable) -> access$4
com.android.volley.toolbox.ImageLoader$1 -> com.android.volley.toolbox.ImageLoader$1:
    int val$errorImageResId -> val$errorImageResId
    android.widget.ImageView val$view -> val$view
    int val$defaultImageResId -> val$defaultImageResId
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
    void onResponse(com.android.volley.toolbox.ImageLoader$ImageContainer,boolean) -> onResponse
com.android.volley.toolbox.ImageLoader$2 -> com.android.volley.toolbox.ImageLoader$2:
    com.android.volley.toolbox.ImageLoader this$0 -> this$0
    java.lang.String val$cacheKey -> val$cacheKey
    void onResponse(android.graphics.Bitmap) -> onResponse
    void onResponse(java.lang.Object) -> onResponse
com.android.volley.toolbox.ImageLoader$3 -> com.android.volley.toolbox.ImageLoader$3:
    com.android.volley.toolbox.ImageLoader this$0 -> this$0
    java.lang.String val$cacheKey -> val$cacheKey
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.android.volley.toolbox.ImageLoader$4 -> com.android.volley.toolbox.ImageLoader$4:
    com.android.volley.toolbox.ImageLoader this$0 -> this$0
    com.android.volley.VolleyError val$error -> val$error
    void run() -> run
com.android.volley.toolbox.ImageLoader$BatchedImageRequest -> com.android.volley.toolbox.ImageLoader$BatchedImageRequest:
    com.android.volley.Request mRequest -> mRequest
    android.graphics.Bitmap mResponseBitmap -> mResponseBitmap
    java.util.LinkedList mContainers -> mContainers
    com.android.volley.toolbox.ImageLoader this$0 -> this$0
    void addContainer(com.android.volley.toolbox.ImageLoader$ImageContainer) -> addContainer
    boolean removeContainerAndCancelIfNecessary(com.android.volley.toolbox.ImageLoader$ImageContainer) -> removeContainerAndCancelIfNecessary
    java.util.LinkedList access$0(com.android.volley.toolbox.ImageLoader$BatchedImageRequest) -> access$0
    void access$1(com.android.volley.toolbox.ImageLoader$BatchedImageRequest,android.graphics.Bitmap) -> access$1
    android.graphics.Bitmap access$2(com.android.volley.toolbox.ImageLoader$BatchedImageRequest) -> access$2
com.android.volley.toolbox.ImageLoader$ImageCache -> com.android.volley.toolbox.ImageLoader$ImageCache:
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    void putBitmap(java.lang.String,android.graphics.Bitmap) -> putBitmap
com.android.volley.toolbox.ImageLoader$ImageContainer -> com.android.volley.toolbox.ImageLoader$ImageContainer:
    android.graphics.Bitmap mBitmap -> mBitmap
    com.android.volley.toolbox.ImageLoader$ImageListener mListener -> mListener
    java.lang.String mCacheKey -> mCacheKey
    java.lang.String mRequestUrl -> mRequestUrl
    com.android.volley.toolbox.ImageLoader this$0 -> this$0
    void cancelRequest() -> cancelRequest
    android.graphics.Bitmap getBitmap() -> getBitmap
    java.lang.String getRequestUrl() -> getRequestUrl
    com.android.volley.toolbox.ImageLoader$ImageListener access$0(com.android.volley.toolbox.ImageLoader$ImageContainer) -> access$0
    void access$1(com.android.volley.toolbox.ImageLoader$ImageContainer,android.graphics.Bitmap) -> access$1
com.android.volley.toolbox.ImageLoader$ImageListener -> com.android.volley.toolbox.ImageLoader$ImageListener:
    void onResponse(com.android.volley.toolbox.ImageLoader$ImageContainer,boolean) -> onResponse
com.android.volley.toolbox.ImageRequest -> com.android.volley.toolbox.ImageRequest:
    int IMAGE_TIMEOUT_MS -> IMAGE_TIMEOUT_MS
    int IMAGE_MAX_RETRIES -> IMAGE_MAX_RETRIES
    float IMAGE_BACKOFF_MULT -> IMAGE_BACKOFF_MULT
    com.android.volley.Response$Listener mListener -> mListener
    android.graphics.Bitmap$Config mDecodeConfig -> mDecodeConfig
    int mMaxWidth -> mMaxWidth
    int mMaxHeight -> mMaxHeight
    java.lang.Object sDecodeLock -> sDecodeLock
    com.android.volley.Request$Priority getPriority() -> getPriority
    int getResizedDimension(int,int,int,int) -> getResizedDimension
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    com.android.volley.Response doParse(com.android.volley.NetworkResponse) -> doParse
    void deliverResponse(android.graphics.Bitmap) -> deliverResponse
    int findBestSampleSize(int,int,int,int) -> findBestSampleSize
    void deliverResponse(java.lang.Object) -> deliverResponse
com.android.volley.toolbox.JsonArrayRequest -> com.android.volley.toolbox.JsonArrayRequest:
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
com.android.volley.toolbox.JsonObjectRequest -> com.android.volley.toolbox.JsonObjectRequest:
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
com.android.volley.toolbox.JsonRequest -> com.android.volley.toolbox.JsonRequest:
    java.lang.String PROTOCOL_CHARSET -> PROTOCOL_CHARSET
    java.lang.String PROTOCOL_CONTENT_TYPE -> PROTOCOL_CONTENT_TYPE
    com.android.volley.Response$Listener mListener -> mListener
    java.lang.String mRequestBody -> mRequestBody
    void deliverResponse(java.lang.Object) -> deliverResponse
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    java.lang.String getPostBodyContentType() -> getPostBodyContentType
    byte[] getPostBody() -> getPostBody
    java.lang.String getBodyContentType() -> getBodyContentType
    byte[] getBody() -> getBody
com.android.volley.toolbox.NetworkImageView -> com.android.volley.toolbox.NetworkImageView:
    java.lang.String mUrl -> mUrl
    int mDefaultImageId -> mDefaultImageId
    int mErrorImageId -> mErrorImageId
    com.android.volley.toolbox.ImageLoader mImageLoader -> mImageLoader
    com.android.volley.toolbox.ImageLoader$ImageContainer mImageContainer -> mImageContainer
    void setImageUrl(java.lang.String,com.android.volley.toolbox.ImageLoader) -> setImageUrl
    void setDefaultImageResId(int) -> setDefaultImageResId
    void setErrorImageResId(int) -> setErrorImageResId
    void loadImageIfNecessary(boolean) -> loadImageIfNecessary
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void drawableStateChanged() -> drawableStateChanged
    int access$0(com.android.volley.toolbox.NetworkImageView) -> access$0
    int access$1(com.android.volley.toolbox.NetworkImageView) -> access$1
com.android.volley.toolbox.NetworkImageView$1 -> com.android.volley.toolbox.NetworkImageView$1:
    com.android.volley.toolbox.NetworkImageView this$0 -> this$0
    boolean val$isInLayoutPass -> val$isInLayoutPass
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
    void onResponse(com.android.volley.toolbox.ImageLoader$ImageContainer,boolean) -> onResponse
com.android.volley.toolbox.NetworkImageView$1$1 -> com.android.volley.toolbox.NetworkImageView$1$1:
    com.android.volley.toolbox.NetworkImageView$1 this$1 -> this$1
    com.android.volley.toolbox.ImageLoader$ImageContainer val$response -> val$response
    void run() -> run
com.android.volley.toolbox.NoCache -> com.android.volley.toolbox.NoCache:
    void clear() -> clear
    com.android.volley.Cache$Entry get(java.lang.String) -> get
    void put(java.lang.String,com.android.volley.Cache$Entry) -> put
    void invalidate(java.lang.String,boolean) -> invalidate
    void remove(java.lang.String) -> remove
    void initialize() -> initialize
com.android.volley.toolbox.PoolingByteArrayOutputStream -> com.android.volley.toolbox.PoolingByteArrayOutputStream:
    int DEFAULT_SIZE -> DEFAULT_SIZE
    com.android.volley.toolbox.ByteArrayPool mPool -> mPool
    void close() -> close
    void finalize() -> finalize
    void expand(int) -> expand
    void write(byte[],int,int) -> write
    void write(int) -> write
com.android.volley.toolbox.RequestFuture -> com.android.volley.toolbox.RequestFuture:
    com.android.volley.Request mRequest -> mRequest
    boolean mResultReceived -> mResultReceived
    java.lang.Object mResult -> mResult
    com.android.volley.VolleyError mException -> mException
    com.android.volley.toolbox.RequestFuture newFuture() -> newFuture
    void setRequest(com.android.volley.Request) -> setRequest
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object doGet(java.lang.Long) -> doGet
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    void onResponse(java.lang.Object) -> onResponse
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.android.volley.toolbox.StringRequest -> com.android.volley.toolbox.StringRequest:
    com.android.volley.Response$Listener mListener -> mListener
    void deliverResponse(java.lang.String) -> deliverResponse
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    void deliverResponse(java.lang.Object) -> deliverResponse
com.android.volley.toolbox.Volley -> com.android.volley.toolbox.Volley:
    java.lang.String DEFAULT_CACHE_DIR -> DEFAULT_CACHE_DIR
    com.android.volley.RequestQueue newRequestQueue(android.content.Context,com.android.volley.toolbox.HttpStack) -> newRequestQueue
    com.android.volley.RequestQueue newRequestQueue(android.content.Context) -> newRequestQueue
com.aps.a -> com.aps.a:
    int a(android.os.Bundle) -> a
com.aps.a$a -> com.aps.a$a:
    com.aps.a a(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.aps.a$a$a -> com.aps.a$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    int a(android.os.Bundle) -> a
com.aps.aa -> com.aps.aa:
    boolean a -> a
    boolean b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    java.lang.Object i -> i
    com.aps.aa j -> j
    boolean k -> k
    boolean l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    long q -> q
    android.content.Context r -> r
    android.location.LocationManager s -> s
    com.aps.am t -> t
    com.aps.ba u -> u
    com.aps.bh v -> v
    com.aps.aj w -> w
    com.aps.bg x -> x
    com.aps.az y -> y
    com.aps.ad z -> z
    java.lang.Thread A -> A
    android.os.Looper B -> B
    com.aps.ax C -> C
    android.location.Location D -> D
    com.aps.aw E -> E
    android.os.Handler F -> F
    com.aps.ay G -> G
    android.location.LocationListener H -> H
    android.content.BroadcastReceiver I -> I
    android.location.GpsStatus J -> J
    int K -> K
    int L -> L
    java.util.HashMap M -> M
    int N -> N
    int O -> O
    float P -> P
    float Q -> Q
    float R -> R
    float S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    com.aps.aa a(android.content.Context) -> a
    void a(int) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    com.aps.ai d() -> d
    void a(com.aps.ai,java.lang.String) -> a
    boolean e() -> e
    int f() -> f
    java.lang.String a(java.lang.String) -> a
    void n() -> n
    int a(java.util.HashMap) -> a
    double[] a(java.util.List) -> a
    void a(com.aps.aa) -> a
    int g() -> g
    int h() -> h
    int i() -> i
    int j() -> j
    int k() -> k
    com.aps.az b(com.aps.aa) -> b
    long a(com.aps.aa,long) -> a
    android.location.Location a(com.aps.aa,android.location.Location) -> a
    boolean c(com.aps.aa) -> c
    void a(com.aps.aa,android.location.Location,int,long) -> a
    void a(com.aps.aa,java.lang.String) -> a
    android.os.Looper a(com.aps.aa,android.os.Looper) -> a
    com.aps.aw a(com.aps.aa,com.aps.aw) -> a
    com.aps.aw d(com.aps.aa) -> d
    android.location.LocationManager e(com.aps.aa) -> e
    android.os.Handler a(com.aps.aa,android.os.Handler) -> a
    int l() -> l
    android.location.LocationListener f(com.aps.aa) -> f
    android.location.Location g(com.aps.aa) -> g
    int h(com.aps.aa) -> h
    android.location.GpsStatus i(com.aps.aa) -> i
    android.location.GpsStatus a(com.aps.aa,android.location.GpsStatus) -> a
    int a(com.aps.aa,int) -> a
    int b(com.aps.aa,int) -> b
    java.util.HashMap a(com.aps.aa,java.util.HashMap) -> a
    int m() -> m
    int j(com.aps.aa) -> j
    int k(com.aps.aa) -> k
    int c(com.aps.aa,int) -> c
    com.aps.am l(com.aps.aa) -> l
    int d(com.aps.aa,int) -> d
    java.util.HashMap m(com.aps.aa) -> m
    int b(com.aps.aa,java.util.HashMap) -> b
    android.os.Handler n(com.aps.aa) -> n
    int e(com.aps.aa,int) -> e
    int o(com.aps.aa) -> o
    int a(com.aps.aa,com.aps.y,int) -> a
    int p(com.aps.aa) -> p
    java.lang.String b(com.aps.aa,java.lang.String) -> b
com.aps.ab -> com.aps.ab:
    byte k -> k
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    short f -> f
    byte g -> g
    byte h -> h
    long i -> i
    long j -> j
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.ac -> com.aps.ac:
    byte k -> k
    short l -> l
    byte[] a -> a
    byte[] b -> b
    byte[] c -> c
    short d -> d
    short e -> e
    byte f -> f
    byte[] g -> g
    byte[] h -> h
    short i -> i
    java.util.ArrayList j -> j
    java.lang.Boolean a(java.io.DataOutputStream) -> a
    byte[] a() -> a
com.aps.ad -> com.aps.ad:
    com.aps.ac a(android.location.Location,com.aps.am,int,byte,long,boolean) -> a
com.aps.ae -> com.aps.ae:
    byte c -> c
    byte a -> a
    java.util.ArrayList b -> b
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.af -> com.aps.af:
    byte a -> a
    byte[] b -> b
    double c -> c
    int d -> d
    int e -> e
    double f -> f
    byte g -> g
    byte h -> h
    byte[] i -> i
    byte j -> j
com.aps.ag -> com.aps.ag:
    byte c -> c
    byte a -> a
    java.util.ArrayList b -> b
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.ah -> com.aps.ah:
    byte[] a -> a
    short b -> b
    byte[] c -> c
com.aps.ai -> com.aps.ai:
    java.io.File a -> a
    java.util.ArrayList c -> c
    int[] b -> b
    boolean d -> d
    byte[] a() -> a
    void a(boolean) -> a
    boolean b() -> b
    int c() -> c
com.aps.aj -> com.aps.aj:
    android.content.Context a -> a
    int b -> b
    int c -> c
    int d -> d
    byte[] a(byte[],int) -> a
    void a(int) -> a
    int a() -> a
    java.io.File a(long) -> a
    boolean b(long) -> b
    java.io.File b() -> b
    java.io.File d() -> d
    java.util.ArrayList a(java.io.File[]) -> a
    int e() -> e
    java.io.File f() -> f
    java.io.File c(long) -> c
    byte[] a(byte[]) -> a
    com.aps.ac a(android.location.Location,com.aps.am,int,byte,long,boolean) -> a
    int a(int,int) -> a
    byte[] a(java.util.BitSet) -> a
    java.util.BitSet b(byte[]) -> b
    boolean c() -> c
    java.io.File a(android.content.Context) -> a
    java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object[]) -> a
    int b(java.lang.Object,java.lang.String,java.lang.Object[]) -> b
com.aps.ak -> com.aps.ak:
    byte g -> g
    int a -> a
    int b -> b
    short c -> c
    short d -> d
    int e -> e
    byte f -> f
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.al -> com.aps.al:
    short a -> a
    int b -> b
    byte c -> c
com.aps.am -> com.aps.am:
    android.content.Context a -> a
    android.telephony.TelephonyManager b -> b
    android.location.LocationManager c -> c
    android.net.wifi.WifiManager d -> d
    android.hardware.SensorManager e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    boolean i -> i
    int j -> j
    boolean k -> k
    long l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    int o -> o
    int p -> p
    int q -> q
    java.lang.String r -> r
    long s -> s
    long t -> t
    com.aps.am u -> u
    com.aps.ao v -> v
    com.aps.ap w -> w
    android.telephony.CellLocation x -> x
    com.aps.aq y -> y
    java.util.List z -> z
    java.util.Timer A -> A
    java.lang.Thread B -> B
    android.os.Looper C -> C
    int D -> D
    com.aps.am a(android.content.Context) -> a
    java.lang.String[] b(android.telephony.TelephonyManager) -> b
    void a() -> a
    void b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    boolean i() -> i
    java.util.List j() -> j
    java.util.List k() -> k
    byte l() -> l
    java.util.List m() -> m
    java.util.List n() -> n
    long o() -> o
    java.lang.String p() -> p
    int q() -> q
    int r() -> r
    int s() -> s
    java.lang.String t() -> t
    java.util.List a(float) -> a
    java.util.List b(float) -> b
    java.util.List u() -> u
    void v() -> v
    void w() -> w
    byte x() -> x
    java.lang.String a(int) -> a
    double b(int) -> b
    int c(int) -> c
    int d(int) -> d
    double e(int) -> e
    byte f(int) -> f
    java.lang.String g(int) -> g
    byte h(int) -> h
    boolean a(java.lang.Object) -> a
    int b(java.lang.Object) -> b
    void A() -> A
    void a(android.content.BroadcastReceiver) -> a
    void b(android.content.BroadcastReceiver) -> b
    void a(java.util.List) -> a
    boolean a(android.telephony.CellLocation) -> a
    int a(android.telephony.CellLocation,android.content.Context) -> a
    android.telephony.CellLocation B() -> B
    android.telephony.CellLocation b(java.util.List) -> b
    boolean c(android.content.Context) -> c
    android.content.Context y() -> y
    boolean b(android.content.Context) -> b
    android.os.Looper a(com.aps.am,android.os.Looper) -> a
    java.util.Timer a(com.aps.am,java.util.Timer) -> a
    com.aps.ao a(com.aps.am,com.aps.ao) -> a
    com.aps.ao a(com.aps.am) -> a
    void a(com.aps.am,android.telephony.PhoneStateListener) -> a
    com.aps.ap a(com.aps.am,com.aps.ap) -> a
    com.aps.ap b(com.aps.am) -> b
    void a(com.aps.am,android.location.GpsStatus$NmeaListener) -> a
    android.net.wifi.WifiManager c(com.aps.am) -> c
    java.util.Timer d(com.aps.am) -> d
    java.util.List e(com.aps.am) -> e
    long a(com.aps.am,long) -> a
    int z() -> z
    boolean a(com.aps.am,boolean) -> a
    android.telephony.TelephonyManager f(com.aps.am) -> f
    java.lang.String[] a(android.telephony.TelephonyManager) -> a
    int a(com.aps.am,int) -> a
    int b(com.aps.am,int) -> b
    long b(com.aps.am,long) -> b
    android.telephony.CellLocation a(com.aps.am,android.telephony.CellLocation) -> a
    boolean g(com.aps.am) -> g
    int c(com.aps.am,int) -> c
    int h(com.aps.am) -> h
    long c(com.aps.am,long) -> c
    java.lang.String a(com.aps.am,java.lang.String) -> a
com.aps.an -> com.aps.an:
    com.aps.am a -> a
    void run() -> run
com.aps.ao -> com.aps.ao:
    com.aps.am a -> a
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.aps.ap -> com.aps.ap:
    com.aps.am a -> a
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
com.aps.aq -> com.aps.aq:
    com.aps.am a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aps.ar -> com.aps.ar:
    com.aps.aq a -> a
    void run() -> run
com.aps.as -> com.aps.as:
    com.aps.aa a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    boolean a(android.location.Location) -> a
com.aps.at -> com.aps.at:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aps.au -> com.aps.au:
    com.aps.aa a -> a
    void run() -> run
com.aps.av -> com.aps.av:
    com.aps.au a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.aps.aw -> com.aps.aw:
    long a -> a
    long b -> b
    boolean c -> c
    java.util.List d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.aps.aa h -> h
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void a(java.lang.String) -> a
com.aps.ax -> com.aps.ax:
    com.aps.aa a -> a
    void run() -> run
com.aps.ay -> com.aps.ay:
    com.aps.aa a -> a
    void a() -> a
com.aps.az -> com.aps.az:
    android.content.Context a -> a
    boolean b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    long j -> j
    com.aps.ay k -> k
    boolean a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    int e() -> e
    void a(int) -> a
    int f() -> f
    void b(int) -> b
    void a(com.aps.ay) -> a
    com.aps.az a(android.content.Context) -> a
    boolean a(java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
    byte[] c(int) -> c
    byte[] a(long) -> a
    int a(byte[],int) -> a
    long b(byte[],int) -> b
    void g() -> g
com.aps.b -> com.aps.b:
    android.content.Context k -> k
    int l -> l
    android.net.ConnectivityManager m -> m
    android.net.wifi.WifiManager n -> n
    com.aps.m o -> o
    android.telephony.TelephonyManager p -> p
    java.util.List q -> q
    java.util.List r -> r
    java.util.Map s -> s
    java.util.Map t -> t
    android.telephony.PhoneStateListener u -> u
    int v -> v
    com.aps.b$b w -> w
    android.net.wifi.WifiInfo x -> x
    org.json.JSONObject y -> y
    com.aps.c z -> z
    long A -> A
    boolean B -> B
    long C -> C
    long D -> D
    long E -> E
    com.aps.n F -> F
    int G -> G
    java.lang.String H -> H
    com.aps.aa I -> I
    java.lang.StringBuilder J -> J
    boolean K -> K
    long L -> L
    com.aps.f a -> a
    int b -> b
    boolean c -> c
    com.aps.d M -> M
    com.aps.b$a d -> d
    java.lang.String e -> e
    java.lang.StringBuilder f -> f
    android.telephony.CellLocation N -> N
    boolean O -> O
    java.util.TimerTask g -> g
    java.util.Timer h -> h
    com.aps.ai i -> i
    int j -> j
    void a(android.content.Context) -> a
    com.aps.c a() -> a
    void b() -> b
    void a(java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    void a(com.aps.k,android.app.PendingIntent) -> a
    void b(com.aps.k,android.app.PendingIntent) -> b
    void a(android.app.PendingIntent) -> a
    void b(android.app.PendingIntent) -> b
    void c() -> c
    void g() -> g
    void h() -> h
    void i() -> i
    void a(android.telephony.CellLocation) -> a
    boolean a(long) -> a
    java.lang.String j() -> j
    boolean a(android.net.wifi.WifiInfo) -> a
    boolean a(android.net.wifi.ScanResult) -> a
    java.lang.StringBuilder k() -> k
    byte[] a(java.lang.Object) -> a
    void a(java.util.List) -> a
    boolean a(int) -> a
    byte[] l() -> l
    boolean m() -> m
    boolean n() -> n
    boolean o() -> o
    com.aps.c a(byte[],boolean) -> a
    void b(int) -> b
    com.aps.e b(android.telephony.CellLocation) -> b
    com.aps.e a(android.telephony.NeighboringCellInfo) -> a
    void c(android.telephony.CellLocation) -> c
    void d(android.telephony.CellLocation) -> d
    void p() -> p
    void q() -> q
    boolean r() -> r
    void d() -> d
    void s() -> s
    void e() -> e
    void a(android.content.Context,com.amap.api.location.AMapLocation) -> a
    void t() -> t
    boolean u() -> u
    com.aps.c v() -> v
    void w() -> w
    int a(boolean,int) -> a
    void c(int) -> c
    void x() -> x
    void y() -> y
    void d(int) -> d
    boolean f() -> f
    void z() -> z
    java.lang.String a(int,int,int) -> a
    android.telephony.CellLocation A() -> A
    boolean e(android.telephony.CellLocation) -> e
    android.telephony.CellLocation b(java.util.List) -> b
    void B() -> B
    boolean a(com.aps.b) -> a
    android.telephony.CellLocation a(com.aps.b,android.telephony.CellLocation) -> a
    long a(com.aps.b,long) -> a
    long b(com.aps.b,long) -> b
    int b(com.aps.b) -> b
    void a(com.aps.b,int) -> a
    java.util.List c(com.aps.b) -> c
    int b(com.aps.b,int) -> b
    android.net.wifi.WifiManager d(com.aps.b) -> d
    java.util.List a(com.aps.b,java.util.List) -> a
    long c(com.aps.b,long) -> c
    java.util.List e(com.aps.b) -> e
    void f(com.aps.b) -> f
    void g(com.aps.b) -> g
    void h(com.aps.b) -> h
    boolean a(com.aps.b,boolean) -> a
    int i(com.aps.b) -> i
    com.aps.aa j(com.aps.b) -> j
    boolean b(com.aps.b,boolean) -> b
    boolean c(com.aps.b,boolean) -> c
    boolean k(com.aps.b) -> k
    void c(com.aps.b,int) -> c
    void l(com.aps.b) -> l
com.aps.b$1 -> com.aps.b$1:
    com.aps.b a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthChanged(int) -> onSignalStrengthChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
com.aps.b$2 -> com.aps.b$2:
    int a -> a
    com.aps.b b -> b
    void run() -> run
com.aps.b$a -> com.aps.b$a:
    com.aps.b a -> a
    void a(int) -> a
com.aps.b$b -> com.aps.b$b:
    com.aps.b a -> a
    com.aps.b b -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aps.ba -> com.aps.ba:
    int c -> c
    int d -> d
    com.aps.am e -> e
    float f -> f
    com.aps.be a -> a
    com.aps.bb b -> b
    void a() -> a
    boolean a(android.location.Location) -> a
    void a(int) -> a
    void b(int) -> b
    boolean b(android.location.Location) -> b
com.aps.bb -> com.aps.bb:
    com.aps.bc a -> a
    android.location.Location b -> b
com.aps.bc -> com.aps.bc:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
com.aps.bd -> com.aps.bd:
    java.lang.String a -> a
com.aps.be -> com.aps.be:
    java.util.List a -> a
    android.location.Location b -> b
com.aps.bf -> com.aps.bf:
    boolean a -> a
    java.lang.String[] b -> b
    boolean a(java.lang.String[],java.lang.String) -> a
com.aps.bg -> com.aps.bg:
    java.io.RandomAccessFile a -> a
    com.aps.aj b -> b
    java.io.File c -> c
    com.aps.ai a(int) -> a
    java.util.BitSet b() -> b
    java.util.ArrayList a(int,int) -> a
    byte a(byte[]) -> a
    int a(java.util.BitSet) -> a
    int a(int,int,int) -> a
    int a() -> a
    void a(com.aps.ai) -> a
com.aps.bh -> com.aps.bh:
    java.io.RandomAccessFile a -> a
    com.aps.aj b -> b
    java.lang.String c -> c
    java.io.File d -> d
    void a(long,byte[]) -> a
com.aps.bi -> com.aps.bi:
    java.lang.String a -> a
    boolean a(android.content.Context) -> a
    void a(java.lang.String) -> a
com.aps.c -> com.aps.c:
    java.lang.String a -> a
    double b -> b
    double c -> c
    float d -> d
    float e -> e
    float f -> f
    long g -> g
    com.amap.api.location.core.AMapLocException h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    int v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    org.json.JSONObject y -> y
    com.amap.api.location.core.AMapLocException a() -> a
    void a(com.amap.api.location.core.AMapLocException) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    int e() -> e
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    java.lang.String f() -> f
    void f(java.lang.String) -> f
    double g() -> g
    void a(double) -> a
    double h() -> h
    void b(double) -> b
    float i() -> i
    void a(float) -> a
    void b(float) -> b
    long j() -> j
    void a(long) -> a
    java.lang.String k() -> k
    void g(java.lang.String) -> g
    java.lang.String l() -> l
    void h(java.lang.String) -> h
    java.lang.String m() -> m
    void i(java.lang.String) -> i
    java.lang.String n() -> n
    void j(java.lang.String) -> j
    java.lang.String o() -> o
    void k(java.lang.String) -> k
    java.lang.String p() -> p
    void l(java.lang.String) -> l
    java.lang.String q() -> q
    void m(java.lang.String) -> m
    java.lang.String r() -> r
    void n(java.lang.String) -> n
    java.lang.String s() -> s
    void o(java.lang.String) -> o
    java.lang.String t() -> t
    void p(java.lang.String) -> p
    java.lang.String u() -> u
    void q(java.lang.String) -> q
    org.json.JSONObject v() -> v
    void a(org.json.JSONObject) -> a
    java.lang.String w() -> w
com.aps.d -> com.aps.d:
    java.util.LinkedHashMap b -> b
    com.aps.r c -> c
    long d -> d
    java.lang.String a -> a
    java.io.File a(android.content.Context) -> a
    void a(java.io.File) -> a
    void a(java.lang.String,com.aps.c,java.lang.StringBuilder) -> a
    com.aps.c a(java.lang.String,java.lang.StringBuilder,java.lang.String) -> a
    boolean a(java.lang.String,com.aps.c) -> a
    void a() -> a
    void b() -> b
    com.aps.d$a a(java.lang.String,java.lang.StringBuilder,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.StringBuilder) -> a
    void a(java.lang.String,java.util.Hashtable) -> a
    double a(double[],double[]) -> a
com.aps.d$a -> com.aps.d$a:
    com.aps.c a -> a
    java.lang.String b -> b
    com.aps.c a() -> a
    void a(com.aps.c) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
com.aps.e -> com.aps.e:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
com.aps.f -> com.aps.f:
    java.lang.String b -> b
    android.content.Context c -> c
    boolean d -> d
    com.aps.a e -> e
    android.content.ServiceConnection f -> f
    android.content.Intent g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    com.aps.f$a a -> a
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    void a() -> a
    void a(com.aps.f$a) -> a
    boolean b() -> b
    void c() -> c
    com.aps.c d() -> d
    com.aps.c a(android.os.Bundle) -> a
    com.aps.a a(com.aps.f,com.aps.a) -> a
com.aps.f$1 -> com.aps.f$1:
    com.aps.f$a a -> a
    com.aps.f b -> b
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.aps.f$a -> com.aps.f$a:
    void a(int) -> a
com.aps.g -> com.aps.g:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    boolean h -> h
    boolean i -> i
    long j -> j
    long k -> k
    boolean l -> l
    android.util.SparseArray m -> m
    java.lang.String[] n -> n
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(boolean) -> a
com.aps.h -> com.aps.h:
    java.util.regex.Pattern a -> a
    java.io.File c -> c
    java.io.File d -> d
    java.io.File e -> e
    java.io.File f -> f
    int g -> g
    long h -> h
    int i -> i
    long j -> j
    java.io.Writer k -> k
    java.util.LinkedHashMap l -> l
    int m -> m
    long n -> n
    java.util.concurrent.ThreadPoolExecutor b -> b
    java.util.concurrent.Callable o -> o
    java.io.OutputStream p -> p
    com.aps.h a(java.io.File,int,int,long) -> a
    void c() -> c
    void d(java.lang.String) -> d
    void d() -> d
    void e() -> e
    void a(java.io.File) -> a
    void a(java.io.File,java.io.File,boolean) -> a
    com.aps.h$c a(java.lang.String) -> a
    com.aps.h$a b(java.lang.String) -> b
    com.aps.h$a a(java.lang.String,long) -> a
    void a(com.aps.h$a,boolean) -> a
    boolean f() -> f
    boolean c(java.lang.String) -> c
    void g() -> g
    void close() -> close
    void h() -> h
    void a() -> a
    void e(java.lang.String) -> e
    java.io.Writer a(com.aps.h) -> a
    void b(com.aps.h) -> b
    boolean c(com.aps.h) -> c
    void d(com.aps.h) -> d
    int a(com.aps.h,int) -> a
    int e(com.aps.h) -> e
    java.io.File f(com.aps.h) -> f
    java.io.OutputStream b() -> b
    void a(com.aps.h,com.aps.h$a,boolean) -> a
com.aps.h$a -> com.aps.h$a:
    com.aps.h$b b -> b
    boolean[] c -> c
    boolean d -> d
    boolean e -> e
    com.aps.h a -> a
    java.io.OutputStream a(int) -> a
    void a() -> a
    void b() -> b
    com.aps.h$b a(com.aps.h$a) -> a
    boolean[] b(com.aps.h$a) -> b
    boolean a(com.aps.h$a,boolean) -> a
com.aps.h$a$a -> com.aps.h$a$a:
    com.aps.h$a a -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.aps.h$b -> com.aps.h$b:
    java.lang.String b -> b
    long[] c -> c
    boolean d -> d
    com.aps.h$a e -> e
    long f -> f
    com.aps.h a -> a
    java.lang.String a() -> a
    void a(java.lang.String[]) -> a
    java.io.IOException b(java.lang.String[]) -> b
    java.io.File a(int) -> a
    java.io.File b(int) -> b
    boolean a(com.aps.h$b,boolean) -> a
    com.aps.h$a a(com.aps.h$b,com.aps.h$a) -> a
    void a(com.aps.h$b,java.lang.String[]) -> a
    com.aps.h$a a(com.aps.h$b) -> a
    long[] b(com.aps.h$b) -> b
    java.lang.String c(com.aps.h$b) -> c
    boolean d(com.aps.h$b) -> d
    long e(com.aps.h$b) -> e
    long a(com.aps.h$b,long) -> a
com.aps.h$c -> com.aps.h$c:
    java.lang.String b -> b
    long c -> c
    java.io.InputStream[] d -> d
    long[] e -> e
    com.aps.h a -> a
    java.io.InputStream a(int) -> a
    void close() -> close
com.aps.i -> com.aps.i:
    com.aps.h a -> a
    java.lang.Void a() -> a
    java.lang.Object call() -> call
com.aps.j -> com.aps.j:
    void write(int) -> write
com.aps.k -> com.aps.k:
    double a -> a
    double b -> b
    float c -> c
    int d -> d
    long e -> e
    long a() -> a
    void a(long) -> a
    java.lang.String b() -> b
com.aps.l -> com.aps.l:
    void a(android.content.Context) -> a
    void b() -> b
    void a(java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    void a(android.content.Context,com.amap.api.location.AMapLocation) -> a
    com.aps.c a() -> a
    void a(com.aps.k,android.app.PendingIntent) -> a
    void b(com.aps.k,android.app.PendingIntent) -> b
    void a(android.app.PendingIntent) -> a
    void b(android.app.PendingIntent) -> b
    void c() -> c
com.aps.m -> com.aps.m:
    com.aps.m a -> a
    com.aps.c b -> b
    long c -> c
    long d -> d
    com.aps.m a() -> a
    void b() -> b
    com.aps.c a(com.aps.c) -> a
com.aps.n -> com.aps.n:
    com.aps.n a -> a
    com.aps.n a() -> a
    java.lang.String a(android.content.Context,java.lang.String,byte[],java.lang.String) -> a
    java.lang.String a(byte[],android.content.Context,org.json.JSONObject) -> a
    org.apache.http.client.HttpClient a(android.content.Context,android.net.NetworkInfo) -> a
    java.net.Proxy a(android.content.Context) -> a
    boolean a(java.lang.String,int) -> a
    int a(android.net.NetworkInfo) -> a
    java.lang.String a(android.telephony.TelephonyManager) -> a
    boolean a(org.apache.http.HttpResponse) -> a
    java.lang.String[] a(org.json.JSONObject) -> a
    java.lang.String b() -> b
    java.lang.String a(byte[],android.content.Context) -> a
com.aps.o -> com.aps.o:
    com.aps.c a(java.lang.String) -> a
com.aps.o$1 -> com.aps.o$1:
com.aps.o$a -> com.aps.o$a:
    com.aps.c a -> a
    java.lang.String b -> b
    void characters(char[],int,int) -> characters
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.aps.p -> com.aps.p:
    java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Object[]) -> a
    int b(java.lang.Object,java.lang.String,java.lang.Object[]) -> b
com.aps.q -> com.aps.q:
    java.lang.String a -> a
    short b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    byte[] A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    byte[] a() -> a
    byte[] a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(java.lang.String,int) -> a
    void b() -> b
com.aps.r -> com.aps.r:
    java.util.List a -> a
    com.aps.h b -> b
    int c -> c
    com.aps.r a(java.io.File,int,long) -> a
    void a() -> a
    java.util.Map a(java.lang.String) -> a
    java.io.OutputStream a(java.lang.String,java.util.Map) -> a
    void b(java.lang.String,java.util.Map) -> b
    java.util.Map a(com.aps.h$c) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
com.aps.r$1 -> com.aps.r$1:
com.aps.r$a -> com.aps.r$a:
    com.aps.h$a a -> a
    boolean b -> b
    void close() -> close
    void flush() -> flush
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
com.aps.s -> com.aps.s:
    com.aps.s a -> a
    java.lang.String a(java.lang.Object,java.lang.String) -> a
    byte[] a(java.lang.String) -> a
    byte[] a(int) -> a
    byte[] b(java.lang.String) -> b
    byte[] b(int) -> b
    byte[] a(long) -> a
com.aps.t -> com.aps.t:
    java.io.InputStream a -> a
    java.nio.charset.Charset b -> b
    byte[] c -> c
    int d -> d
    int e -> e
    void close() -> close
    java.lang.String a() -> a
    void b() -> b
    java.nio.charset.Charset a(com.aps.t) -> a
com.aps.t$1 -> com.aps.t$1:
    com.aps.t a -> a
    java.lang.String toString() -> toString
com.aps.u -> com.aps.u:
    java.nio.charset.Charset a -> a
    java.nio.charset.Charset b -> b
    void a(java.io.File) -> a
    void a(java.io.Closeable) -> a
com.aps.v -> com.aps.v:
    void a(java.lang.Object[]) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(java.lang.Throwable) -> a
    boolean a(com.aps.c) -> a
    int a(int) -> a
    java.lang.String[] a(android.telephony.TelephonyManager) -> a
    int a(android.telephony.CellLocation,android.content.Context) -> a
    long a() -> a
    long b() -> b
    boolean a(android.content.Context) -> a
    float a(double[]) -> a
    java.lang.Object b(android.content.Context,java.lang.String) -> b
    void a(org.apache.http.params.HttpParams,int) -> a
    int c() -> c
    byte[] a(byte[]) -> a
    android.net.NetworkInfo b(android.content.Context) -> b
    boolean a(java.lang.String) -> a
    float b(double[]) -> b
    float a(com.aps.c,com.aps.c) -> a
com.aps.w -> com.aps.w:
    double[][] a -> a
    double[] a(double,double) -> a
    double a(double,double,double) -> a
com.aps.x -> com.aps.x:
    byte f -> f
    short a -> a
    int b -> b
    byte c -> c
    byte d -> d
    java.util.ArrayList e -> e
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.y -> com.aps.y:
    boolean a -> a
    java.lang.String b -> b
    boolean c -> c
    double d -> d
    double e -> e
    void d() -> d
    boolean a() -> a
    double b() -> b
    double c() -> c
com.aps.z -> com.aps.z:
    short a -> a
    int b -> b
    com.aps.ab c -> c
    com.aps.x d -> d
    com.aps.ak e -> e
    com.aps.ag f -> f
    com.aps.ae g -> g
com.baidu.android.pushservice.BasicPushNotificationBuilder -> com.baidu.android.pushservice.a:
    android.app.Notification construct(android.content.Context) -> a
com.baidu.android.pushservice.CommandService -> com.baidu.android.pushservice.CommandService:
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    java.lang.String a(java.lang.String,java.lang.String) -> a
    void a(android.content.Intent) -> a
com.baidu.android.pushservice.PushConstants -> com.baidu.android.pushservice.b:
    java.lang.String rsaEncrypt(java.lang.String) -> a
    android.content.Intent createWebMethodIntent(android.content.Context) -> a
    java.lang.String getErrorMsg(int) -> a
com.baidu.android.pushservice.PushManager -> com.baidu.android.pushservice.c:
    int INFO_MAX_NUM -> a
    android.os.Handler mHandler -> b
    java.util.HashMap mStatisticsMap -> c
    void startWork(android.content.Context,int,java.lang.String) -> a
    void startWork(android.content.Context,int,java.lang.String,boolean) -> a
    boolean installStatus(android.content.Context,int,java.lang.String) -> d
    boolean isRunningNormal(android.content.Context) -> c
    void bindPushService(android.content.Context,int,java.lang.String) -> e
    java.lang.String bindinfoTojson(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void bind(android.content.Context,int) -> a
    void webAppBind(android.content.Context,int,java.lang.String) -> f
    void lightAppBind(android.content.Context,int,java.lang.String) -> g
    boolean isConnected(android.content.Context) -> a
    android.content.Intent createMethodIntent(android.content.Context) -> b
    android.content.Intent createWebMethodIntent(android.content.Context) -> d
    boolean isNullContext(android.content.Context) -> e
    void sendRedirecctionIntent(android.content.Context,android.content.Intent) -> a
    void checkedSendForUser(android.content.Context,int) -> b
    void access$000(android.content.Context,int,java.lang.String) -> b
    void access$100(android.content.Context,int,java.lang.String) -> c
com.baidu.android.pushservice.PushMessageReceiver -> com.baidu.android.pushservice.PushMessageReceiver:
    java.lang.String TAG -> a
    java.lang.String ACTION_LAPP_RECEIVE -> b
    java.lang.String ACTION_LAPP_MESSAGE -> c
    java.lang.Long bindTime -> d
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onBind(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void onUnbind(android.content.Context,int,java.lang.String) -> a
    void onCheckBindState(android.content.Context,int,java.lang.String,boolean) -> a
    void onSetTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> a
    void onDelTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> b
    void onListTags(android.content.Context,int,java.util.List,java.lang.String) -> a
    void onMessage(android.content.Context,java.lang.String,java.lang.String) -> a
    void onNotificationClicked(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void onNotificationArrived(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> b
com.baidu.android.pushservice.PushNotificationBuilder -> com.baidu.android.pushservice.d:
    int mStatusbarIcon -> a
    int mNotificationFlags -> b
    int mNotificationDefaults -> c
    java.lang.String mNotificationsound -> d
    long[] mVibratePattern -> e
    java.lang.String mNotificationTitle -> f
    java.lang.String mNotificationText -> g
    void setStatusbarIcon(int) -> a
    void setNotificationTitle(java.lang.String) -> a
    void setNotificationText(java.lang.String) -> b
    void setNotificationFlags(int) -> b
    void setNotificationDefaults(int) -> c
    android.app.Notification construct(android.content.Context) -> a
com.baidu.android.pushservice.PushSDK -> com.baidu.android.pushservice.e:
    java.lang.String TAG -> b
    com.baidu.android.pushservice.PushSDK mPushSDK -> c
    int ALARM_TIMEOUT -> d
    int ALARM_NETWORKLESS_TIMEOUT -> e
    int alarmTimeout -> f
    com.baidu.android.pushservice.h mPushConnection -> a
    java.lang.Object mPushConnLock -> g
    android.net.LocalServerSocket mLocalSocket -> h
    com.baidu.android.pushservice.ae mRegistrationService -> i
    java.lang.Boolean mIsAlive -> j
    java.lang.Boolean mIsInited -> k
    java.lang.Object mIsAlive_lock -> l
    android.content.Context mContext -> m
    android.os.Handler mHandler -> n
    java.lang.Runnable mStartRunnable -> o
    java.lang.Runnable mRegisterRunnable -> p
    java.lang.Runnable mConnectRunnable -> q
    com.baidu.android.pushservice.PushSDK getInstance(android.content.Context) -> a
    boolean initPushSDK() -> a
    void destroy() -> b
    com.baidu.android.pushservice.ae getRegistrationService() -> c
    boolean handleOnStart(android.content.Intent) -> a
    void setAlarmTimeout(int) -> a
    void doDestroy() -> i
    boolean shouldStopSelf(android.content.Context) -> b
    void newPushConnection() -> j
    void setAlarmRepeat() -> k
    void cancelAlarmRepeat() -> l
    void sendRequestTokenIntent() -> d
    void tryConnect() -> m
    boolean heartbeat() -> n
    void scheduleRegister() -> o
    void scheduleConnect() -> p
    void tryUpdateGlobalPriority() -> q
    com.baidu.android.pushservice.PushSDK access$000() -> e
    android.content.Context access$100() -> f
    java.lang.String access$200() -> g
    void access$300(com.baidu.android.pushservice.PushSDK) -> a
    void access$400(com.baidu.android.pushservice.PushSDK) -> b
    java.lang.Object access$500() -> h
com.baidu.android.pushservice.PushService -> com.baidu.android.pushservice.PushService:
    boolean mExitOnDestroy -> a
    android.os.Handler mHandler -> b
    com.baidu.android.pushservice.SDcardRemovedReceiver sdcardRemovedReceiver -> c
    boolean initSuc -> d
    java.lang.Runnable mDestroyRunnable -> e
    int bindCnt -> f
    com.baidu.android.pushservice.b.a$a mBinder -> g
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void stopSelf(boolean,boolean) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    int access$000(com.baidu.android.pushservice.PushService) -> a
com.baidu.android.pushservice.PushServiceReceiver -> com.baidu.android.pushservice.PushServiceReceiver:
    java.util.concurrent.locks.ReentrantLock lock -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean isUpToDailyMax(android.content.Context) -> a
    boolean getPushADMsgEnable(android.content.Context) -> b
    void startOwnPushService(android.content.Context) -> c
    void showAdvertiseNotifiation(android.content.Context,java.lang.String,java.lang.String,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String) -> a
    void showPrivateNotification(android.content.Context,java.lang.String,java.lang.String,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String) -> b
    void showRichNotification(android.content.Context,java.lang.String,java.lang.String,com.baidu.android.pushservice.message.PublicMsg,java.lang.String) -> a
    void handleRichMediaClick(android.content.Context,com.baidu.android.pushservice.message.PublicMsg) -> a
    void sendNotificationArrivedReceiver(android.content.Context,java.lang.String,com.baidu.android.pushservice.message.PublicMsg) -> a
    android.content.Intent getCommandServiceIntent(android.content.Context,android.content.Intent,java.lang.String) -> a
    java.util.concurrent.locks.ReentrantLock access$000(com.baidu.android.pushservice.PushServiceReceiver) -> a
    boolean access$100(com.baidu.android.pushservice.PushServiceReceiver,android.content.Context) -> a
    boolean access$200(com.baidu.android.pushservice.PushServiceReceiver,android.content.Context) -> b
    void access$300(com.baidu.android.pushservice.PushServiceReceiver,android.content.Context,java.lang.String,java.lang.String,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String) -> a
com.baidu.android.pushservice.PushServiceReceiver$a -> com.baidu.android.pushservice.f:
    android.content.Context a -> a
    android.widget.RemoteViews b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    android.app.NotificationManager g -> g
    void a(com.baidu.android.pushservice.richmedia.b) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.m) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.p) -> a
    void a(com.baidu.android.pushservice.richmedia.b,java.lang.Throwable) -> a
    void b(com.baidu.android.pushservice.richmedia.b) -> b
com.baidu.android.pushservice.PushSettings -> com.baidu.android.pushservice.g:
    android.content.Context a -> a
    int b -> b
    void a(android.content.Context) -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void a(java.lang.String,int,java.lang.String) -> a
    void a(java.util.HashMap) -> a
    java.lang.String b(java.lang.String) -> b
    java.util.HashMap j() -> j
    void c(java.lang.String) -> c
    boolean c() -> c
    boolean b(android.content.Context) -> b
    void a(int) -> a
    int d() -> d
    void a(long) -> a
    long c(android.content.Context) -> c
    void b(long) -> b
    long e() -> e
    void b(int) -> b
    boolean f() -> f
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String d(java.lang.String) -> d
    void c(int) -> c
    int g() -> g
    boolean h() -> h
    boolean i() -> i
    void d(android.content.Context) -> d
    void e(android.content.Context) -> e
    void a(android.content.Context,java.lang.String) -> a
    void f(android.content.Context) -> f
com.baidu.android.pushservice.RegistrationReceiver -> com.baidu.android.pushservice.RegistrationReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void handleRegisterSync(android.content.Context,android.content.Intent) -> e
    void handleRegisterWebSync(android.content.Context,android.content.Intent) -> f
    void handleRegisterLappSync(android.content.Context,android.content.Intent) -> g
    void handleRegisterSDKSync(android.content.Context,android.content.Intent) -> h
    void packageUninstalled(android.content.Context,com.baidu.android.pushservice.c.h) -> a
    void access$000(android.content.Context,android.content.Intent) -> a
    void access$100(android.content.Context,android.content.Intent) -> b
    void access$200(android.content.Context,android.content.Intent) -> c
    void access$300(android.content.Context,android.content.Intent) -> d
com.baidu.android.pushservice.SDcardRemovedReceiver -> com.baidu.android.pushservice.SDcardRemovedReceiver:
    java.lang.String a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.android.pushservice.a -> com.baidu.android.pushservice.h:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    short a() -> a
    boolean b() -> b
    boolean a(android.content.Context) -> a
    void a(android.content.Context,boolean) -> a
    boolean b(android.content.Context) -> b
    void b(android.content.Context,boolean) -> b
    java.lang.String c(android.content.Context) -> c
com.baidu.android.pushservice.a.a.a -> com.baidu.android.pushservice.a.a.a:
    com.baidu.android.pushservice.a.a.a$a a -> a
    android.net.Uri[] b -> b
    int c -> c
    void run() -> run
    android.graphics.Bitmap[] a(android.net.Uri[]) -> a
    java.io.InputStream a(android.net.Uri) -> a
    byte[] a(java.io.InputStream) -> a
    int a(android.graphics.BitmapFactory$Options,int,int) -> a
    int b(android.graphics.BitmapFactory$Options,int,int) -> b
    void a(android.graphics.Bitmap[]) -> a
com.baidu.android.pushservice.a.a.a$a -> com.baidu.android.pushservice.a.a.b:
    void a(android.graphics.Bitmap[]) -> a
com.baidu.android.pushservice.a.a.a$b -> com.baidu.android.pushservice.a.a.c:
    java.security.KeyStore a -> a
    com.baidu.android.pushservice.a.a.a$b b -> b
    javax.net.ssl.SSLContext c -> c
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    com.baidu.android.pushservice.a.a.a$b a() -> a
com.baidu.android.pushservice.a.a.b -> com.baidu.android.pushservice.a.a.d:
    com.baidu.android.pushservice.a.a.a$b a -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.baidu.android.pushservice.a.a.c -> com.baidu.android.pushservice.a.a.e:
    java.lang.String a -> a
    com.baidu.android.pushservice.a.a.d b -> b
    int c -> c
    int d -> d
    java.util.Map e -> e
    android.graphics.Bitmap a(java.lang.String) -> a
    void a(java.lang.String,android.graphics.Bitmap) -> a
    boolean b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
com.baidu.android.pushservice.a.a.d -> com.baidu.android.pushservice.a.a.f:
    void a(java.lang.String,android.graphics.Bitmap) -> a
com.baidu.android.pushservice.a.a.e -> com.baidu.android.pushservice.a.a.g:
    java.lang.String a -> a
    com.baidu.android.pushservice.a.a.h b -> b
    com.baidu.android.pushservice.a.a.c c -> c
    int d -> d
    com.baidu.android.pushservice.a.a.e e -> e
    com.baidu.android.pushservice.a.a.e a() -> a
    void a(android.content.Context,com.baidu.android.pushservice.a.a.a$a,android.net.Uri[]) -> a
    android.graphics.Bitmap[] a(android.net.Uri[]) -> a
    com.baidu.android.pushservice.a.a.c a(com.baidu.android.pushservice.a.a.e) -> a
    com.baidu.android.pushservice.a.a.h b(com.baidu.android.pushservice.a.a.e) -> b
    android.graphics.Bitmap[] a(com.baidu.android.pushservice.a.a.e,android.net.Uri[]) -> a
com.baidu.android.pushservice.a.a.f -> com.baidu.android.pushservice.a.a.h:
    java.util.List a -> a
    com.baidu.android.pushservice.a.a.a$a b -> b
    android.net.Uri[] c -> c
    com.baidu.android.pushservice.a.a.e d -> d
    void a(android.graphics.Bitmap[]) -> a
com.baidu.android.pushservice.a.a.g -> com.baidu.android.pushservice.a.a.i:
    boolean a(android.net.Uri) -> a
com.baidu.android.pushservice.a.a.h -> com.baidu.android.pushservice.a.a.j:
    int a -> a
    com.baidu.android.pushservice.a.a.h$b b -> b
    java.util.Map c -> c
    android.graphics.Bitmap a(java.lang.String) -> a
    void a(java.lang.String,android.graphics.Bitmap) -> a
    void b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
com.baidu.android.pushservice.a.a.h$a -> com.baidu.android.pushservice.a.a.k:
    android.graphics.Bitmap a -> a
    int b -> b
    long c -> c
com.baidu.android.pushservice.a.a.h$b -> com.baidu.android.pushservice.a.a.l:
    java.lang.String a(java.util.Map) -> a
    void a(com.baidu.android.pushservice.a.a.h$a) -> a
com.baidu.android.pushservice.a.a.h$c -> com.baidu.android.pushservice.a.a.m:
    java.lang.String a(java.util.Map) -> a
    void a(com.baidu.android.pushservice.a.a.h$a) -> a
com.baidu.android.pushservice.a.b.a -> com.baidu.android.pushservice.a.b.a:
    android.widget.RemoteViews d -> d
    void a(android.graphics.Bitmap) -> a
    void b(android.graphics.Bitmap) -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void c(android.graphics.Bitmap) -> c
    void a(long) -> a
    void a(android.content.Intent) -> a
com.baidu.android.pushservice.a.b.b -> com.baidu.android.pushservice.a.b.b:
    android.widget.RemoteViews d -> d
    void a(android.graphics.Bitmap) -> a
    void a(android.content.Intent) -> a
com.baidu.android.pushservice.a.b.c -> com.baidu.android.pushservice.a.b.c:
    com.baidu.android.pushservice.a.b.f b(com.baidu.android.pushservice.a.b.c$a,android.content.Context,java.lang.String,java.lang.String) -> b
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    void a(com.baidu.android.pushservice.a.b.c$a,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.content.Intent[]) -> a
    void a(int,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.content.Intent[]) -> a
    void a(com.baidu.android.pushservice.a.b.c$a,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.content.Intent) -> a
    void a(int,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.content.Intent) -> a
    void a(com.baidu.android.pushservice.a.b.f,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String) -> a
    com.baidu.android.pushservice.a.b.f a(com.baidu.android.pushservice.a.b.c$a,android.content.Context,java.lang.String,java.lang.String) -> a
com.baidu.android.pushservice.a.b.c$1 -> com.baidu.android.pushservice.a.b.d:
    int[] a -> a
com.baidu.android.pushservice.a.b.c$a -> com.baidu.android.pushservice.a.b.e:
    com.baidu.android.pushservice.a.b.c$a a -> a
    com.baidu.android.pushservice.a.b.c$a b -> b
    com.baidu.android.pushservice.a.b.c$a c -> c
    com.baidu.android.pushservice.a.b.c$a d -> d
    com.baidu.android.pushservice.a.b.c$a e -> e
    com.baidu.android.pushservice.a.b.c$a f -> f
    int g -> g
    com.baidu.android.pushservice.a.b.c$a[] h -> h
    com.baidu.android.pushservice.a.b.c$a[] values() -> values
    com.baidu.android.pushservice.a.b.c$a valueOf(java.lang.String) -> valueOf
    com.baidu.android.pushservice.a.b.c$a a(int) -> a
com.baidu.android.pushservice.a.b.d -> com.baidu.android.pushservice.a.b.f:
    com.baidu.android.pushservice.a.b.f a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.content.Intent[] f -> f
    void a(android.graphics.Bitmap[]) -> a
com.baidu.android.pushservice.a.b.e -> com.baidu.android.pushservice.a.b.g:
    android.content.Context a -> a
    com.baidu.android.pushservice.a.b.f b -> b
    java.lang.String c -> c
    android.content.Intent d -> d
    void a(android.graphics.Bitmap[]) -> a
com.baidu.android.pushservice.a.b.f -> com.baidu.android.pushservice.a.b.h:
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    android.app.Notification a() -> a
    void b(android.graphics.Bitmap) -> b
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void a(long) -> a
    void c(android.graphics.Bitmap) -> c
    void a(android.content.Intent) -> a
    void a(android.app.PendingIntent) -> a
com.baidu.android.pushservice.a.b.g -> com.baidu.android.pushservice.a.b.i:
    int a(android.content.Context,java.lang.String) -> a
    int b(android.content.Context,java.lang.String) -> b
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
com.baidu.android.pushservice.a.b.h -> com.baidu.android.pushservice.a.b.j:
    java.lang.String d -> d
    android.app.Notification a -> a
    android.widget.RemoteViews b -> b
    android.content.Context c -> c
    void b(android.graphics.Bitmap) -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    android.app.Notification a() -> a
    void a(int) -> a
    void c(int) -> c
    void b(int) -> b
    void c(android.graphics.Bitmap) -> c
    void a(long) -> a
    void a(android.content.Intent) -> a
    void a(android.app.PendingIntent) -> a
    int b() -> b
com.baidu.android.pushservice.a.b.i -> com.baidu.android.pushservice.a.b.k:
    android.app.Notification a -> a
    android.content.Context b -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    android.app.Notification a() -> a
    void b(android.graphics.Bitmap) -> b
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void a(long) -> a
    void c(android.graphics.Bitmap) -> c
    void a(android.content.Intent) -> a
    void a(android.app.PendingIntent) -> a
com.baidu.android.pushservice.aa -> com.baidu.android.pushservice.i:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.ab -> com.baidu.android.pushservice.j:
    java.lang.String j -> j
    java.lang.String[] k -> k
    java.lang.String l -> l
    java.lang.String[] m -> m
    int n -> n
    int a -> a
    java.lang.String o -> o
    java.lang.String b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String[] p -> p
    java.lang.String[] q -> q
    boolean r -> r
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void d() -> d
    java.lang.String a(android.content.Context,boolean) -> a
    java.lang.String b(android.content.Context,boolean) -> b
    java.util.ArrayList a(android.content.Context,java.lang.String) -> a
    java.util.ArrayList b(android.content.Context,java.lang.String) -> b
    void a(android.content.Context) -> a
    boolean b(android.content.Context,java.lang.String,java.lang.String) -> b
    java.lang.String e() -> e
    boolean a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String f() -> f
com.baidu.android.pushservice.ac -> com.baidu.android.pushservice.k:
    android.content.Context a -> a
    android.content.SharedPreferences b -> b
    void run() -> run
com.baidu.android.pushservice.ad -> com.baidu.android.pushservice.l:
    android.content.Intent a -> a
    android.content.Context b -> b
    com.baidu.android.pushservice.RegistrationReceiver c -> c
    void run() -> run
com.baidu.android.pushservice.ae -> com.baidu.android.pushservice.m:
    android.content.Context a -> a
    com.baidu.android.pushservice.f.v b -> b
    java.util.concurrent.ExecutorService c -> c
    boolean a(android.content.Intent) -> a
    void b(android.content.Intent) -> b
    void c(android.content.Intent) -> c
    void d(android.content.Intent) -> d
    void e(android.content.Intent) -> e
    void f(android.content.Intent) -> f
    void g(android.content.Intent) -> g
    void h(android.content.Intent) -> h
    void i(android.content.Intent) -> i
    void j(android.content.Intent) -> j
    void k(android.content.Intent) -> k
    void l(android.content.Intent) -> l
    void m(android.content.Intent) -> m
    void n(android.content.Intent) -> n
    void o(android.content.Intent) -> o
    void p(android.content.Intent) -> p
    void q(android.content.Intent) -> q
    void r(android.content.Intent) -> r
    void s(android.content.Intent) -> s
    void t(android.content.Intent) -> t
    void u(android.content.Intent) -> u
    void v(android.content.Intent) -> v
    void w(android.content.Intent) -> w
    void x(android.content.Intent) -> x
    void y(android.content.Intent) -> y
    void z(android.content.Intent) -> z
    void A(android.content.Intent) -> A
    void B(android.content.Intent) -> B
    void a(com.baidu.android.pushservice.d.a) -> a
    boolean a() -> a
    void a(java.lang.String,int,java.lang.String,android.content.Context) -> a
    java.lang.String b() -> b
com.baidu.android.pushservice.af -> com.baidu.android.pushservice.n:
    com.baidu.android.pushservice.af a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.Thread d -> d
    boolean e -> e
    com.baidu.android.pushservice.af a() -> a
    boolean b() -> b
    void a(boolean) -> a
    void a(android.content.Context,boolean) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    void a(java.lang.String,java.lang.String) -> a
    boolean e() -> e
com.baidu.android.pushservice.b -> com.baidu.android.pushservice.o:
    java.lang.String a -> a
    android.content.Context b -> b
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void b(java.lang.Throwable) -> b
    java.lang.String a(java.lang.Throwable) -> a
    java.lang.String a() -> a
com.baidu.android.pushservice.b.a -> com.baidu.android.pushservice.b.a:
    void a(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.b.b) -> a
    void a(java.lang.String,java.lang.String,com.baidu.android.pushservice.b.b) -> a
    void b(java.lang.String,java.lang.String,com.baidu.android.pushservice.b.b) -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,int,boolean,int,int) -> a
    int a(java.lang.String,int) -> a
    int b(java.lang.String) -> b
    int b(java.lang.String,int) -> b
    int c(java.lang.String) -> c
    int c(java.lang.String,int) -> c
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,int) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    int d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
    boolean a(java.lang.String,boolean) -> a
    int c() -> c
    void a(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.b.b) -> a
    java.lang.String f(java.lang.String) -> f
com.baidu.android.pushservice.b.a$a -> com.baidu.android.pushservice.b.b:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.android.pushservice.b.b -> com.baidu.android.pushservice.b.c:
    void b(int,java.lang.String) -> a
    void a(int,java.lang.String) -> b
    void c(int,java.lang.String) -> c
com.baidu.android.pushservice.b.b$a -> com.baidu.android.pushservice.b.d:
    com.baidu.android.pushservice.b.b a(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.android.pushservice.b.b$a$a -> com.baidu.android.pushservice.b.e:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void b(int,java.lang.String) -> a
    void a(int,java.lang.String) -> b
    void c(int,java.lang.String) -> c
com.baidu.android.pushservice.c -> com.baidu.android.pushservice.p:
    int a -> a
    int b -> b
    int c -> c
    android.net.Uri d -> d
    long[] e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    boolean h -> h
    java.util.HashMap i -> i
    java.lang.String j -> j
    com.baidu.android.pushservice.c k -> k
    com.baidu.android.pushservice.c a() -> a
    void a(int) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(boolean) -> a
    void b(int) -> b
    void c(int) -> c
    void a(android.content.Context,android.app.PendingIntent,android.app.PendingIntent,com.baidu.android.pushservice.message.PublicMsg,boolean) -> a
    void c(java.lang.String) -> c
    void a(android.graphics.Bitmap,java.lang.String) -> a
    boolean b() -> b
    android.app.Notification a(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap) -> a
    int b(android.content.Context,java.lang.String) -> b
    int a(android.content.Context,java.lang.String) -> a
    int c(android.content.Context,java.lang.String) -> c
    java.util.HashMap a(com.baidu.android.pushservice.c,java.util.HashMap) -> a
    java.util.HashMap a(com.baidu.android.pushservice.c) -> a
    java.lang.String b(com.baidu.android.pushservice.c) -> b
    android.app.Notification a(com.baidu.android.pushservice.c,android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap) -> a
    void a(com.baidu.android.pushservice.c,android.graphics.Bitmap,java.lang.String) -> a
com.baidu.android.pushservice.c.a -> com.baidu.android.pushservice.c.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void a(int) -> a
    int d() -> d
com.baidu.android.pushservice.c.b -> com.baidu.android.pushservice.c.b:
    com.baidu.android.pushservice.c.b c -> c
    android.content.Context d -> d
    java.util.ArrayList a -> a
    java.util.ArrayList b -> b
    java.util.HashMap e -> e
    com.baidu.android.pushservice.c.b a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    com.baidu.android.pushservice.c.h a(java.lang.String) -> a
    com.baidu.android.pushservice.c.h b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String,java.util.ArrayList) -> a
    java.util.ArrayList d(java.lang.String) -> d
    java.lang.String a(java.util.List) -> a
    java.lang.String a(com.baidu.android.pushservice.c.h,boolean) -> a
    java.lang.String b(com.baidu.android.pushservice.c.h,boolean) -> b
    java.lang.String a(com.baidu.android.pushservice.c.h,boolean,java.util.ArrayList,java.lang.String) -> a
    java.lang.String e(java.lang.String) -> e
    void a(java.lang.String,com.baidu.android.pushservice.d.g) -> a
    void f(java.lang.String) -> f
    boolean a(java.lang.String,java.lang.String) -> a
com.baidu.android.pushservice.c.c -> com.baidu.android.pushservice.c.c:
    com.baidu.android.pushservice.c.c a -> a
    com.baidu.android.pushservice.c.c b -> b
    com.baidu.android.pushservice.c.c c -> c
    com.baidu.android.pushservice.c.c d -> d
    com.baidu.android.pushservice.c.c e -> e
    com.baidu.android.pushservice.c.c[] f -> f
    com.baidu.android.pushservice.c.c[] values() -> values
    com.baidu.android.pushservice.c.c valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.c.d -> com.baidu.android.pushservice.c.d:
    com.baidu.android.pushservice.c.c c -> c
    com.baidu.android.pushservice.c.h a -> a
    com.baidu.android.pushservice.c.i b -> b
    com.baidu.android.pushservice.c.c a() -> a
    com.baidu.android.pushservice.c.d a(android.content.Context,java.lang.String) -> a
com.baidu.android.pushservice.c.e -> com.baidu.android.pushservice.c.e:
    java.util.ArrayList a -> a
    android.content.Context b -> b
    com.baidu.android.pushservice.c.c c -> c
    void a() -> a
    void b() -> b
    java.util.ArrayList a(java.lang.String) -> a
    java.lang.String a(com.baidu.android.pushservice.c.a,boolean) -> a
    java.lang.String a(java.util.List) -> a
    com.baidu.android.pushservice.c.a b(java.lang.String) -> b
    com.baidu.android.pushservice.c.a c(java.lang.String) -> c
com.baidu.android.pushservice.c.e$1 -> com.baidu.android.pushservice.c.f:
    int[] a -> a
com.baidu.android.pushservice.c.f -> com.baidu.android.pushservice.c.g:
    java.lang.String toString() -> toString
com.baidu.android.pushservice.c.g -> com.baidu.android.pushservice.c.h:
    com.baidu.android.pushservice.c.g d -> d
    com.baidu.android.pushservice.c.g a(android.content.Context) -> a
com.baidu.android.pushservice.c.h -> com.baidu.android.pushservice.c.i:
    java.lang.String e -> e
    java.lang.String toString() -> toString
com.baidu.android.pushservice.c.i -> com.baidu.android.pushservice.c.j:
    java.lang.String toString() -> toString
com.baidu.android.pushservice.c.j -> com.baidu.android.pushservice.c.k:
    com.baidu.android.pushservice.c.j d -> d
    java.lang.String e -> e
    com.baidu.android.pushservice.c.j a(android.content.Context) -> a
    java.util.ArrayList a(java.lang.String) -> a
    void a(com.baidu.android.pushservice.c.i) -> a
    java.lang.String a(java.util.List) -> a
    com.baidu.android.pushservice.c.i d(java.lang.String) -> d
    com.baidu.android.pushservice.c.a b(java.lang.String) -> b
com.baidu.android.pushservice.c.k -> com.baidu.android.pushservice.c.l:
    java.lang.String toString() -> toString
com.baidu.android.pushservice.c.l -> com.baidu.android.pushservice.c.m:
    com.baidu.android.pushservice.c.l d -> d
    com.baidu.android.pushservice.c.l a(android.content.Context) -> a
com.baidu.android.pushservice.d -> com.baidu.android.pushservice.q:
    com.baidu.android.pushservice.message.PublicMsg a -> a
    java.io.File b -> b
    android.content.Context c -> c
    android.app.PendingIntent d -> d
    android.app.PendingIntent e -> e
    boolean f -> f
    com.baidu.android.pushservice.c g -> g
    void run() -> run
com.baidu.android.pushservice.d.a -> com.baidu.android.pushservice.d.a:
    android.content.Context a -> a
    com.baidu.android.pushservice.d.l b -> b
    java.lang.String c -> c
    boolean d -> d
    void run() -> run
    void a() -> a
    boolean b() -> b
    int b(int) -> b
    void a(int) -> a
    void a(int,byte[]) -> a
    boolean c(java.lang.String) -> c
    void b(int,byte[]) -> b
    void a(java.lang.String) -> a
    void a(java.util.List) -> a
    java.lang.String b(java.lang.String) -> b
    void a(android.content.Intent) -> a
    void a(java.lang.String,int) -> a
com.baidu.android.pushservice.d.aa -> com.baidu.android.pushservice.d.b:
    java.lang.String e -> e
    com.baidu.android.pushservice.d.aa$a f -> f
    void a(java.util.List) -> a
    java.lang.String b(java.lang.String) -> b
    void a(android.content.Intent) -> a
com.baidu.android.pushservice.d.aa$a -> com.baidu.android.pushservice.d.c:
    void a(int) -> a
com.baidu.android.pushservice.d.ab -> com.baidu.android.pushservice.d.d:
    android.content.Context a -> a
    int b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    void run() -> run
    void a() -> a
    void a(int) -> a
    boolean b() -> b
    java.util.List c() -> c
    void d() -> d
com.baidu.android.pushservice.d.ac -> com.baidu.android.pushservice.d.e:
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.ad -> com.baidu.android.pushservice.d.f:
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.b -> com.baidu.android.pushservice.d.g:
    void a(java.util.List) -> a
    void a(android.content.Context) -> a
    void a(android.content.Context,java.util.ArrayList) -> a
com.baidu.android.pushservice.d.c -> com.baidu.android.pushservice.d.h:
    boolean b() -> b
com.baidu.android.pushservice.d.d -> com.baidu.android.pushservice.d.i:
    boolean e -> e
    java.lang.String b(java.lang.String) -> b
com.baidu.android.pushservice.d.e -> com.baidu.android.pushservice.d.j:
    boolean b() -> b
com.baidu.android.pushservice.d.f -> com.baidu.android.pushservice.d.k:
    int f -> f
    java.lang.String g -> g
    int h -> h
    java.lang.String i -> i
    void a(java.util.List) -> a
    void a(android.content.Intent) -> a
    java.lang.String b(java.lang.String) -> b
com.baidu.android.pushservice.d.g -> com.baidu.android.pushservice.d.l:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String toString() -> toString
com.baidu.android.pushservice.d.h -> com.baidu.android.pushservice.d.m:
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.i -> com.baidu.android.pushservice.d.n:
    java.lang.String e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.j -> com.baidu.android.pushservice.d.o:
    java.lang.String e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.k -> com.baidu.android.pushservice.d.p:
    java.lang.String[] e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.l -> com.baidu.android.pushservice.d.q:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String toString() -> toString
com.baidu.android.pushservice.d.m -> com.baidu.android.pushservice.d.r:
    int e -> e
    int f -> f
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.n -> com.baidu.android.pushservice.d.s:
    int e -> e
    int f -> f
    java.lang.String g -> g
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.o -> com.baidu.android.pushservice.d.t:
    java.lang.String e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.p -> com.baidu.android.pushservice.d.u:
    java.lang.String e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.q -> com.baidu.android.pushservice.d.v:
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.r -> com.baidu.android.pushservice.d.w:
    java.lang.String e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.s -> com.baidu.android.pushservice.d.x:
    java.lang.String a -> a
    java.lang.String b -> b
    android.content.Context c -> c
    com.baidu.android.pushservice.e.c d -> d
    int e -> e
    int f -> f
    boolean g -> g
    com.baidu.android.pushservice.d.s$a h -> h
    void run() -> run
    void a() -> a
    boolean a(java.lang.String) -> a
    boolean b() -> b
    void c() -> c
    void a(int) -> a
com.baidu.android.pushservice.d.s$a -> com.baidu.android.pushservice.d.y:
    void a(boolean,com.baidu.android.pushservice.e.c) -> a
com.baidu.android.pushservice.d.t -> com.baidu.android.pushservice.d.z:
    int f -> f
    com.baidu.android.pushservice.e.l g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    void a(java.util.List) -> a
    java.lang.String b(java.lang.String) -> b
    void a(int) -> a
    void a(int,byte[]) -> a
com.baidu.android.pushservice.d.u -> com.baidu.android.pushservice.d.aa:
    com.baidu.android.pushservice.e.l f -> f
    java.lang.String e -> e
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    int l -> l
    void a(java.util.List) -> a
    java.lang.String b(java.lang.String) -> b
    void a(int) -> a
    void a(int,byte[]) -> a
    void b(int) -> b
com.baidu.android.pushservice.d.v -> com.baidu.android.pushservice.d.ab:
    int f -> f
    com.baidu.android.pushservice.e.l g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    void a(java.util.List) -> a
    void a(int) -> a
    void a(int,byte[]) -> a
com.baidu.android.pushservice.d.w -> com.baidu.android.pushservice.d.ac:
    java.util.ArrayList e -> e
    void a(java.util.List) -> a
    java.lang.String b(java.lang.String) -> b
    void a(int,byte[]) -> a
com.baidu.android.pushservice.d.x -> com.baidu.android.pushservice.d.ad:
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.y -> com.baidu.android.pushservice.d.ae:
    java.lang.String f -> f
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.z -> com.baidu.android.pushservice.d.af:
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    void a(java.util.List) -> a
com.baidu.android.pushservice.db.LightAppDatabase -> com.baidu.android.pushservice.e.a:
    com.baidu.android.pushservice.db.LightAppDatabase$a mDbHelper -> a
    android.database.sqlite.SQLiteDatabase getWritableDb(android.content.Context) -> a
    com.baidu.android.pushservice.db.LightAppDatabase$a getDBOpenHelper(android.content.Context) -> b
com.baidu.android.pushservice.db.LightAppDatabase$a -> com.baidu.android.pushservice.e.b:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
com.baidu.android.pushservice.db.a -> com.baidu.android.pushservice.e.c:
    android.content.Context a -> a
    java.util.concurrent.atomic.AtomicInteger b -> b
    android.database.sqlite.SQLiteDatabase c -> c
    java.util.concurrent.locks.ReentrantLock d -> d
    com.baidu.android.pushservice.db.a a() -> a
    void a(android.content.Context) -> a
    android.database.sqlite.SQLiteDatabase b() -> b
    void c() -> c
    void d() -> d
    long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    int a(java.lang.String,java.lang.String) -> a
    java.lang.String e() -> e
    long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    int a(java.lang.String) -> a
    int b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    boolean d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
    void a(java.lang.String,java.lang.String,boolean) -> a
    java.util.ArrayList f() -> f
    java.lang.String a(java.util.ArrayList) -> a
    long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int) -> a
    java.util.HashMap a(java.lang.String,int,boolean,int,int) -> a
    java.lang.String a(android.database.Cursor,int,int) -> a
    org.json.JSONObject a(android.database.Cursor) -> a
    int a(int,java.lang.String) -> a
    int b(java.util.ArrayList) -> b
    int b(int,java.lang.String) -> b
    int c(java.util.ArrayList) -> c
    int c(int,java.lang.String) -> c
    boolean f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    boolean b(java.lang.String,java.lang.String) -> b
    boolean b(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    java.lang.String h(java.lang.String) -> h
    java.util.HashMap g() -> g
    java.util.ArrayList h() -> h
    com.baidu.android.pushservice.f.h i(java.lang.String) -> i
    java.util.ArrayList a(java.lang.String,int) -> a
    java.util.ArrayList a(android.database.sqlite.SQLiteDatabase,java.lang.String) -> a
    java.lang.String j(java.lang.String) -> j
    void d(java.util.ArrayList) -> d
    int k(java.lang.String) -> k
    boolean l(java.lang.String) -> l
    boolean a(java.lang.String,boolean) -> a
    boolean c(java.lang.String,java.lang.String) -> c
    boolean a(java.lang.String,java.lang.String,int) -> a
    boolean b(java.lang.String,java.lang.String,int) -> b
    boolean d(java.lang.String,java.lang.String) -> d
    java.util.HashMap m(java.lang.String) -> m
    java.lang.String n(java.lang.String) -> n
    void e(java.lang.String,java.lang.String) -> e
    java.lang.String[] f(java.lang.String,java.lang.String) -> f
    boolean b(java.lang.String,int) -> b
    java.lang.String o(java.lang.String) -> o
    void a(java.util.List,java.util.List) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
com.baidu.android.pushservice.db.a$a -> com.baidu.android.pushservice.e.d:
    com.baidu.android.pushservice.db.a a -> a
com.baidu.android.pushservice.e -> com.baidu.android.pushservice.r:
    java.lang.String i -> i
    int a -> a
    int b -> b
    int c -> c
    android.net.Uri d -> d
    long[] e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    boolean h -> h
    void a(int) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(boolean) -> a
    void b(int) -> b
    void c(int) -> c
    void a(android.content.Context,android.app.PendingIntent,java.lang.String) -> a
    android.graphics.Bitmap a(android.graphics.drawable.Drawable,android.content.Context) -> a
    java.lang.String a(com.baidu.android.pushservice.e) -> a
    android.graphics.Bitmap a(com.baidu.android.pushservice.e,android.graphics.drawable.Drawable,android.content.Context) -> a
com.baidu.android.pushservice.e.a -> com.baidu.android.pushservice.f.a:
    void a(int,java.lang.String) -> a
    void b(int,java.lang.String) -> b
    void c(int,java.lang.String) -> c
    void d(int,java.lang.String) -> d
    void e(int,java.lang.String) -> e
    void f(int,java.lang.String) -> f
    void g(int,java.lang.String) -> g
    void h(int,java.lang.String) -> h
    void a(int,java.lang.String,boolean) -> a
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void d(int) -> d
    void e(int) -> e
com.baidu.android.pushservice.e.b -> com.baidu.android.pushservice.f.b:
    com.baidu.android.pushservice.b.b a -> a
    void a(int,java.lang.String) -> a
    void b(int,java.lang.String) -> b
    void c(int,java.lang.String) -> c
    void d(int,java.lang.String) -> d
    void e(int,java.lang.String) -> e
    void f(int,java.lang.String) -> f
    void g(int,java.lang.String) -> g
    void h(int,java.lang.String) -> h
    void a(int,java.lang.String,boolean) -> a
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void d(int) -> d
    void e(int) -> e
com.baidu.android.pushservice.e.c -> com.baidu.android.pushservice.f.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    byte[] d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    boolean k -> k
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(byte[]) -> a
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void a(boolean) -> a
    android.graphics.Bitmap a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    boolean g() -> g
com.baidu.android.pushservice.e.d -> com.baidu.android.pushservice.f.d:
    com.baidu.android.pushservice.ae a -> a
    android.content.Context b -> b
    com.baidu.android.pushservice.e.d c -> c
    com.baidu.android.pushservice.e.d a(android.content.Context) -> a
    void a(com.baidu.android.pushservice.d.a) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.e.a,int) -> a
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.e.a,int) -> b
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.e.a) -> a
    void a(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.e.a) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.e.a,boolean) -> a
    void a(java.lang.String,java.lang.String,com.baidu.android.pushservice.e.a) -> a
    void b(java.lang.String,java.lang.String,com.baidu.android.pushservice.e.a) -> b
    java.lang.String a(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void d(java.lang.String,java.lang.String) -> d
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.e.a,int) -> b
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.e.a,int) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.d.s$a) -> a
    void a(java.lang.String,com.baidu.android.pushservice.e.c) -> a
    void a(com.baidu.android.pushservice.e.c,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(boolean,java.lang.String,com.baidu.android.pushservice.e.c) -> a
    java.lang.String a(com.baidu.android.pushservice.e.a) -> a
    java.lang.String b(com.baidu.android.pushservice.e.a) -> b
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String,boolean) -> a
    java.lang.String a(java.util.ArrayList,com.baidu.android.pushservice.e.a) -> a
    java.lang.String a(java.lang.String,int,boolean,int,int,com.baidu.android.pushservice.e.a) -> a
    long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int) -> a
    int a(int,java.lang.String,com.baidu.android.pushservice.e.a) -> a
    int b(java.util.ArrayList,com.baidu.android.pushservice.e.a) -> b
    boolean c(java.lang.String) -> c
    int b(int,java.lang.String,com.baidu.android.pushservice.e.a) -> b
    int c(java.util.ArrayList,com.baidu.android.pushservice.e.a) -> c
    int c(int,java.lang.String,com.baidu.android.pushservice.e.a) -> c
    boolean a(java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    int d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
    void a(java.util.ArrayList) -> a
    boolean a(java.lang.String,boolean) -> a
    boolean a(java.lang.String,java.lang.String,int) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    int f(java.lang.String) -> f
    int g(java.lang.String) -> g
    java.util.ArrayList a(java.lang.String,int) -> a
    boolean a() -> a
    java.util.ArrayList b() -> b
    java.lang.String h(java.lang.String) -> h
    java.util.ArrayList b(java.lang.String,int) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.android.pushservice.f.h i(java.lang.String) -> i
    void c(java.lang.String,java.lang.String) -> c
    boolean c(java.lang.String,int) -> c
    java.lang.String j(java.lang.String) -> j
    android.content.Context a(com.baidu.android.pushservice.e.d) -> a
    void a(com.baidu.android.pushservice.e.d,java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.d.s$a) -> a
    java.lang.String a(com.baidu.android.pushservice.e.d,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void a(com.baidu.android.pushservice.e.d,com.baidu.android.pushservice.d.a) -> a
    void a(com.baidu.android.pushservice.e.d,java.lang.String,java.lang.String) -> a
    void a(com.baidu.android.pushservice.e.d,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.e.a,int) -> a
com.baidu.android.pushservice.e.e -> com.baidu.android.pushservice.f.e:
    com.baidu.android.pushservice.e.a a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    boolean e -> e
    com.baidu.android.pushservice.e.d f -> f
    void a(int,java.util.HashMap) -> a
com.baidu.android.pushservice.e.f -> com.baidu.android.pushservice.f.f:
    java.lang.String a -> a
    com.baidu.android.pushservice.e.e b -> b
    void a(boolean,com.baidu.android.pushservice.e.c) -> a
com.baidu.android.pushservice.e.g -> com.baidu.android.pushservice.f.g:
    java.lang.String a -> a
    boolean b -> b
    com.baidu.android.pushservice.e.a c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    com.baidu.android.pushservice.e.d i -> i
    void a(boolean,com.baidu.android.pushservice.e.c) -> a
com.baidu.android.pushservice.e.h -> com.baidu.android.pushservice.f.h:
    com.baidu.android.pushservice.e.c a -> a
    com.baidu.android.pushservice.e.g b -> b
    void a(int,java.util.HashMap) -> a
com.baidu.android.pushservice.e.i -> com.baidu.android.pushservice.f.i:
    boolean a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.android.pushservice.e.a d -> d
    com.baidu.android.pushservice.e.d e -> e
    void a(int,java.util.HashMap) -> a
com.baidu.android.pushservice.e.j -> com.baidu.android.pushservice.f.j:
    com.baidu.android.pushservice.e.a a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    com.baidu.android.pushservice.e.d e -> e
    void a(int,java.util.HashMap) -> a
com.baidu.android.pushservice.e.k -> com.baidu.android.pushservice.f.k:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.baidu.android.pushservice.e.a g -> g
    int h -> h
    com.baidu.android.pushservice.e.d i -> i
    void a(boolean,com.baidu.android.pushservice.e.c) -> a
com.baidu.android.pushservice.e.l -> com.baidu.android.pushservice.f.l:
    void a(int,java.util.HashMap) -> a
com.baidu.android.pushservice.e.m -> com.baidu.android.pushservice.f.m:
    java.lang.String a -> a
    void a(android.content.Context,java.lang.String,com.baidu.android.pushservice.e.c) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.content.Context,com.baidu.android.pushservice.e.c) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    android.graphics.Bitmap a(android.content.Context,android.graphics.Bitmap) -> a
    android.graphics.Bitmap b(android.content.Context,android.graphics.Bitmap) -> b
    android.graphics.Bitmap c(android.content.Context,android.graphics.Bitmap) -> c
    android.graphics.Bitmap d(android.content.Context,android.graphics.Bitmap) -> d
    android.graphics.Bitmap a(android.graphics.drawable.Drawable,int,int) -> a
    int a(android.content.Context) -> a
    byte[] a(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    byte[] a(java.io.InputStream) -> a
    void a(byte[],java.lang.String) -> a
    byte[] a(boolean,java.lang.String) -> a
com.baidu.android.pushservice.f -> com.baidu.android.pushservice.s:
    android.content.Context a -> a
    android.app.PendingIntent b -> b
    java.lang.String c -> c
    com.baidu.android.pushservice.e d -> d
    void run() -> run
com.baidu.android.pushservice.f.a -> com.baidu.android.pushservice.g.a:
    int a -> a
    java.lang.String b -> b
    long c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    void a(int) -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    void a(long) -> a
    void b(java.lang.String) -> b
    void b(int) -> b
    void c(java.lang.String) -> c
    void c(int) -> c
    void d(java.lang.String) -> d
    void d(int) -> d
    java.lang.String b() -> b
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    com.baidu.android.pushservice.f.r c() -> c
    com.baidu.android.pushservice.f.j d() -> d
    com.baidu.android.pushservice.f.b e() -> e
com.baidu.android.pushservice.f.b -> com.baidu.android.pushservice.g.b:
    java.lang.String a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    org.json.JSONObject a() -> a
com.baidu.android.pushservice.f.c -> com.baidu.android.pushservice.g.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    org.json.JSONObject a() -> a
com.baidu.android.pushservice.f.d -> com.baidu.android.pushservice.g.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    java.lang.String f() -> f
    void f(java.lang.String) -> f
    int g() -> g
    void a(int) -> a
    java.lang.String h() -> h
    void g(java.lang.String) -> g
    int i() -> i
    void b(int) -> b
com.baidu.android.pushservice.f.e -> com.baidu.android.pushservice.g.e:
    java.lang.String f -> f
    long g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    java.lang.String k -> k
com.baidu.android.pushservice.f.f -> com.baidu.android.pushservice.g.f:
    int a -> a
    java.lang.String b -> b
    long c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    void a(int) -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    void a(long) -> a
    void b(java.lang.String) -> b
    void b(int) -> b
    void c(java.lang.String) -> c
    void c(int) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void d(int) -> d
    void e(int) -> e
    java.lang.String b() -> b
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    com.baidu.android.pushservice.f.r c() -> c
    com.baidu.android.pushservice.f.j d() -> d
    com.baidu.android.pushservice.f.n e() -> e
    com.baidu.android.pushservice.f.c f() -> f
    com.baidu.android.pushservice.f.g g() -> g
com.baidu.android.pushservice.f.g -> com.baidu.android.pushservice.g.g:
    java.lang.String a -> a
    org.json.JSONObject a() -> a
com.baidu.android.pushservice.f.h -> com.baidu.android.pushservice.g.h:
    java.lang.String c -> c
    boolean d -> d
    java.lang.String e -> e
    org.json.JSONArray f -> f
    java.lang.String a -> a
    java.lang.String b -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(boolean) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    void c(java.lang.String) -> c
    org.json.JSONArray d() -> d
    org.json.JSONObject e() -> e
com.baidu.android.pushservice.f.i -> com.baidu.android.pushservice.g.i:
    java.lang.String c -> c
    com.baidu.android.pushservice.util.b d -> d
    com.baidu.android.pushservice.f.i e -> e
    com.baidu.android.pushservice.f.i a(android.content.Context) -> a
    boolean a() -> a
    java.lang.String a(boolean) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.util.List) -> a
    boolean b() -> b
    void a(com.baidu.android.pushservice.util.b) -> a
com.baidu.android.pushservice.f.j -> com.baidu.android.pushservice.g.j:
    int a -> a
    org.json.JSONObject a() -> a
com.baidu.android.pushservice.f.k -> com.baidu.android.pushservice.g.k:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    long e -> e
com.baidu.android.pushservice.f.l -> com.baidu.android.pushservice.g.l:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    long e -> e
    int a() -> a
    void a(int) -> a
    int b() -> b
    void b(int) -> b
    void c(int) -> c
    int c() -> c
    int d() -> d
    void d(int) -> d
    long e() -> e
    void a(long) -> a
com.baidu.android.pushservice.f.m -> com.baidu.android.pushservice.g.m:
    int c -> c
    int a -> a
    int b -> b
    void c(int) -> c
    int j() -> j
    org.json.JSONObject a(android.content.Context) -> a
com.baidu.android.pushservice.f.n -> com.baidu.android.pushservice.g.n:
    java.lang.String a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    org.json.JSONObject a() -> a
com.baidu.android.pushservice.f.o -> com.baidu.android.pushservice.g.o:
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,int,byte[],int,int) -> a
    void a(android.content.Context,com.baidu.android.pushservice.c.h,com.baidu.android.pushservice.f.n,com.baidu.android.pushservice.f.m) -> a
com.baidu.android.pushservice.f.p -> com.baidu.android.pushservice.g.p:
    android.content.Context a -> a
    java.lang.String b -> b
    boolean c -> c
    boolean d -> d
    void b(boolean) -> b
    boolean a() -> a
    java.lang.String a(boolean) -> a
    void a(java.lang.String,java.util.List) -> a
    void a(java.lang.String) -> a
    boolean b() -> b
    void c(boolean) -> c
    void a(org.apache.http.HttpResponse) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    boolean c() -> c
    void a(com.baidu.android.pushservice.f.p,boolean) -> a
    boolean b(com.baidu.android.pushservice.f.p,boolean) -> b
com.baidu.android.pushservice.f.q -> com.baidu.android.pushservice.g.q:
    boolean a -> a
    com.baidu.android.pushservice.f.p b -> b
    void run() -> run
com.baidu.android.pushservice.f.r -> com.baidu.android.pushservice.g.r:
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
com.baidu.android.pushservice.f.s -> com.baidu.android.pushservice.g.s:
    android.content.Context b -> b
    java.lang.String a -> a
    com.baidu.android.pushservice.f.u c -> c
    boolean d -> d
    java.lang.String a() -> a
    java.lang.String a(long,long,int,int) -> a
    void b() -> b
    void c() -> c
    boolean d() -> d
    boolean b(long,long,int,int) -> b
    boolean a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    boolean a(com.baidu.android.pushservice.f.s) -> a
    android.content.Context b(com.baidu.android.pushservice.f.s) -> b
    void c(com.baidu.android.pushservice.f.s) -> c
com.baidu.android.pushservice.f.t -> com.baidu.android.pushservice.g.t:
    com.baidu.android.pushservice.f.s a -> a
    void run() -> run
com.baidu.android.pushservice.f.u -> com.baidu.android.pushservice.g.u:
    java.lang.String a -> a
    com.baidu.android.pushservice.f.u b -> b
    android.content.Context c -> c
    com.baidu.android.pushservice.f.u a(android.content.Context) -> a
    java.lang.String a(long,long,int,int) -> a
com.baidu.android.pushservice.f.v -> com.baidu.android.pushservice.g.v:
    android.content.Context a -> a
    com.baidu.android.pushservice.f.i b -> b
    com.baidu.android.pushservice.f.s c -> c
    void a() -> a
    void a(boolean,com.baidu.android.pushservice.util.b) -> a
    boolean b() -> b
    long a(android.content.Context,com.baidu.android.pushservice.f.n) -> a
    long a(android.content.Context,com.baidu.android.pushservice.f.c) -> a
    long a(android.content.Context,com.baidu.android.pushservice.f.j) -> a
    long b(android.content.Context,com.baidu.android.pushservice.f.j) -> b
    long a(android.content.Context,com.baidu.android.pushservice.f.g) -> a
    long a(android.content.Context,com.baidu.android.pushservice.f.m) -> a
    long a(android.content.Context,com.baidu.android.pushservice.f.b) -> a
com.baidu.android.pushservice.g -> com.baidu.android.pushservice.t:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.Object c -> c
    int d -> d
    android.app.Notification a(android.content.Context,int,java.lang.String,java.lang.String,boolean) -> a
    android.app.Notification a(android.content.Context,int,int,java.lang.String,java.lang.String,boolean) -> a
    com.baidu.android.pushservice.PushNotificationBuilder a(android.content.Context) -> a
    com.baidu.android.pushservice.PushNotificationBuilder b(android.content.Context) -> b
    com.baidu.android.pushservice.PushNotificationBuilder a(android.content.Context,int) -> a
com.baidu.android.pushservice.h -> com.baidu.android.pushservice.u:
    int a -> a
    boolean d -> d
    java.lang.Boolean e -> e
    boolean f -> f
    java.util.HashMap g -> g
    com.baidu.android.pushservice.h$b h -> h
    com.baidu.android.pushservice.h$a i -> i
    boolean j -> j
    int k -> k
    android.os.Handler b -> b
    android.content.Context l -> l
    boolean m -> m
    com.baidu.android.pushservice.message.d c -> c
    com.baidu.android.pushservice.h n -> n
    boolean o -> o
    java.lang.String p -> p
    int q -> q
    java.lang.Runnable r -> r
    java.lang.Runnable s -> s
    long t -> t
    int[] u -> u
    int[] v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    com.baidu.android.pushservice.h a(android.content.Context) -> a
    boolean a() -> a
    void b() -> b
    void e() -> e
    void c() -> c
    void f() -> f
    void g() -> g
    void d() -> d
    void h() -> h
    void a(boolean) -> a
    void a(java.lang.String,int) -> a
    void b(boolean) -> b
    void a(int) -> a
    int i() -> i
    void a(long,com.baidu.android.pushservice.d.a) -> a
    void j() -> j
    java.lang.String a(com.baidu.android.pushservice.h) -> a
    int b(com.baidu.android.pushservice.h) -> b
    void a(com.baidu.android.pushservice.h,java.lang.String,int) -> a
    android.content.Context c(com.baidu.android.pushservice.h) -> c
    boolean d(com.baidu.android.pushservice.h) -> d
    boolean a(com.baidu.android.pushservice.h,boolean) -> a
    java.lang.String a(com.baidu.android.pushservice.h,java.lang.String) -> a
    int a(com.baidu.android.pushservice.h,int) -> a
    java.lang.Boolean a(java.lang.Boolean) -> a
    void e(com.baidu.android.pushservice.h) -> e
    boolean b(com.baidu.android.pushservice.h,boolean) -> b
    com.baidu.android.pushservice.h$a f(com.baidu.android.pushservice.h) -> f
    com.baidu.android.pushservice.h$b g(com.baidu.android.pushservice.h) -> g
    boolean c(com.baidu.android.pushservice.h,boolean) -> c
    com.baidu.android.pushservice.h$a a(com.baidu.android.pushservice.h,com.baidu.android.pushservice.h$a) -> a
    com.baidu.android.pushservice.h$b a(com.baidu.android.pushservice.h,com.baidu.android.pushservice.h$b) -> a
    int[] h(com.baidu.android.pushservice.h) -> h
    int i(com.baidu.android.pushservice.h) -> i
    void j(com.baidu.android.pushservice.h) -> j
    boolean k(com.baidu.android.pushservice.h) -> k
    boolean d(com.baidu.android.pushservice.h,boolean) -> d
    void e(com.baidu.android.pushservice.h,boolean) -> e
    boolean l(com.baidu.android.pushservice.h) -> l
    java.lang.Runnable m(com.baidu.android.pushservice.h) -> m
    int b(com.baidu.android.pushservice.h,int) -> b
com.baidu.android.pushservice.h$a -> com.baidu.android.pushservice.v:
    com.baidu.android.pushservice.h a -> a
    void run() -> run
com.baidu.android.pushservice.h$b -> com.baidu.android.pushservice.w:
    com.baidu.android.pushservice.h a -> a
    void run() -> run
com.baidu.android.pushservice.i -> com.baidu.android.pushservice.x:
    com.baidu.android.pushservice.h a -> a
    void run() -> run
com.baidu.android.pushservice.j -> com.baidu.android.pushservice.y:
    com.baidu.android.pushservice.h a -> a
    void run() -> run
com.baidu.android.pushservice.jni.BaiduAppSSOJni -> com.baidu.android.pushservice.jni.BaiduAppSSOJni:
    byte[] getSsoHashNative(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> getSsoHashNative
    java.lang.String getPushHash(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getEncrypted(java.lang.String,java.lang.String) -> a
    java.lang.String getDecrypted(java.lang.String,java.lang.String) -> b
    byte[] getKey(java.lang.String) -> getKey
com.baidu.android.pushservice.jni.PushSocket -> com.baidu.android.pushservice.jni.PushSocket:
    byte[] b -> b
    int c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    boolean a -> a
    boolean a() -> a
    void a(int) -> a
    int createSocket(java.lang.String,int) -> createSocket
    int sendMsg(int,byte[],int) -> sendMsg
    byte[] rcvMsg(int) -> rcvMsg
    int getLastSocketError() -> getLastSocketError
    int closeSocket(int) -> closeSocket
    short a(byte[],int) -> a
    int b(byte[],int) -> b
    byte[] b(int) -> b
    boolean c(int) -> c
com.baidu.android.pushservice.k -> com.baidu.android.pushservice.z:
    com.baidu.android.pushservice.h a -> a
    void run() -> run
com.baidu.android.pushservice.message.PublicMsg -> com.baidu.android.pushservice.message.PublicMsg:
    java.lang.String mMsgId -> a
    java.lang.String mAppId -> b
    java.lang.String mTitle -> c
    java.lang.String mDescription -> d
    java.lang.String mUrl -> e
    java.lang.String mPkgName -> f
    int mPkgVercode -> g
    java.lang.String mPkgContent -> h
    int mNetType -> i
    int mNotificationBuilder -> j
    int mOpenType -> k
    int mNotificationBasicStyle -> l
    java.lang.String mCustomContent -> m
    java.lang.String mSupportAppname -> n
    boolean mIsSupportApp -> o
    int mUserConfirm -> p
    int mAdvertiseStyle -> q
    java.lang.String mAdvertiseSmallIconUrl -> r
    java.lang.String mAdvertiseLargeIconUrl -> s
    java.lang.String mAdvertiseClickUrl -> t
    java.lang.String mAdvertiseBigPictureUrl -> u
    java.lang.String mAdvertiseBigPictureClickUrl -> v
    java.lang.String mAdvertiseDownloadClickUrl -> w
    java.lang.String mAdvertiseDetailClickUrl -> x
    java.lang.String mAdvertiseBigPictureTitle -> y
    java.lang.String mAdvertiseBigPictureContent -> z
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void handle(android.content.Context,java.lang.String,java.lang.String) -> a
    void handleRichMediaNotification(android.content.Context,java.lang.String,java.lang.String) -> b
    void insertBehavior(android.content.Context,com.baidu.android.pushservice.c.h,com.baidu.android.pushservice.f.n,com.baidu.android.pushservice.f.m) -> a
    void handlePrivateNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void insertNotiBehavior(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> b
    void handleADNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void handleADShowNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void insertADNotiBehavior(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void insertADNoClientBehavior(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    void insertADBehavior(android.content.Context,com.baidu.android.pushservice.c.h,com.baidu.android.pushservice.f.b,com.baidu.android.pushservice.f.m) -> a
    java.lang.String getLauncherActivityName(android.content.Context,java.lang.String) -> a
    void startApplicationLauncher(android.content.Context,java.lang.String,java.lang.String) -> c
    void addCustomContentToIntent(android.content.Intent) -> a
    void sendResult(android.content.Context,java.lang.String,int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.baidu.android.pushservice.message.a -> com.baidu.android.pushservice.message.a:
    java.lang.String a -> a
    android.content.Context b -> b
    com.baidu.android.pushservice.message.c a(com.baidu.android.pushservice.message.g) -> a
com.baidu.android.pushservice.message.a$1 -> com.baidu.android.pushservice.message.b:
    int[] a -> a
com.baidu.android.pushservice.message.a.a -> com.baidu.android.pushservice.message.a.a:
    java.lang.String b -> b
    int a(java.lang.String,java.lang.String,byte[]) -> a
    int a(java.lang.String) -> a
com.baidu.android.pushservice.message.a.a$1 -> com.baidu.android.pushservice.message.a.b:
    int[] a -> a
com.baidu.android.pushservice.message.a.a$a -> com.baidu.android.pushservice.message.a.c:
    com.baidu.android.pushservice.message.a.a$a a -> a
    com.baidu.android.pushservice.message.a.a$a b -> b
    com.baidu.android.pushservice.message.a.a$a c -> c
    com.baidu.android.pushservice.message.a.a$a d -> d
    com.baidu.android.pushservice.message.a.a$a e -> e
    com.baidu.android.pushservice.message.a.a$a f -> f
    com.baidu.android.pushservice.message.a.a$a[] g -> g
    com.baidu.android.pushservice.message.a.a$a[] values() -> values
    com.baidu.android.pushservice.message.a.a$a valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.message.a.b -> com.baidu.android.pushservice.message.a.d:
    java.lang.String b -> b
    int a(java.lang.String,java.lang.String,byte[]) -> a
com.baidu.android.pushservice.message.a.c -> com.baidu.android.pushservice.message.a.e:
    java.lang.String b -> b
    android.content.Context a -> a
    boolean a(byte[]) -> a
    int a(java.lang.String,java.lang.String,byte[]) -> a
com.baidu.android.pushservice.message.a.d -> com.baidu.android.pushservice.message.a.f:
    java.lang.String b -> b
    int a(java.lang.String,java.lang.String,byte[]) -> a
com.baidu.android.pushservice.message.a.d$1 -> com.baidu.android.pushservice.message.a.g:
    int[] a -> a
com.baidu.android.pushservice.message.a.e -> com.baidu.android.pushservice.message.a.h:
    int a(android.content.Context,java.lang.String,java.lang.String,byte[],com.baidu.android.pushservice.message.PublicMsg) -> a
    boolean b(android.content.Context,java.lang.String,int) -> b
    java.lang.String a(android.content.Context,java.lang.String,int) -> a
    void a(android.content.Context,com.baidu.android.pushservice.message.PublicMsg,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,com.baidu.android.pushservice.message.PublicMsg,java.lang.String) -> a
    void a(android.content.Context,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String) -> a
    android.content.ComponentName b(android.content.Context,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String) -> b
    void c(android.content.Context,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String) -> c
    void a(android.content.Context,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String,int,boolean) -> a
    void a(android.content.Context,android.content.Intent) -> a
    void b(android.content.Context,android.content.Intent) -> b
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.content.Context,com.baidu.android.pushservice.message.PublicMsg) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String) -> a
    void b(android.content.Context,com.baidu.android.pushservice.message.PublicMsg,java.lang.String) -> b
com.baidu.android.pushservice.message.a.f -> com.baidu.android.pushservice.message.a.i:
    java.lang.String b -> b
    int a(java.lang.String,java.lang.String,byte[]) -> a
com.baidu.android.pushservice.message.a.g -> com.baidu.android.pushservice.message.a.j:
    java.lang.String b -> b
    int a(java.lang.String,java.lang.String,byte[]) -> a
com.baidu.android.pushservice.message.a.h -> com.baidu.android.pushservice.message.a.k:
    java.lang.String b -> b
    int a(java.lang.String,java.lang.String,byte[]) -> a
com.baidu.android.pushservice.message.a.i -> com.baidu.android.pushservice.message.a.l:
    com.baidu.android.pushservice.message.PublicMsg a(java.lang.String,java.lang.String,byte[]) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
com.baidu.android.pushservice.message.a.j -> com.baidu.android.pushservice.message.a.m:
    java.lang.String a -> a
    android.content.Context b -> b
    com.baidu.android.pushservice.message.a.c a(com.baidu.android.pushservice.message.a.k) -> a
com.baidu.android.pushservice.message.a.j$1 -> com.baidu.android.pushservice.message.a.n:
    int[] a -> a
com.baidu.android.pushservice.message.a.k -> com.baidu.android.pushservice.message.a.o:
    com.baidu.android.pushservice.message.a.k a -> a
    com.baidu.android.pushservice.message.a.k b -> b
    com.baidu.android.pushservice.message.a.k c -> c
    com.baidu.android.pushservice.message.a.k d -> d
    com.baidu.android.pushservice.message.a.k e -> e
    com.baidu.android.pushservice.message.a.k f -> f
    com.baidu.android.pushservice.message.a.k g -> g
    com.baidu.android.pushservice.message.a.k h -> h
    com.baidu.android.pushservice.message.a.k i -> i
    com.baidu.android.pushservice.message.a.k j -> j
    int k -> k
    com.baidu.android.pushservice.message.a.k[] l -> l
    com.baidu.android.pushservice.message.a.k[] values() -> values
    com.baidu.android.pushservice.message.a.k valueOf(java.lang.String) -> valueOf
    int a() -> a
    com.baidu.android.pushservice.message.a.k a(int) -> a
com.baidu.android.pushservice.message.a.l -> com.baidu.android.pushservice.message.a.p:
    java.lang.String b -> b
    int a(java.lang.String,java.lang.String,byte[]) -> a
com.baidu.android.pushservice.message.b -> com.baidu.android.pushservice.message.c:
    java.lang.String b -> b
    int a(com.baidu.android.pushservice.message.e) -> a
com.baidu.android.pushservice.message.c -> com.baidu.android.pushservice.message.d:
    android.content.Context a -> a
    int a(com.baidu.android.pushservice.message.e) -> a
com.baidu.android.pushservice.message.d -> com.baidu.android.pushservice.message.e:
    android.content.Context a -> a
    java.util.LinkedList b -> b
    void a(com.baidu.android.pushservice.message.e) -> a
    java.util.LinkedList a() -> a
    com.baidu.android.pushservice.message.e a(byte[],int) -> a
    void b(com.baidu.android.pushservice.message.e) -> b
    void a(int) -> a
    void b() -> b
    void c() -> c
com.baidu.android.pushservice.message.e -> com.baidu.android.pushservice.message.f:
    short a -> a
    short b -> b
    int c -> c
    byte[] d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    com.baidu.android.pushservice.message.k h -> h
    byte[] a() -> a
    boolean b() -> b
    boolean c() -> c
    void a(boolean) -> a
    com.baidu.android.pushservice.message.k d() -> d
    void a(com.baidu.android.pushservice.message.k) -> a
    java.lang.String toString() -> toString
com.baidu.android.pushservice.message.f -> com.baidu.android.pushservice.message.g:
    com.baidu.android.pushservice.util.d b -> b
    com.baidu.android.pushservice.message.e a(byte[],int) -> a
    void b(com.baidu.android.pushservice.message.e) -> b
    void a(int) -> a
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    void b() -> b
    void c() -> c
    byte[] a(short,byte[]) -> a
    byte[] a(long,int) -> a
    byte[] a(java.lang.String,int) -> a
com.baidu.android.pushservice.message.g -> com.baidu.android.pushservice.message.h:
    com.baidu.android.pushservice.message.g a -> a
    com.baidu.android.pushservice.message.g b -> b
    com.baidu.android.pushservice.message.g c -> c
    com.baidu.android.pushservice.message.g d -> d
    com.baidu.android.pushservice.message.g e -> e
    com.baidu.android.pushservice.message.g f -> f
    com.baidu.android.pushservice.message.g g -> g
    int h -> h
    com.baidu.android.pushservice.message.g[] i -> i
    com.baidu.android.pushservice.message.g[] values() -> values
    com.baidu.android.pushservice.message.g valueOf(java.lang.String) -> valueOf
    int a() -> a
    com.baidu.android.pushservice.message.g a(int) -> a
com.baidu.android.pushservice.message.h -> com.baidu.android.pushservice.message.i:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.baidu.android.pushservice.message.PublicMsg e -> e
    void run() -> run
com.baidu.android.pushservice.message.i -> com.baidu.android.pushservice.message.j:
    com.baidu.android.pushservice.message.PublicMsg a(android.os.Parcel) -> a
    com.baidu.android.pushservice.message.PublicMsg[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.android.pushservice.message.j -> com.baidu.android.pushservice.message.k:
    java.lang.String b -> b
    int a(com.baidu.android.pushservice.message.e) -> a
    java.lang.String a(byte[]) -> a
com.baidu.android.pushservice.message.k -> com.baidu.android.pushservice.message.l:
    java.lang.String a -> a
    long b -> b
    int c -> c
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    long b() -> b
    java.lang.String c() -> c
    void a(long) -> a
    int d() -> d
    void a(int) -> a
    java.lang.String toString() -> toString
com.baidu.android.pushservice.message.l -> com.baidu.android.pushservice.message.m:
    java.lang.String b -> b
    int a(com.baidu.android.pushservice.message.e) -> a
com.baidu.android.pushservice.richmedia.MediaListActivity -> com.baidu.android.pushservice.richmedia.MediaListActivity:
    android.widget.ListView c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    android.widget.LinearLayout l -> l
    android.widget.RemoteViews m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    java.util.ArrayList a -> a
    java.lang.String r -> r
    android.app.NotificationManager b -> b
    android.widget.AdapterView$OnItemClickListener s -> s
    android.widget.AdapterView$OnItemLongClickListener t -> t
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a() -> a
    void a(com.baidu.android.pushservice.richmedia.MediaListActivity,java.lang.String,java.lang.String,java.lang.String) -> a
    android.widget.RemoteViews a(com.baidu.android.pushservice.richmedia.MediaListActivity) -> a
    int b(com.baidu.android.pushservice.richmedia.MediaListActivity) -> b
    int c(com.baidu.android.pushservice.richmedia.MediaListActivity) -> c
    int d(com.baidu.android.pushservice.richmedia.MediaListActivity) -> d
    int e(com.baidu.android.pushservice.richmedia.MediaListActivity) -> e
    int f(com.baidu.android.pushservice.richmedia.MediaListActivity) -> f
    int g(com.baidu.android.pushservice.richmedia.MediaListActivity) -> g
    int h(com.baidu.android.pushservice.richmedia.MediaListActivity) -> h
    int i(com.baidu.android.pushservice.richmedia.MediaListActivity) -> i
    int j(com.baidu.android.pushservice.richmedia.MediaListActivity) -> j
com.baidu.android.pushservice.richmedia.MediaListActivity$a -> com.baidu.android.pushservice.richmedia.a:
    android.content.Context b -> b
    java.util.ArrayList c -> c
    com.baidu.android.pushservice.richmedia.MediaListActivity a -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.baidu.android.pushservice.richmedia.MediaViewActivity -> com.baidu.android.pushservice.richmedia.MediaViewActivity:
    android.widget.RelativeLayout b -> b
    android.webkit.WebView a -> a
    android.webkit.WebChromeClient c -> c
    android.webkit.WebViewClient d -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onPause() -> onPause
    void onResume() -> onResume
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.android.pushservice.richmedia.a -> com.baidu.android.pushservice.richmedia.b:
    com.baidu.android.pushservice.richmedia.l b -> b
    org.apache.http.impl.client.DefaultHttpClient a -> a
    org.apache.http.HttpResponse a(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> a
    void a() -> a
com.baidu.android.pushservice.richmedia.b -> com.baidu.android.pushservice.richmedia.c:
    com.baidu.android.pushservice.richmedia.l g -> g
    com.baidu.android.pushservice.richmedia.q a -> a
    java.lang.ref.WeakReference b -> b
    java.util.HashSet h -> h
    long c -> c
    com.baidu.android.pushservice.richmedia.n d -> d
    boolean i -> i
    int e -> e
    int f -> f
    void run() -> run
    com.baidu.android.pushservice.richmedia.p b() -> b
    void a(com.baidu.android.pushservice.richmedia.p) -> a
    void a(com.baidu.android.pushservice.richmedia.m) -> a
    int a(com.baidu.android.pushservice.richmedia.b) -> a
    long a() -> a
    boolean a(com.baidu.android.pushservice.richmedia.n) -> a
    boolean b(com.baidu.android.pushservice.richmedia.n) -> b
    com.baidu.android.pushservice.util.PushDatabase$g a(android.content.Context,java.lang.String) -> a
    int a(java.lang.String) -> a
    void a(java.io.File,java.lang.String) -> a
    int compareTo(java.lang.Object) -> compareTo
com.baidu.android.pushservice.richmedia.c -> com.baidu.android.pushservice.richmedia.d:
    com.baidu.android.pushservice.richmedia.MediaListActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.android.pushservice.richmedia.d -> com.baidu.android.pushservice.richmedia.e:
    com.baidu.android.pushservice.richmedia.MediaListActivity a -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.baidu.android.pushservice.richmedia.e -> com.baidu.android.pushservice.richmedia.f:
    com.baidu.android.pushservice.richmedia.MediaListActivity a -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.baidu.android.pushservice.richmedia.f -> com.baidu.android.pushservice.richmedia.g:
    com.baidu.android.pushservice.richmedia.e a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.baidu.android.pushservice.richmedia.g -> com.baidu.android.pushservice.richmedia.h:
    long a -> a
    com.baidu.android.pushservice.richmedia.e b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.baidu.android.pushservice.richmedia.h -> com.baidu.android.pushservice.richmedia.i:
    com.baidu.android.pushservice.richmedia.MediaListActivity a -> a
    void a(com.baidu.android.pushservice.richmedia.b) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.m) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.p) -> a
    void a(com.baidu.android.pushservice.richmedia.b,java.lang.Throwable) -> a
    void b(com.baidu.android.pushservice.richmedia.b) -> b
com.baidu.android.pushservice.richmedia.i -> com.baidu.android.pushservice.richmedia.j:
    com.baidu.android.pushservice.richmedia.h a -> a
    void run() -> run
com.baidu.android.pushservice.richmedia.j -> com.baidu.android.pushservice.richmedia.k:
    com.baidu.android.pushservice.richmedia.MediaViewActivity a -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    void onHideCustomView() -> onHideCustomView
com.baidu.android.pushservice.richmedia.k -> com.baidu.android.pushservice.richmedia.l:
    com.baidu.android.pushservice.richmedia.MediaViewActivity a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
com.baidu.android.pushservice.richmedia.l -> com.baidu.android.pushservice.richmedia.m:
    boolean a -> a
    java.util.Hashtable b -> b
    java.lang.String c -> c
    com.baidu.android.pushservice.richmedia.l a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
com.baidu.android.pushservice.richmedia.m -> com.baidu.android.pushservice.richmedia.n:
    long a -> a
    long b -> b
com.baidu.android.pushservice.richmedia.n -> com.baidu.android.pushservice.richmedia.o:
    com.baidu.android.pushservice.richmedia.l i -> i
    java.lang.String a -> a
    java.lang.String j -> j
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.baidu.android.pushservice.richmedia.n$a e -> e
    java.util.Map k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.util.List f -> f
    boolean g -> g
    boolean h -> h
    java.util.Map a() -> a
    com.baidu.android.pushservice.richmedia.n$a b() -> b
    void a(com.baidu.android.pushservice.richmedia.n$a) -> a
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.baidu.android.pushservice.richmedia.n$a -> com.baidu.android.pushservice.richmedia.p:
    com.baidu.android.pushservice.richmedia.n$a a -> a
    com.baidu.android.pushservice.richmedia.n$a[] b -> b
    com.baidu.android.pushservice.richmedia.n$a[] values() -> values
    com.baidu.android.pushservice.richmedia.n$a valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.richmedia.o -> com.baidu.android.pushservice.richmedia.q:
    com.baidu.android.pushservice.richmedia.n a(com.baidu.android.pushservice.richmedia.n$a,java.lang.String) -> a
com.baidu.android.pushservice.richmedia.o$1 -> com.baidu.android.pushservice.richmedia.r:
    int[] a -> a
com.baidu.android.pushservice.richmedia.p -> com.baidu.android.pushservice.richmedia.s:
    com.baidu.android.pushservice.richmedia.n$a a -> a
    int b -> b
    int c -> c
    com.baidu.android.pushservice.richmedia.n d -> d
    java.lang.String e -> e
com.baidu.android.pushservice.richmedia.q -> com.baidu.android.pushservice.richmedia.t:
    void a(com.baidu.android.pushservice.richmedia.b) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.m) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.p) -> a
    void a(com.baidu.android.pushservice.richmedia.b,java.lang.Throwable) -> a
    void b(com.baidu.android.pushservice.richmedia.b) -> b
com.baidu.android.pushservice.s -> com.baidu.android.pushservice.aa:
    int a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    void run() -> run
com.baidu.android.pushservice.t -> com.baidu.android.pushservice.ab:
    com.baidu.android.pushservice.PushSDK a -> a
    void run() -> run
com.baidu.android.pushservice.u -> com.baidu.android.pushservice.ac:
    com.baidu.android.pushservice.PushSDK a -> a
    void run() -> run
com.baidu.android.pushservice.util.Internal -> com.baidu.android.pushservice.util.a:
    android.content.Intent createBdussInent(android.content.Context) -> a
com.baidu.android.pushservice.util.PushADProvider -> com.baidu.android.pushservice.util.PushADProvider:
    android.database.sqlite.SQLiteDatabase a -> a
    boolean onCreate() -> onCreate
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
com.baidu.android.pushservice.util.PushClientDataBase -> com.baidu.android.pushservice.util.b:
    com.baidu.android.pushservice.util.PushClientDataBase$b mDbHelper -> a
    java.lang.Object myLock -> b
    android.database.sqlite.SQLiteDatabase getDb(android.content.Context) -> a
    com.baidu.android.pushservice.util.PushClientDataBase$b getClientDbOpenHelper(android.content.Context) -> c
    void setPushADCurCount(android.content.Context,int) -> a
    void setPushADCurTimeStamp(android.content.Context,long) -> a
    long setPushADClientInfo(android.content.Context,com.baidu.android.pushservice.f.k) -> a
    com.baidu.android.pushservice.f.l getPushADClientInfoEnumClass(android.content.Context) -> b
com.baidu.android.pushservice.util.PushClientDataBase$a -> com.baidu.android.pushservice.util.c:
    com.baidu.android.pushservice.util.PushClientDataBase$a a -> a
    com.baidu.android.pushservice.util.PushClientDataBase$a b -> b
    com.baidu.android.pushservice.util.PushClientDataBase$a c -> c
    com.baidu.android.pushservice.util.PushClientDataBase$a d -> d
    com.baidu.android.pushservice.util.PushClientDataBase$a e -> e
    com.baidu.android.pushservice.util.PushClientDataBase$a f -> f
    com.baidu.android.pushservice.util.PushClientDataBase$a[] g -> g
    com.baidu.android.pushservice.util.PushClientDataBase$a[] values() -> values
    com.baidu.android.pushservice.util.PushClientDataBase$a valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushClientDataBase$b -> com.baidu.android.pushservice.util.d:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void a(android.database.sqlite.SQLiteDatabase) -> a
com.baidu.android.pushservice.util.PushDatabase -> com.baidu.android.pushservice.util.e:
    com.baidu.android.pushservice.util.PushDatabase$e mDbHelper -> a
    java.lang.Object myLock -> b
    int MSG_ID_COUNT_MAX -> c
    void close() -> a
    android.database.sqlite.SQLiteDatabase getDb(android.content.Context) -> d
    com.baidu.android.pushservice.util.PushDatabase$e getDbOpenHelper(android.content.Context) -> e
    void clearOldDBFile(java.lang.String) -> a
    int updateAppInfo(android.database.sqlite.SQLiteDatabase,int,com.baidu.android.pushservice.f.m) -> a
    com.baidu.android.pushservice.f.m needToInsertUpdate(android.database.sqlite.SQLiteDatabase,com.baidu.android.pushservice.f.m) -> a
    boolean needToInsertUpdatePromptBehavior(android.database.sqlite.SQLiteDatabase,com.baidu.android.pushservice.f.j) -> a
    int updatePromptBehavior(android.database.sqlite.SQLiteDatabase,com.baidu.android.pushservice.f.j) -> b
    int getBehaviorEnumCount(android.content.Context,long,long) -> a
    boolean isNeedUpload(android.content.Context,long,long) -> b
    java.util.List getBehaviorEnumClassList(android.content.Context,long,long,int,int) -> a
    java.util.List getADBehaviorEnumClassList(android.content.Context,long,long,int,int) -> b
    java.util.List getAppInfo(android.content.Context) -> a
    java.util.List selectFileDownloadingInfo(android.content.Context) -> b
    com.baidu.android.pushservice.util.PushDatabase$g getFileDownloadingInfo(android.content.Context,java.lang.String) -> a
    int deleteFileDownloadingInfo(android.content.Context,java.lang.String) -> b
    long insertPushBehavior(android.content.Context,com.baidu.android.pushservice.f.n) -> a
    long insertADPushBehavior(android.content.Context,com.baidu.android.pushservice.f.b) -> a
    boolean insertMsgId(android.content.Context,java.lang.String) -> c
    long insertApiBehavior(android.content.Context,com.baidu.android.pushservice.f.c) -> a
    long insertPromptBehavior(android.content.Context,com.baidu.android.pushservice.f.j) -> a
    long insertAgentOrHttpBehavior(android.content.Context,com.baidu.android.pushservice.f.j) -> b
    long insertCrashBehavior(android.content.Context,com.baidu.android.pushservice.f.g) -> a
    long insertAppInfo(android.content.Context,com.baidu.android.pushservice.f.m) -> a
    long insertFileDownloadingInfo(android.content.Context,com.baidu.android.pushservice.util.PushDatabase$g) -> a
    long clearBehaviorInfo(android.content.Context) -> c
    int updateFileDownloadingInfo(android.content.Context,java.lang.String,com.baidu.android.pushservice.util.PushDatabase$g) -> a
    int[] getNoDisturb(android.content.Context,java.lang.String) -> d
com.baidu.android.pushservice.util.PushDatabase$a -> com.baidu.android.pushservice.util.f:
    com.baidu.android.pushservice.util.PushDatabase$a a -> a
    com.baidu.android.pushservice.util.PushDatabase$a b -> b
    com.baidu.android.pushservice.util.PushDatabase$a c -> c
    com.baidu.android.pushservice.util.PushDatabase$a d -> d
    com.baidu.android.pushservice.util.PushDatabase$a e -> e
    com.baidu.android.pushservice.util.PushDatabase$a f -> f
    com.baidu.android.pushservice.util.PushDatabase$a g -> g
    com.baidu.android.pushservice.util.PushDatabase$a h -> h
    com.baidu.android.pushservice.util.PushDatabase$a i -> i
    com.baidu.android.pushservice.util.PushDatabase$a j -> j
    com.baidu.android.pushservice.util.PushDatabase$a k -> k
    com.baidu.android.pushservice.util.PushDatabase$a[] l -> l
    com.baidu.android.pushservice.util.PushDatabase$a[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$a valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushDatabase$b -> com.baidu.android.pushservice.util.g:
    com.baidu.android.pushservice.util.PushDatabase$b a -> a
    com.baidu.android.pushservice.util.PushDatabase$b b -> b
    com.baidu.android.pushservice.util.PushDatabase$b c -> c
    com.baidu.android.pushservice.util.PushDatabase$b d -> d
    com.baidu.android.pushservice.util.PushDatabase$b e -> e
    com.baidu.android.pushservice.util.PushDatabase$b f -> f
    com.baidu.android.pushservice.util.PushDatabase$b g -> g
    com.baidu.android.pushservice.util.PushDatabase$b h -> h
    com.baidu.android.pushservice.util.PushDatabase$b i -> i
    com.baidu.android.pushservice.util.PushDatabase$b j -> j
    com.baidu.android.pushservice.util.PushDatabase$b k -> k
    com.baidu.android.pushservice.util.PushDatabase$b[] l -> l
    com.baidu.android.pushservice.util.PushDatabase$b[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$b valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushDatabase$c -> com.baidu.android.pushservice.util.h:
    com.baidu.android.pushservice.util.PushDatabase$c a -> a
    com.baidu.android.pushservice.util.PushDatabase$c b -> b
    com.baidu.android.pushservice.util.PushDatabase$c c -> c
    com.baidu.android.pushservice.util.PushDatabase$c d -> d
    com.baidu.android.pushservice.util.PushDatabase$c e -> e
    com.baidu.android.pushservice.util.PushDatabase$c f -> f
    com.baidu.android.pushservice.util.PushDatabase$c g -> g
    com.baidu.android.pushservice.util.PushDatabase$c h -> h
    com.baidu.android.pushservice.util.PushDatabase$c i -> i
    com.baidu.android.pushservice.util.PushDatabase$c j -> j
    com.baidu.android.pushservice.util.PushDatabase$c k -> k
    com.baidu.android.pushservice.util.PushDatabase$c l -> l
    com.baidu.android.pushservice.util.PushDatabase$c m -> m
    com.baidu.android.pushservice.util.PushDatabase$c n -> n
    com.baidu.android.pushservice.util.PushDatabase$c[] o -> o
    com.baidu.android.pushservice.util.PushDatabase$c[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$c valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushDatabase$d -> com.baidu.android.pushservice.util.i:
    java.io.File getDatabasePath(java.lang.String) -> getDatabasePath
    android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory) -> openOrCreateDatabase
com.baidu.android.pushservice.util.PushDatabase$e -> com.baidu.android.pushservice.util.j:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void a(android.database.sqlite.SQLiteDatabase) -> a
com.baidu.android.pushservice.util.PushDatabase$f -> com.baidu.android.pushservice.util.k:
    com.baidu.android.pushservice.util.PushDatabase$f a -> a
    com.baidu.android.pushservice.util.PushDatabase$f b -> b
    com.baidu.android.pushservice.util.PushDatabase$f c -> c
    com.baidu.android.pushservice.util.PushDatabase$f d -> d
    com.baidu.android.pushservice.util.PushDatabase$f e -> e
    com.baidu.android.pushservice.util.PushDatabase$f f -> f
    com.baidu.android.pushservice.util.PushDatabase$f g -> g
    com.baidu.android.pushservice.util.PushDatabase$f h -> h
    com.baidu.android.pushservice.util.PushDatabase$f i -> i
    com.baidu.android.pushservice.util.PushDatabase$f j -> j
    com.baidu.android.pushservice.util.PushDatabase$f[] k -> k
    com.baidu.android.pushservice.util.PushDatabase$f[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$f valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushDatabase$g -> com.baidu.android.pushservice.util.l:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    int h -> h
    int i -> i
    long j -> j
com.baidu.android.pushservice.util.PushDatabase$i -> com.baidu.android.pushservice.util.m:
    com.baidu.android.pushservice.util.PushDatabase$i a -> a
    com.baidu.android.pushservice.util.PushDatabase$i b -> b
    com.baidu.android.pushservice.util.PushDatabase$i c -> c
    com.baidu.android.pushservice.util.PushDatabase$i d -> d
    com.baidu.android.pushservice.util.PushDatabase$i e -> e
    com.baidu.android.pushservice.util.PushDatabase$i f -> f
    com.baidu.android.pushservice.util.PushDatabase$i g -> g
    com.baidu.android.pushservice.util.PushDatabase$i[] h -> h
    com.baidu.android.pushservice.util.PushDatabase$i[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$i valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushDatabase$j -> com.baidu.android.pushservice.util.n:
    com.baidu.android.pushservice.util.PushDatabase$j a -> a
    com.baidu.android.pushservice.util.PushDatabase$j b -> b
    com.baidu.android.pushservice.util.PushDatabase$j c -> c
    com.baidu.android.pushservice.util.PushDatabase$j[] d -> d
    com.baidu.android.pushservice.util.PushDatabase$j[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$j valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushDatabase$k -> com.baidu.android.pushservice.util.o:
    com.baidu.android.pushservice.util.PushDatabase$k a -> a
    com.baidu.android.pushservice.util.PushDatabase$k b -> b
    com.baidu.android.pushservice.util.PushDatabase$k c -> c
    com.baidu.android.pushservice.util.PushDatabase$k d -> d
    com.baidu.android.pushservice.util.PushDatabase$k e -> e
    com.baidu.android.pushservice.util.PushDatabase$k[] f -> f
    com.baidu.android.pushservice.util.PushDatabase$k[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$k valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushDatabase$m -> com.baidu.android.pushservice.util.p:
    com.baidu.android.pushservice.util.PushDatabase$m a -> a
    com.baidu.android.pushservice.util.PushDatabase$m b -> b
    com.baidu.android.pushservice.util.PushDatabase$m c -> c
    com.baidu.android.pushservice.util.PushDatabase$m d -> d
    com.baidu.android.pushservice.util.PushDatabase$m e -> e
    com.baidu.android.pushservice.util.PushDatabase$m f -> f
    com.baidu.android.pushservice.util.PushDatabase$m g -> g
    com.baidu.android.pushservice.util.PushDatabase$m h -> h
    com.baidu.android.pushservice.util.PushDatabase$m[] i -> i
    com.baidu.android.pushservice.util.PushDatabase$m[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$m valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushDatabase$n -> com.baidu.android.pushservice.util.q:
    com.baidu.android.pushservice.util.PushDatabase$n a -> a
    com.baidu.android.pushservice.util.PushDatabase$n b -> b
    com.baidu.android.pushservice.util.PushDatabase$n c -> c
    com.baidu.android.pushservice.util.PushDatabase$n d -> d
    com.baidu.android.pushservice.util.PushDatabase$n e -> e
    com.baidu.android.pushservice.util.PushDatabase$n f -> f
    com.baidu.android.pushservice.util.PushDatabase$n g -> g
    com.baidu.android.pushservice.util.PushDatabase$n h -> h
    com.baidu.android.pushservice.util.PushDatabase$n i -> i
    com.baidu.android.pushservice.util.PushDatabase$n j -> j
    com.baidu.android.pushservice.util.PushDatabase$n k -> k
    com.baidu.android.pushservice.util.PushDatabase$n[] l -> l
    com.baidu.android.pushservice.util.PushDatabase$n[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$n valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushDatabase$o -> com.baidu.android.pushservice.util.r:
    com.baidu.android.pushservice.util.PushDatabase$o a -> a
    com.baidu.android.pushservice.util.PushDatabase$o b -> b
    com.baidu.android.pushservice.util.PushDatabase$o c -> c
    com.baidu.android.pushservice.util.PushDatabase$o d -> d
    com.baidu.android.pushservice.util.PushDatabase$o[] e -> e
    com.baidu.android.pushservice.util.PushDatabase$o[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$o valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.a -> com.baidu.android.pushservice.util.s:
    java.lang.Object a -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    int b(android.content.Context,java.lang.String) -> b
    void a(android.content.Context,java.lang.String,int) -> a
    long c(android.content.Context,java.lang.String) -> c
    void a(android.content.Context,java.lang.String,long) -> a
    void a(android.content.Context,java.lang.String,java.lang.Object) -> a
    java.lang.Object d(android.content.Context,java.lang.String) -> d
    org.json.JSONObject a(android.content.Context) -> a
com.baidu.android.pushservice.util.b -> com.baidu.android.pushservice.util.t:
    void a(int,java.lang.String) -> a
com.baidu.android.pushservice.util.c -> com.baidu.android.pushservice.util.u:
    int a -> a
    java.lang.String a(android.content.Context,org.json.JSONObject) -> a
    java.lang.String a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    java.lang.String e(android.content.Context) -> e
    long c(android.content.Context) -> c
    void a(android.content.Context,long) -> a
    java.lang.String a(android.content.Context,boolean) -> a
    java.lang.String a() -> a
    java.lang.String d(android.content.Context) -> d
com.baidu.android.pushservice.util.d -> com.baidu.android.pushservice.util.v:
    java.io.DataInputStream b -> b
    byte[] a -> a
    void a() -> a
    int a(int) -> a
    int b() -> b
    short c() -> c
    long d() -> d
    void a(byte[]) -> a
com.baidu.android.pushservice.util.e -> com.baidu.android.pushservice.util.w:
    java.io.DataOutputStream b -> b
    byte[] a -> a
    void a(int) -> a
    void b(int) -> b
    void a() -> a
    void a(byte[]) -> a
    void a(long) -> a
com.baidu.android.pushservice.util.f -> com.baidu.android.pushservice.util.x:
    java.lang.String a -> a
    boolean accept(java.io.File) -> accept
com.baidu.android.pushservice.util.g -> com.baidu.android.pushservice.util.y:
    void a(android.content.Context) -> a
    void a(android.content.Context,android.content.Intent,java.lang.String) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,android.content.Intent) -> a
    void b(android.content.Context) -> b
    void b(android.content.Context,android.content.Intent) -> b
    android.content.Intent c(android.content.Context) -> c
    void d(android.content.Context) -> d
com.baidu.android.pushservice.util.h -> com.baidu.android.pushservice.util.z:
    java.lang.String[] a -> a
    java.util.ArrayList b -> b
    boolean c -> c
    boolean a(android.content.Context) -> a
    android.content.pm.PackageInfo a(android.content.Context,java.lang.String) -> a
    android.content.Intent b(android.content.Context,java.lang.String) -> b
    boolean c(android.content.Context,java.lang.String) -> c
    boolean d(android.content.Context,java.lang.String) -> d
    int[] b(android.content.Context) -> b
    int e(android.content.Context,java.lang.String) -> e
    boolean f(android.content.Context,java.lang.String) -> f
    boolean c(android.content.Context) -> c
    void a(android.content.Context,android.content.Intent,long) -> a
    android.content.Intent d(android.content.Context) -> d
    android.content.Intent e(android.content.Context) -> e
    android.content.Intent g(android.content.Context) -> f
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String,java.lang.String) -> b
    void h(android.content.Context) -> g
    boolean a(android.content.Context,boolean) -> a
    boolean a(java.lang.String,java.lang.String[]) -> a
    void a(android.content.Context,long) -> a
    void i(android.content.Context) -> h
    void h(android.content.Context,java.lang.String) -> g
    long j(android.content.Context) -> i
    void a(android.content.Context,boolean,boolean) -> a
    long k(android.content.Context) -> j
    long i(android.content.Context,java.lang.String) -> h
    boolean j(android.content.Context,java.lang.String) -> i
    boolean a(java.lang.String) -> a
    boolean l(android.content.Context) -> k
    boolean k(android.content.Context,java.lang.String) -> j
    boolean m(android.content.Context) -> l
    boolean l(android.content.Context,java.lang.String) -> k
    boolean c(android.content.Context,boolean) -> b
    boolean e(android.content.Context,boolean) -> c
    boolean y(android.content.Context) -> x
    boolean a(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    int r(android.content.Context,java.lang.String) -> q
    boolean a(android.content.Context,java.lang.String,boolean) -> a
    boolean z(android.content.Context) -> y
    int n(android.content.Context) -> m
    java.util.List o(android.content.Context) -> n
    boolean p(android.content.Context) -> o
    java.lang.String q(android.content.Context) -> p
    java.util.ArrayList A(android.content.Context) -> z
    java.util.List r(android.content.Context) -> q
    void a(java.lang.String,android.content.Context) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,android.content.Context) -> b
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String a(long) -> a
    java.lang.String a(java.lang.Throwable) -> a
    com.baidu.android.pushservice.f.m a(com.baidu.android.pushservice.f.m,android.content.Context,java.lang.String) -> a
    int m(android.content.Context,java.lang.String) -> l
    java.lang.String s(android.content.Context) -> r
    int t(android.content.Context) -> s
    java.lang.String c(java.lang.String) -> c
    java.lang.String n(android.content.Context,java.lang.String) -> m
    boolean o(android.content.Context,java.lang.String) -> n
    boolean a() -> a
    java.lang.String c(android.content.Context,java.lang.String,java.lang.String) -> c
    java.lang.String u(android.content.Context) -> t
    java.lang.String v(android.content.Context) -> u
    long w(android.content.Context) -> v
    boolean p(android.content.Context,java.lang.String) -> o
    boolean a(int,int,int,int) -> a
    java.lang.String q(android.content.Context,java.lang.String) -> p
    int d(java.lang.String) -> d
    void a(android.content.Context,android.content.Intent,java.lang.String,java.lang.String) -> a
    android.content.ComponentName b(android.content.Context,android.content.Intent,java.lang.String,java.lang.String) -> b
    android.content.ComponentName a(android.content.Context,android.content.Intent,java.lang.String) -> a
    java.lang.String d(android.content.Context,java.lang.String,java.lang.String) -> d
    java.util.HashMap b() -> b
    void a(java.util.HashMap) -> a
    long c() -> c
    boolean x(android.content.Context) -> w
com.baidu.android.pushservice.util.i -> com.baidu.android.pushservice.util.aa:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.android.pushservice.v -> com.baidu.android.pushservice.ad:
    com.baidu.android.pushservice.PushSDK a -> a
    void run() -> run
com.baidu.android.pushservice.w -> com.baidu.android.pushservice.ae:
    com.baidu.android.pushservice.PushSDK a -> a
    void run() -> run
com.baidu.android.pushservice.x -> com.baidu.android.pushservice.af:
    com.baidu.android.pushservice.PushService a -> a
    void run() -> run
com.baidu.android.pushservice.y -> com.baidu.android.pushservice.ag:
    com.baidu.android.pushservice.PushService a -> a
    void a(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.b.b) -> a
    void a(java.lang.String,java.lang.String,com.baidu.android.pushservice.b.b) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,int,boolean,int,int) -> a
    int a(java.lang.String,int) -> a
    int b(java.lang.String) -> b
    int b(java.lang.String,int) -> b
    int c(java.lang.String) -> c
    int c(java.lang.String,int) -> c
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,int) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    int d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
    boolean a(java.lang.String,boolean) -> a
    void b(java.lang.String,java.lang.String,com.baidu.android.pushservice.b.b) -> b
    int c() -> c
    void a(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.b.b) -> a
    java.lang.String f(java.lang.String) -> f
com.baidu.android.pushservice.z -> com.baidu.android.pushservice.ah:
    android.content.Context a -> a
    android.content.Intent b -> b
    com.baidu.android.pushservice.PushServiceReceiver c -> c
    void run() -> run
com.baidu.frontia.base.a.a.a -> com.baidu.a.a.a.a.a:
    boolean a -> a
    boolean b -> b
    java.util.logging.Logger c -> c
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String) -> e
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    java.lang.String a(java.lang.Throwable) -> a
com.baidu.frontia.base.b.a -> com.baidu.a.a.b.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    boolean e -> e
    java.lang.String f -> f
    void a(android.content.Context,android.net.NetworkInfo) -> a
    void c(android.content.Context) -> c
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
com.baidu.frontia.base.b.b -> com.baidu.a.a.b.b:
    boolean a -> a
    java.lang.RuntimeException b -> b
    org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
    void a() -> a
com.baidu.frontia.base.b.b$a -> com.baidu.a.a.b.c:
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
com.baidu.frontia.base.b.c -> com.baidu.a.a.b.d:
    com.baidu.frontia.base.b.b a -> a
    org.apache.http.conn.ClientConnectionManager newInstance(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry) -> newInstance
com.baidu.frontia.base.b.d -> com.baidu.a.a.b.e:
    com.baidu.frontia.base.b.b a -> a
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.baidu.frontia.base.b.e -> com.baidu.a.a.b.f:
    com.baidu.frontia.base.b.b a -> a
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.baidu.frontia.base.b.f -> com.baidu.a.a.b.g:
    org.apache.http.HttpResponse a(org.apache.http.client.methods.HttpRequestBase) -> a
com.baidu.frontia.base.b.g -> com.baidu.a.a.b.h:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket() -> createSocket
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
com.baidu.frontia.base.b.h -> com.baidu.a.a.b.i:
    com.baidu.frontia.base.b.g a -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
com.baidu.frontia.base.c.a -> com.baidu.a.a.c.a:
    byte[] a(java.lang.String) -> a
com.baidu.frontia.base.c.b -> com.baidu.a.a.c.b:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    com.baidu.frontia.base.c.b$a a() -> a
    int e() -> e
    com.baidu.frontia.base.c.b$a a(java.lang.String) -> a
    java.lang.String a(java.io.InputStream) -> a
    long b() -> b
    int[] a(android.content.Context) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    boolean e(android.content.Context) -> e
    org.json.JSONObject f(android.content.Context) -> f
    org.json.JSONObject g(android.content.Context) -> g
com.baidu.frontia.base.c.b$a -> com.baidu.a.a.c.c:
    int a -> a
    int b -> b
    int c -> c
    double d -> d
    long e -> e
com.baidu.frontia.base.c.b$b -> com.baidu.a.a.c.d:
    android.content.Context a -> a
    org.json.JSONObject b -> b
    com.baidu.frontia.base.c.b$b c -> c
    org.json.JSONObject a() -> a
    com.baidu.frontia.base.c.b$b a(android.content.Context) -> a
com.baidu.frontia.base.check.a -> com.baidu.a.a.d.a:
    android.net.ConnectivityManager a -> a
    boolean a(android.content.Context) -> a
    android.net.ConnectivityManager c(android.content.Context) -> c
    java.lang.String b(android.content.Context) -> b
com.baidu.frontia.base.d.a -> com.baidu.a.a.e.a:
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(java.lang.String,java.lang.String,byte[]) -> b
com.baidu.frontia.base.d.b -> com.baidu.a.a.e.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.frontia.base.d.c -> com.baidu.a.a.e.c:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
com.baidu.frontia.base.d.d -> com.baidu.a.a.e.d:
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.frontia.base.d.d$a -> com.baidu.a.a.e.e:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.frontia.base.d.d$a a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
com.baidu.frontia.base.d.e -> com.baidu.a.a.e.f:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.frontia.base.d.f -> com.baidu.a.a.e.g:
    byte[] a(byte[],java.lang.String) -> a
    byte[] b(byte[],java.lang.String) -> b
    byte[] a(byte[],java.lang.String,int) -> a
com.baidu.loctp.str.BDLocManager -> com.baidu.b.a.a:
    long a -> a
    android.content.Context b -> b
    android.telephony.TelephonyManager c -> c
    com.baidu.loctp.str.BDLocManager$a d -> d
    java.lang.reflect.Method e -> e
    java.lang.reflect.Method f -> f
    java.lang.reflect.Method g -> g
    java.lang.Class h -> h
    android.net.wifi.WifiManager i -> i
    com.baidu.loctp.str.BDLocManager$WifiList j -> j
    java.lang.Object k -> k
    java.lang.reflect.Method l -> l
    boolean m -> m
    long n -> n
    java.lang.String o -> o
    int p -> p
    java.lang.String q -> q
    char[] r -> r
    java.lang.String getLocString(int) -> a
    java.lang.String a(int) -> b
    void a(android.telephony.CellLocation) -> a
    boolean a() -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    boolean a(com.baidu.loctp.str.BDLocManager) -> a
    java.lang.String b(com.baidu.loctp.str.BDLocManager) -> b
    int a(com.baidu.loctp.str.BDLocManager,int) -> a
    int c(com.baidu.loctp.str.BDLocManager) -> c
com.baidu.loctp.str.BDLocManager$1 -> com.baidu.b.a.b:
com.baidu.loctp.str.BDLocManager$WifiList -> com.baidu.b.a.c:
    java.util.List _WifiList -> a
    long b -> c
    com.baidu.loctp.str.BDLocManager a -> b
    int size() -> a
    java.lang.String toString(int) -> a
    void a() -> b
    boolean b() -> c
    boolean a(com.baidu.loctp.str.BDLocManager$WifiList) -> a
com.baidu.loctp.str.BDLocManager$a -> com.baidu.b.a.d:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    char e -> e
    com.baidu.loctp.str.BDLocManager f -> f
    boolean a() -> a
    java.lang.String toString() -> toString
    boolean a(com.baidu.loctp.str.BDLocManager$a) -> a
com.example.secondapp.MainActivity -> com.example.secondapp.MainActivity:
    com.example.secondapp.fragment.BottomFragment bottomFragment -> a
    long mExitTime -> e
    android.support.v4.app.FragmentManager fManager -> b
    com.example.secondapp.fragment.MainPageFragment fg1 -> f
    com.example.secondapp.fragment.RecommendFragment fg2 -> g
    com.example.secondapp.fragment.ClassificationFragment fg3 -> h
    com.example.secondapp.fragment.PersonalcenterFragment fg4 -> i
    android.support.v4.app.FragmentTransaction transaction -> j
    int getskip -> k
    org.json.JSONObject object -> c
    android.os.Handler handler -> d
    void onCreate(android.os.Bundle) -> onCreate
    void login(java.lang.String,java.lang.String) -> a
    void onBottomClick(android.view.View,int) -> a
    void setChioceItem(int) -> a
    void hideFragments(android.support.v4.app.FragmentTransaction) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.example.secondapp.MainActivity$1 -> com.example.secondapp.a:
    com.example.secondapp.MainActivity this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.MainActivity$2 -> com.example.secondapp.b:
    com.example.secondapp.MainActivity this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.PushTestReceiver -> com.example.secondapp.PushTestReceiver:
    void onBind(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void onDelTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> b
    void onListTags(android.content.Context,int,java.util.List,java.lang.String) -> a
    void onMessage(android.content.Context,java.lang.String,java.lang.String) -> a
    void onNotificationArrived(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> b
    void onNotificationClicked(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void onSetTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> a
    void onUnbind(android.content.Context,int,java.lang.String) -> a
com.example.secondapp.R -> com.example.secondapp.c:
com.example.secondapp.R$styleable -> com.example.secondapp.d:
    int[] CircleImageView -> CircleImageView
    int CircleImageView_border_color -> CircleImageView_border_color
    int CircleImageView_border_width -> CircleImageView_border_width
    int[] Emojicon -> Emojicon
    int Emojicon_emojiconSize -> Emojicon_emojiconSize
    int Emojicon_emojiconTextLength -> Emojicon_emojiconTextLength
    int Emojicon_emojiconTextStart -> Emojicon_emojiconTextStart
    int[] PullToRefresh -> PullToRefresh
    int PullToRefresh_ptrAdapterViewBackground -> PullToRefresh_ptrAdapterViewBackground
    int PullToRefresh_ptrAnimationStyle -> PullToRefresh_ptrAnimationStyle
    int PullToRefresh_ptrDrawable -> PullToRefresh_ptrDrawable
    int PullToRefresh_ptrDrawableBottom -> PullToRefresh_ptrDrawableBottom
    int PullToRefresh_ptrDrawableEnd -> PullToRefresh_ptrDrawableEnd
    int PullToRefresh_ptrDrawableStart -> PullToRefresh_ptrDrawableStart
    int PullToRefresh_ptrDrawableTop -> PullToRefresh_ptrDrawableTop
    int PullToRefresh_ptrHeaderBackground -> PullToRefresh_ptrHeaderBackground
    int PullToRefresh_ptrHeaderSubTextColor -> PullToRefresh_ptrHeaderSubTextColor
    int PullToRefresh_ptrHeaderTextAppearance -> PullToRefresh_ptrHeaderTextAppearance
    int PullToRefresh_ptrHeaderTextColor -> PullToRefresh_ptrHeaderTextColor
    int PullToRefresh_ptrListViewExtrasEnabled -> PullToRefresh_ptrListViewExtrasEnabled
    int PullToRefresh_ptrMode -> PullToRefresh_ptrMode
    int PullToRefresh_ptrOverScroll -> PullToRefresh_ptrOverScroll
    int PullToRefresh_ptrRefreshableViewBackground -> PullToRefresh_ptrRefreshableViewBackground
    int PullToRefresh_ptrRotateDrawableWhilePulling -> PullToRefresh_ptrRotateDrawableWhilePulling
    int PullToRefresh_ptrScrollingWhileRefreshingEnabled -> PullToRefresh_ptrScrollingWhileRefreshingEnabled
    int PullToRefresh_ptrShowIndicator -> PullToRefresh_ptrShowIndicator
    int PullToRefresh_ptrSubHeaderTextAppearance -> PullToRefresh_ptrSubHeaderTextAppearance
com.example.secondapp.SecondApplication -> com.example.secondapp.SecondApplication:
    com.example.secondapp.base.ActivityTack tack -> g
    java.util.concurrent.ExecutorService lxThread -> h
    com.google.gson.Gson gson -> i
    com.android.volley.RequestQueue requestQueue -> j
    android.content.SharedPreferences sp -> k
    java.lang.Double lat -> a
    java.lang.Double lon -> b
    java.lang.String cityName -> c
    java.lang.String desc -> d
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> e
    com.nostra13.universalimageloader.core.DisplayImageOptions txOptions -> f
    com.android.volley.toolbox.ImageLoader imageLoader -> l
    void onCreate() -> onCreate
    com.google.gson.Gson getGson() -> a
    com.android.volley.RequestQueue getRequestQueue() -> b
    android.content.SharedPreferences getSp() -> c
    void initImageLoader(android.content.Context) -> a
com.example.secondapp.SecondApplication$BitmapCache -> com.example.secondapp.e:
    android.util.LruCache mCache -> b
    com.example.secondapp.SecondApplication this$0 -> a
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    void putBitmap(java.lang.String,android.graphics.Bitmap) -> putBitmap
com.example.secondapp.SecondApplication$BitmapCache$1 -> com.example.secondapp.f:
    com.example.secondapp.SecondApplication$BitmapCache this$1 -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.example.secondapp.activity.AboutSelf -> com.example.secondapp.activity.AboutSelf:
    com.example.secondapp.view.MyTextView2 view -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    java.lang.String getAssetsString(android.content.Context,java.lang.String) -> a
com.example.secondapp.activity.AddAdress -> com.example.secondapp.activity.AddAdress:
    kankan.wheel.widget.WheelView mViewProvince -> q
    kankan.wheel.widget.WheelView mViewCity -> r
    kankan.wheel.widget.WheelView mViewDistrict -> s
    android.widget.Button mBtnConfirm -> t
    android.widget.EditText receiver -> a
    android.widget.EditText phonenumber -> b
    android.widget.EditText detailedaddress -> c
    android.widget.TextView save -> d
    android.widget.TextView mine_city_province -> e
    java.lang.String receiverstr -> f
    java.lang.String phonenumberstr -> g
    java.lang.String detailedaddressstr -> h
    android.widget.LinearLayout mine_city -> u
    java.lang.String[] mProvinceDatas -> i
    java.util.Map mCitisDatasMap -> j
    java.util.Map mDistrictDatasMap -> k
    java.util.Map mZipcodeDatasMap -> l
    java.lang.String mCurrentProviceName -> m
    java.lang.String mCurrentCityName -> n
    java.lang.String mCurrentDistrictName -> o
    java.lang.String mCurrentZipCode -> p
    void onCreate(android.os.Bundle) -> onCreate
    void initProvinceDatas() -> a
    void setUpViews() -> b
    void setUpListener() -> c
    void setUpData() -> d
    void onChanged(kankan.wheel.widget.WheelView,int,int) -> a
    void updateAreas() -> e
    void updateCities() -> f
    void onClick(android.view.View) -> onClick
    void showSelectedResult() -> g
com.example.secondapp.activity.AddAdress$1 -> com.example.secondapp.activity.a:
    com.example.secondapp.activity.AddAdress this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.AddAdress$2 -> com.example.secondapp.activity.b:
    com.example.secondapp.activity.AddAdress this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.AddAdress$2$1 -> com.example.secondapp.activity.c:
    com.example.secondapp.activity.AddAdress$2 this$1 -> a
    void onSuccess(org.json.JSONObject) -> a
    void onFailure(java.lang.String,int,java.lang.String) -> a
com.example.secondapp.activity.AdvertisementDetail -> com.example.secondapp.activity.AdvertisementDetail:
    android.webkit.WebView webView -> a
    java.lang.String url -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.AdvertisementDetail$1 -> com.example.secondapp.activity.d:
    com.example.secondapp.activity.AdvertisementDetail this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.example.secondapp.activity.ClassDetail -> com.example.secondapp.activity.ClassDetail:
    android.widget.ListView classlv -> a
    android.widget.TextView classtitle -> b
    android.widget.TextView defaults -> c
    android.widget.TextView price -> d
    android.widget.TextView sellnum -> e
    android.widget.TextView number -> f
    android.widget.LinearLayout arrowback -> g
    android.widget.LinearLayout shoppingcart -> h
    android.widget.FrameLayout frameimg -> i
    int numbercount -> o
    int getkey -> j
    java.lang.String title -> k
    java.util.List list -> l
    com.example.secondapp.adapter.FruitShowListViewAdapter adapter -> m
    android.os.Handler handler -> n
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    void getPrice() -> a
    void getOrder() -> b
    void setselected(int) -> a
    void getdata(int) -> b
com.example.secondapp.activity.ClassDetail$1 -> com.example.secondapp.activity.e:
    com.example.secondapp.activity.ClassDetail this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.ClassDetail$2 -> com.example.secondapp.activity.f:
    com.example.secondapp.activity.ClassDetail this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.ClassDetail$3 -> com.example.secondapp.activity.g:
    com.example.secondapp.activity.ClassDetail this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.ClassDetail$4 -> com.example.secondapp.activity.h:
    com.example.secondapp.activity.ClassDetail this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.secondapp.activity.ClassDetail$5 -> com.example.secondapp.activity.i:
    com.example.secondapp.activity.ClassDetail this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.ClassDetail$6 -> com.example.secondapp.activity.j:
    com.example.secondapp.activity.ClassDetail this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.ClassDetail$7 -> com.example.secondapp.activity.k:
    com.example.secondapp.activity.ClassDetail this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.CommodityDetail -> com.example.secondapp.activity.CommodityDetail:
    android.widget.RelativeLayout evaluation -> a
    android.widget.LinearLayout back -> b
    android.widget.LinearLayout shoppingcart -> c
    android.widget.Button buyrightnow -> d
    android.widget.Button addshoppingcart -> e
    com.example.secondapp.bean.FruitBean fruitbean -> f
    android.widget.TextView commodityname -> g
    android.widget.TextView commodityprice -> h
    android.widget.TextView minus -> i
    android.widget.TextView plus -> j
    android.widget.TextView count -> k
    android.widget.CheckBox collectioncheckbox -> l
    android.widget.TextView evaluationcount -> m
    int countall -> n
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.CommodityDetail$1 -> com.example.secondapp.activity.l:
    com.example.secondapp.activity.CommodityDetail this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.secondapp.activity.CommodityDetail$1$1 -> com.example.secondapp.activity.m:
    com.example.secondapp.activity.CommodityDetail$1 this$1 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.CommodityDetail$1$2 -> com.example.secondapp.activity.n:
    com.example.secondapp.activity.CommodityDetail$1 this$1 -> a
com.example.secondapp.activity.CommodityDetail$2 -> com.example.secondapp.activity.o:
    com.example.secondapp.activity.CommodityDetail this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
    void onFailure(java.lang.String,int,java.lang.String) -> a
com.example.secondapp.activity.CommodityDetailTest -> com.example.secondapp.activity.CommodityDetailTest:
    android.widget.RelativeLayout evaluation -> a
    android.widget.LinearLayout back -> b
    android.widget.RelativeLayout shoppingcart -> c
    android.widget.RelativeLayout imgtext -> d
    android.widget.Button buyrightnow -> e
    android.widget.Button addshoppingcart -> f
    com.example.secondapp.bean.FruitBean fruitbean -> g
    android.widget.TextView commodityname -> h
    android.widget.TextView commodityprice -> i
    android.widget.TextView specification -> j
    android.widget.TextView message -> k
    android.widget.TextView minus -> l
    android.widget.TextView type_name_text -> m
    android.widget.TextView plus -> n
    android.widget.FrameLayout frameimg -> o
    android.support.v4.view.ViewPager viewpager -> p
    android.widget.TextView count -> q
    android.widget.CheckBox collectioncheckbox -> r
    android.widget.TextView evaluationcount -> s
    int countall -> C
    int getfruitid -> D
    int numbercount -> E
    android.widget.TextView number -> F
    java.util.ArrayList imageviews -> G
    android.widget.ImageView imageView1 -> t
    android.widget.ImageView imageView2 -> u
    android.widget.ImageView imageView3 -> v
    android.widget.ImageView imageView4 -> w
    int isNum -> H
    android.widget.RadioButton radioButton1 -> I
    android.widget.RadioButton radioButton2 -> J
    android.widget.RadioButton radioButton3 -> K
    android.widget.RadioButton radioButton4 -> L
    android.widget.RadioGroup radiogroup -> M
    android.widget.TextView content -> N
    android.widget.TextView type_name_relate -> O
    android.widget.PopupWindow popupWindow -> P
    android.view.View viewpopup -> Q
    android.widget.EditText evaluate -> R
    android.widget.TextView cancel -> S
    android.widget.TextView confirm -> T
    android.widget.RatingBar ratingbar -> U
    int ratingnumber -> V
    android.os.Handler handler -> x
    android.support.v4.view.PagerAdapter mPagerAdapter -> y
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void onPause() -> onPause
    void onResume() -> onResume
    void getdata() -> a
    void showPopupWindow() -> d
    void evtOrder() -> b
    android.widget.RadioGroup access$0(com.example.secondapp.activity.CommodityDetailTest) -> a
    java.util.ArrayList access$1() -> c
    android.widget.RadioButton access$2(com.example.secondapp.activity.CommodityDetailTest) -> b
    android.widget.RadioButton access$3(com.example.secondapp.activity.CommodityDetailTest) -> c
    void access$4(com.example.secondapp.activity.CommodityDetailTest,int) -> a
    int access$5(com.example.secondapp.activity.CommodityDetailTest) -> d
    android.widget.TextView access$6(com.example.secondapp.activity.CommodityDetailTest) -> e
    android.widget.RadioButton access$7(com.example.secondapp.activity.CommodityDetailTest) -> f
    android.widget.RadioButton access$8(com.example.secondapp.activity.CommodityDetailTest) -> g
    void access$9(com.example.secondapp.activity.CommodityDetailTest,int) -> b
    int access$10(com.example.secondapp.activity.CommodityDetailTest) -> h
com.example.secondapp.activity.CommodityDetailTest$1 -> com.example.secondapp.activity.p:
    com.example.secondapp.activity.CommodityDetailTest this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.CommodityDetailTest$2 -> com.example.secondapp.activity.q:
    com.example.secondapp.activity.CommodityDetailTest this$0 -> a
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
com.example.secondapp.activity.CommodityDetailTest$3 -> com.example.secondapp.activity.r:
    com.example.secondapp.activity.CommodityDetailTest this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.example.secondapp.activity.CommodityDetailTest$4 -> com.example.secondapp.activity.s:
    com.example.secondapp.activity.CommodityDetailTest this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    com.example.secondapp.activity.CommodityDetailTest access$0(com.example.secondapp.activity.CommodityDetailTest$4) -> a
com.example.secondapp.activity.CommodityDetailTest$4$1 -> com.example.secondapp.activity.t:
    com.example.secondapp.activity.CommodityDetailTest$4 this$1 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.CommodityDetailTest$4$2 -> com.example.secondapp.activity.u:
    com.example.secondapp.activity.CommodityDetailTest$4 this$1 -> a
com.example.secondapp.activity.CommodityDetailTest$5 -> com.example.secondapp.activity.v:
    com.example.secondapp.activity.CommodityDetailTest this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
    void onFailure(java.lang.String,int,java.lang.String) -> a
com.example.secondapp.activity.CommodityDetailTest$6 -> com.example.secondapp.activity.w:
    com.example.secondapp.activity.CommodityDetailTest this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.CommodityDetailTest$7 -> com.example.secondapp.activity.x:
    com.example.secondapp.activity.CommodityDetailTest this$0 -> a
    void onRatingChanged(android.widget.RatingBar,float,boolean) -> onRatingChanged
com.example.secondapp.activity.CommodityDetailTest$8 -> com.example.secondapp.activity.y:
    com.example.secondapp.activity.CommodityDetailTest this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.EditAddress -> com.example.secondapp.activity.EditAddress:
    com.example.secondapp.bean.AdressBean adressbean -> a
    android.widget.EditText receiver -> b
    android.widget.EditText detailedaddress -> c
    android.widget.EditText phonenumber -> d
    android.widget.TextView save -> e
    android.widget.LinearLayout back -> f
    void onCreate(android.os.Bundle) -> onCreate
com.example.secondapp.activity.EditAddress$1 -> com.example.secondapp.activity.z:
    com.example.secondapp.activity.EditAddress this$0 -> a
    int val$pos -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.EditAddress$2 -> com.example.secondapp.activity.aa:
    com.example.secondapp.activity.EditAddress this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.Evaluation -> com.example.secondapp.activity.Evaluation:
    android.widget.ListView evaluationlv -> a
    android.widget.LinearLayout back -> b
    java.util.List list -> c
    com.example.secondapp.adapter.EvalutionAdapter adapter -> d
    int getid -> e
    com.example.secondapp.bean.FruitBean fruitbean -> h
    int evaluatecount -> f
    android.os.Handler handler -> g
    void onCreate(android.os.Bundle) -> onCreate
com.example.secondapp.activity.Evaluation$1 -> com.example.secondapp.activity.ab:
    com.example.secondapp.activity.Evaluation this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.Evaluation$2 -> com.example.secondapp.activity.ac:
    com.example.secondapp.activity.Evaluation this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.EvaluationOrder -> com.example.secondapp.activity.EvaluationOrder:
    com.example.secondapp.bean.MyOrderBean myOrderBean -> i
    android.widget.ImageView imageView -> a
    android.widget.TextView comname -> b
    android.widget.TextView comprice -> c
    android.widget.TextView number -> d
    android.widget.TextView evtorder -> e
    android.widget.EditText evtcontent -> f
    android.widget.LinearLayout back -> g
    android.widget.CheckBox good -> j
    android.widget.CheckBox normal -> k
    android.widget.CheckBox bad -> l
    android.widget.RatingBar ratingbar -> m
    int ratingnumber -> n
    android.os.Handler handler -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void evtOrder() -> a
    int access$0() -> b
    void access$1(int) -> a
com.example.secondapp.activity.EvaluationOrder$1 -> com.example.secondapp.activity.ad:
    com.example.secondapp.activity.EvaluationOrder this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.EvaluationOrder$2 -> com.example.secondapp.activity.ae:
    com.example.secondapp.activity.EvaluationOrder this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.EvaluationOrder$3 -> com.example.secondapp.activity.af:
    com.example.secondapp.activity.EvaluationOrder this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.EvaluationOrder$4 -> com.example.secondapp.activity.ag:
    com.example.secondapp.activity.EvaluationOrder this$0 -> a
    void onRatingChanged(android.widget.RatingBar,float,boolean) -> onRatingChanged
com.example.secondapp.activity.EvaluationOrder$5 -> com.example.secondapp.activity.ah:
    com.example.secondapp.activity.EvaluationOrder this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.ForgetPassword -> com.example.secondapp.activity.ForgetPassword:
    android.widget.EditText phonenumber -> b
    android.widget.EditText vercode -> c
    android.widget.Button sendcode -> d
    android.widget.TextView getpassword -> e
    int judgeuserexistcode -> f
    int code -> g
    android.os.Handler handler -> a
    void onCreate(android.os.Bundle) -> onCreate
    void judgeUserExist() -> a
    void getPhoneCode() -> b
    void confirmcode() -> c
    int access$0() -> d
    int access$1() -> e
    android.widget.EditText access$2() -> f
    android.widget.Button access$3() -> g
    android.widget.EditText access$4() -> h
    void access$5(int) -> a
    void access$6(int) -> b
com.example.secondapp.activity.ForgetPassword$1 -> com.example.secondapp.activity.ai:
    com.example.secondapp.activity.ForgetPassword this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.ForgetPassword$2 -> com.example.secondapp.activity.aj:
    com.example.secondapp.activity.ForgetPassword this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.secondapp.activity.ForgetPassword access$0(com.example.secondapp.activity.ForgetPassword$2) -> a
com.example.secondapp.activity.ForgetPassword$2$1 -> com.example.secondapp.activity.ak:
    com.example.secondapp.activity.ForgetPassword$2 this$1 -> a
    void finish() -> a
com.example.secondapp.activity.ForgetPassword$3 -> com.example.secondapp.activity.al:
    com.example.secondapp.activity.ForgetPassword this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.ForgetPassword$4 -> com.example.secondapp.activity.am:
    com.example.secondapp.activity.ForgetPassword this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.ForgetPassword$5 -> com.example.secondapp.activity.an:
    com.example.secondapp.activity.ForgetPassword this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.ForgetPassword$6 -> com.example.secondapp.activity.ao:
    com.example.secondapp.activity.ForgetPassword this$0 -> a
com.example.secondapp.activity.ForgetPassword$7 -> com.example.secondapp.activity.ap:
    com.example.secondapp.activity.ForgetPassword this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.HelpAndFeedback -> com.example.secondapp.activity.HelpAndFeedback:
    android.widget.ImageView back -> a
    android.widget.LinearLayout mainpage -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.ImgTextDetail -> com.example.secondapp.activity.ImgTextDetail:
    android.widget.ListView imgtextlv -> a
    com.example.secondapp.adapter.ImgTextAdapter adapter -> b
    java.util.List list -> c
    android.widget.LinearLayout back -> d
    void onCreate(android.os.Bundle) -> onCreate
com.example.secondapp.activity.ImgTextDetail$1 -> com.example.secondapp.activity.aq:
    com.example.secondapp.activity.ImgTextDetail this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.Logon -> com.example.secondapp.activity.Logon:
    android.widget.TextView register -> a
    android.widget.TextView forgetpsd -> b
    android.widget.TextView logon -> c
    android.widget.LinearLayout back -> d
    android.widget.EditText logonusername -> e
    android.widget.EditText logonpsd -> f
    org.json.JSONObject object -> g
    com.example.secondapp.bean.FruitBean fruitBean -> h
    int getkey -> j
    java.lang.String getuser -> k
    android.os.Handler handler -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void login(java.lang.String,java.lang.String) -> a
com.example.secondapp.activity.Logon$1 -> com.example.secondapp.activity.ar:
    com.example.secondapp.activity.Logon this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.Logon$2 -> com.example.secondapp.activity.as:
    com.example.secondapp.activity.Logon this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.ModifyAccount -> com.example.secondapp.activity.ModifyAccount:
    android.widget.LinearLayout back -> b
    android.widget.TextView preservation -> c
    android.widget.EditText modifyaccount -> a
    void onCreate(android.os.Bundle) -> onCreate
com.example.secondapp.activity.ModifyAccount$1 -> com.example.secondapp.activity.at:
    com.example.secondapp.activity.ModifyAccount this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.ModifyAccount$2 -> com.example.secondapp.activity.au:
    com.example.secondapp.activity.ModifyAccount this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.ModifyAccount$2$1 -> com.example.secondapp.activity.av:
    com.example.secondapp.activity.ModifyAccount$2 this$1 -> a
    void onSuccess(org.json.JSONObject) -> a
    void onFailure(java.lang.String,int,java.lang.String) -> a
com.example.secondapp.activity.ModifyPassword -> com.example.secondapp.activity.ModifyPassword:
    android.widget.EditText originalpassword -> c
    android.widget.EditText newpassword -> d
    android.widget.EditText confirmpassword -> e
    android.widget.TextView confirm -> f
    int getcode -> a
    android.os.Handler handler -> b
    void onCreate(android.os.Bundle) -> onCreate
    void modifyPassword() -> a
    void onClick(android.view.View) -> onClick
    android.widget.EditText access$0() -> b
    android.widget.EditText access$1() -> c
    android.widget.EditText access$2() -> d
com.example.secondapp.activity.ModifyPassword$1 -> com.example.secondapp.activity.aw:
    com.example.secondapp.activity.ModifyPassword this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.ModifyPassword$2 -> com.example.secondapp.activity.ax:
    com.example.secondapp.activity.ModifyPassword this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.ModifyPassword$3 -> com.example.secondapp.activity.ay:
    com.example.secondapp.activity.ModifyPassword this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.MyCollection -> com.example.secondapp.activity.MyCollection:
    com.example.secondapp.view.PullToRefreshLV lv -> a
    java.util.List list -> b
    android.widget.LinearLayout logonback -> c
    com.example.secondapp.adapter.MyCollectionAdapter adapter -> d
    android.widget.TextView nocollection -> e
    android.os.Handler handler -> f
    void onCreate(android.os.Bundle) -> onCreate
    void checkCollection(int) -> a
com.example.secondapp.activity.MyCollection$1 -> com.example.secondapp.activity.az:
    com.example.secondapp.activity.MyCollection this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.MyCollection$2 -> com.example.secondapp.activity.ba:
    com.example.secondapp.activity.MyCollection this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.MyCollection$3 -> com.example.secondapp.activity.bb:
    com.example.secondapp.activity.MyCollection this$0 -> a
    void onRefresh() -> a
    com.example.secondapp.activity.MyCollection access$0(com.example.secondapp.activity.MyCollection$3) -> a
com.example.secondapp.activity.MyCollection$3$1 -> com.example.secondapp.activity.bc:
    com.example.secondapp.activity.MyCollection$3 this$1 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.secondapp.activity.MyCollection$4 -> com.example.secondapp.activity.bd:
    com.example.secondapp.activity.MyCollection this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.secondapp.activity.MyCollection$5 -> com.example.secondapp.activity.be:
    com.example.secondapp.activity.MyCollection this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.MyOrder -> com.example.secondapp.activity.MyOrder:
    android.support.v4.view.ViewPager viewPager -> a
    java.util.List list -> b
    android.support.v4.app.Fragment mo1 -> c
    android.support.v4.app.Fragment mo2 -> d
    android.support.v4.app.Fragment mo3 -> e
    android.support.v4.app.Fragment mo4 -> f
    android.widget.RadioButton text1 -> g
    android.widget.RadioButton text2 -> h
    android.widget.RadioButton text3 -> i
    android.widget.RadioButton text4 -> j
    android.widget.LinearLayout back -> k
    android.widget.ImageView mIv -> m
    int off -> n
    int ll -> o
    int dhBmpW -> p
    android.widget.RadioGroup radiogroup -> l
    int position -> q
    int flag -> r
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> c
    void onClick(android.view.View) -> onClick
    void setSelected(int) -> a
    int access$0() -> a
    int access$1() -> b
    android.widget.ImageView access$2(com.example.secondapp.activity.MyOrder) -> a
    void access$3(int) -> b
com.example.secondapp.activity.MyOrder$1 -> com.example.secondapp.activity.bf:
    com.example.secondapp.activity.MyOrder this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.example.secondapp.activity.MyOrder$2 -> com.example.secondapp.activity.bg:
    com.example.secondapp.activity.MyOrder this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.example.secondapp.activity.MyOrder$myViewPagerAdapter -> com.example.secondapp.activity.bh:
    java.util.List list -> a
    com.example.secondapp.activity.MyOrder this$0 -> b
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
com.example.secondapp.activity.OrderConfirm -> com.example.secondapp.activity.OrderConfirm:
    java.util.List list -> a
    android.widget.RelativeLayout paymode2 -> b
    android.widget.RelativeLayout paymode3 -> c
    android.widget.CheckBox checked1 -> d
    android.widget.CheckBox checked2 -> e
    android.widget.CheckBox checked3 -> f
    android.widget.LinearLayout back -> g
    java.lang.String orderid -> h
    java.lang.String order -> i
    android.widget.RelativeLayout modifyadress -> j
    com.example.secondapp.bean.AdressBean adressBean -> C
    android.widget.TextView textpm -> k
    android.widget.TextView name -> l
    android.widget.TextView phonenumber -> m
    android.widget.TextView adress -> n
    android.widget.Button pay -> o
    android.widget.CheckBox checkm -> p
    android.widget.CheckBox checkn -> q
    com.example.secondapp.data.Order order_ob -> D
    java.util.List fruitlist -> E
    com.example.secondapp.adapter.ItemGoodsAdapter adpater -> r
    java.lang.String typePay -> F
    java.lang.Double doublePrices -> s
    com.example.secondapp.bean.MyOrderBean myOrderBean -> G
    com.android.volley.RequestQueue requestQueue -> H
    java.lang.String timeslot -> t
    android.widget.TextView morning -> u
    android.widget.TextView afterroon -> v
    android.os.Handler mHandler -> I
    java.util.Map listOrders -> w
    com.example.secondapp.model.OrdersForm SGform -> J
    android.widget.ListView lstv -> K
    com.alipay.sdk.pay.PayUtils$ResponseHandler handler2 -> x
    android.os.Handler handler -> y
    void onCreate(android.os.Bundle) -> onCreate
    void toCalculate() -> a
    void onClick(android.view.View) -> onClick
    void getAddressData(int) -> a
    void getHuiDiao(java.lang.String) -> b
    void pay(com.example.secondapp.bean.MyOrderBean) -> a
    void check(android.view.View) -> check
    java.lang.String getOrderInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String sign(java.lang.String) -> a
    java.lang.String getSignType() -> b
    void onClickContentItem(int,int,java.lang.Object) -> a
    void onResume() -> onResume
    void access$0(com.example.secondapp.activity.OrderConfirm,java.lang.String) -> a
    void access$1(com.example.secondapp.activity.OrderConfirm,com.example.secondapp.bean.AdressBean) -> a
    android.os.Handler access$5(com.example.secondapp.activity.OrderConfirm) -> a
com.example.secondapp.activity.OrderConfirm$1 -> com.example.secondapp.activity.bi:
    com.example.secondapp.activity.OrderConfirm this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.OrderConfirm$12 -> com.example.secondapp.activity.bj:
    com.example.secondapp.activity.OrderConfirm this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.activity.OrderConfirm$13 -> com.example.secondapp.activity.bk:
    com.example.secondapp.activity.OrderConfirm this$0 -> a
    java.lang.String val$payInfo -> b
    void run() -> run
com.example.secondapp.activity.OrderConfirm$14 -> com.example.secondapp.activity.bl:
    com.example.secondapp.activity.OrderConfirm this$0 -> a
    void run() -> run
com.example.secondapp.activity.OrderConfirm$2 -> com.example.secondapp.activity.bm:
    com.example.secondapp.activity.OrderConfirm this$0 -> a
    void onWebserviceSucceed() -> onWebserviceSucceed
com.example.secondapp.activity.OrderConfirm$3 -> com.example.secondapp.activity.bn:
    com.example.secondapp.activity.OrderConfirm this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.OrderConfirm$7 -> com.example.secondapp.activity.bo:
    com.example.secondapp.activity.OrderConfirm this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.OrderConfirm$8 -> com.example.secondapp.activity.bp:
    com.example.secondapp.activity.OrderConfirm this$0 -> a
    void onResponse(java.lang.String) -> a
    void onResponse(java.lang.Object) -> onResponse
com.example.secondapp.activity.OrderConfirm$9 -> com.example.secondapp.activity.bq:
    com.example.secondapp.activity.OrderConfirm this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.example.secondapp.activity.PayInterface -> com.example.secondapp.activity.PayInterface:
    android.widget.TextView lqg -> a
    android.widget.TextView zfb -> b
    android.widget.TextView yf -> c
    android.widget.TextView payfor -> d
    java.lang.String moneyget -> e
    java.lang.Double zfbf -> f
    java.lang.Double lqgf -> g
    android.widget.LinearLayout back -> h
    com.example.secondapp.data.Order order_ob -> i
    com.example.secondapp.bean.AdressBean adressBean -> j
    com.android.volley.RequestQueue requestQueue -> k
    android.os.Handler mHandler -> l
    android.os.Handler handler -> m
    void onCreate(android.os.Bundle) -> onCreate
    void getMoney() -> c
    void paybylqg() -> d
    void setOrder() -> a
    void pay(com.example.secondapp.data.Order) -> a
    void getHuiDiao(java.lang.String) -> b
    java.lang.String getOrderInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String sign(java.lang.String) -> a
    java.lang.String getSignType() -> b
    void onResume() -> onResume
    void access$0(com.example.secondapp.activity.PayInterface) -> a
    void access$1(com.example.secondapp.activity.PayInterface,java.lang.String) -> a
    android.os.Handler access$2(com.example.secondapp.activity.PayInterface) -> b
    void access$3(com.example.secondapp.activity.PayInterface,com.example.secondapp.data.Order) -> a
    com.example.secondapp.data.Order access$4(com.example.secondapp.activity.PayInterface) -> c
    com.example.secondapp.bean.AdressBean access$5(com.example.secondapp.activity.PayInterface) -> d
    android.os.Handler access$6(com.example.secondapp.activity.PayInterface) -> e
com.example.secondapp.activity.PayInterface$1 -> com.example.secondapp.activity.br:
    com.example.secondapp.activity.PayInterface this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.PayInterface$10 -> com.example.secondapp.activity.bs:
    com.example.secondapp.activity.PayInterface this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.activity.PayInterface$11 -> com.example.secondapp.activity.bt:
    com.example.secondapp.activity.PayInterface this$0 -> a
    java.lang.String val$payInfo -> b
    void run() -> run
com.example.secondapp.activity.PayInterface$12 -> com.example.secondapp.activity.bu:
    com.example.secondapp.activity.PayInterface this$0 -> a
    void onResponse(java.lang.String) -> a
    void onResponse(java.lang.Object) -> onResponse
com.example.secondapp.activity.PayInterface$13 -> com.example.secondapp.activity.bv:
    com.example.secondapp.activity.PayInterface this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.example.secondapp.activity.PayInterface$2 -> com.example.secondapp.activity.bw:
    com.example.secondapp.activity.PayInterface this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.PayInterface$3 -> com.example.secondapp.activity.bx:
    com.example.secondapp.activity.PayInterface this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.PayInterface$4 -> com.example.secondapp.activity.by:
    com.example.secondapp.activity.PayInterface this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.PayInterface$5 -> com.example.secondapp.activity.bz:
    com.example.secondapp.activity.PayInterface this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.PayInterface$6 -> com.example.secondapp.activity.ca:
    com.example.secondapp.activity.PayInterface this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.PayInterface$7 -> com.example.secondapp.activity.cb:
    com.example.secondapp.activity.PayInterface this$0 -> a
    void onResponse(java.lang.String) -> a
    void onResponse(java.lang.Object) -> onResponse
com.example.secondapp.activity.PayInterface$8 -> com.example.secondapp.activity.cc:
    com.example.secondapp.activity.PayInterface this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.example.secondapp.activity.PayInterface$9 -> com.example.secondapp.activity.cd:
    com.example.secondapp.activity.PayInterface this$0 -> a
    java.util.Map getParams() -> getParams
    java.util.Map getHeaders() -> getHeaders
com.example.secondapp.activity.PayMode -> com.example.secondapp.activity.PayMode:
    android.widget.CheckBox checked1 -> a
    android.widget.CheckBox checked2 -> b
    android.widget.CheckBox checked3 -> c
    android.widget.TextView textpm -> d
    android.widget.LinearLayout back -> e
    android.widget.Button payfor -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.PersonalMsg -> com.example.secondapp.activity.PersonalMsg:
    android.widget.RelativeLayout personalsetting1 -> a
    android.widget.RelativeLayout personalsetting2 -> b
    android.widget.RelativeLayout personalsetting4 -> c
    android.widget.RelativeLayout personalsetting5 -> d
    android.widget.LinearLayout back -> e
    android.widget.TextView exitlogon -> f
    android.widget.ImageView userimage -> g
    com.example.secondapp.networkbitmap.BitmapCache cache -> h
    java.lang.String path -> i
    android.widget.PopupWindow popupWindow -> m
    android.view.View view -> n
    android.widget.TextView takepic -> o
    android.widget.TextView fromphotoalbum -> p
    android.widget.TextView cancel -> q
    android.widget.TextView cellphonenum -> r
    android.widget.TextView accountnumber -> j
    java.io.File tempFile -> k
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener animateFirstListener -> s
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> l
    java.io.File PHOTO_CACHE_DIR -> t
    java.lang.String txpic -> u
    java.lang.String pics -> v
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void showPopupWindow() -> a
    void backgroundAlpha(float) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setPicToView(android.content.Intent) -> a
    void startPhotoZoom(android.net.Uri,int) -> a
    java.lang.String getPhotoFileName() -> b
    void onPause() -> onPause
    void onResume() -> onResume
    void sendCover(java.lang.String) -> a
com.example.secondapp.activity.PersonalMsg$1 -> com.example.secondapp.activity.ce:
    com.example.secondapp.activity.PersonalMsg this$0 -> a
    void onResponse(java.lang.String) -> a
    void onResponse(java.lang.Object) -> onResponse
com.example.secondapp.activity.PersonalMsg$2 -> com.example.secondapp.activity.cf:
    com.example.secondapp.activity.PersonalMsg this$0 -> a
    void onErrorResponse(com.android.volley.VolleyError) -> onErrorResponse
com.example.secondapp.activity.PersonalMsg$poponDismissListener -> com.example.secondapp.activity.cg:
    com.example.secondapp.activity.PersonalMsg this$0 -> a
    void onDismiss() -> onDismiss
com.example.secondapp.activity.PushMsg -> com.example.secondapp.activity.PushMsg:
    android.widget.TextView pushmsg -> a
    android.os.Handler handler -> b
    void onCreate(android.os.Bundle) -> onCreate
    void getMsg() -> a
com.example.secondapp.activity.PushMsg$1 -> com.example.secondapp.activity.ch:
    com.example.secondapp.activity.PushMsg this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.PushMsg$2 -> com.example.secondapp.activity.ci:
    com.example.secondapp.activity.PushMsg this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.ReceivingAddress -> com.example.secondapp.activity.ReceivingAddress:
    java.util.List list -> a
    android.widget.ListView listView -> b
    android.widget.RelativeLayout personalsetting -> c
    android.widget.LinearLayout back -> d
    int ca -> h
    com.example.secondapp.bean.AdressBean adressBean -> e
    com.example.secondapp.adapter.AdressAdapter adapter -> f
    android.os.Handler handler -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void getAddressData(int) -> a
com.example.secondapp.activity.ReceivingAddress$1 -> com.example.secondapp.activity.cj:
    com.example.secondapp.activity.ReceivingAddress this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.ReceivingAddress$2 -> com.example.secondapp.activity.ck:
    com.example.secondapp.activity.ReceivingAddress this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.secondapp.activity.ReceivingAddress$3 -> com.example.secondapp.activity.cl:
    com.example.secondapp.activity.ReceivingAddress this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.ReceivingAddress$4 -> com.example.secondapp.activity.cm:
    com.example.secondapp.activity.ReceivingAddress this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.ReceivingAddress$5 -> com.example.secondapp.activity.cn:
    com.example.secondapp.activity.ReceivingAddress this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.Register -> com.example.secondapp.activity.Register:
    android.widget.EditText password -> b
    android.widget.EditText confirmpsd -> c
    android.widget.EditText phonenumber -> d
    android.widget.EditText verificationcode -> e
    android.widget.Button getcode -> f
    android.widget.TextView confirm -> g
    java.lang.String message -> h
    int code -> i
    int judgeuserexistcode -> j
    int useruid -> k
    android.os.Handler handler -> a
    void onCreate(android.os.Bundle) -> onCreate
    void judgeUserExist() -> a
    void getPhoneCode() -> b
    void confirmRegister() -> c
    void onClick(android.view.View) -> onClick
    int access$0() -> d
    int access$1() -> e
    android.widget.EditText access$2() -> f
    android.widget.EditText access$3() -> g
    int access$4() -> h
    android.widget.Button access$5() -> i
    android.widget.EditText access$6() -> j
    android.widget.EditText access$7() -> k
    void access$8(int) -> a
    void access$9(java.lang.String) -> a
    void access$10(int) -> b
    void access$11(int) -> c
com.example.secondapp.activity.Register$1 -> com.example.secondapp.activity.co:
    com.example.secondapp.activity.Register this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.Register$2 -> com.example.secondapp.activity.cp:
    com.example.secondapp.activity.Register this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.Register$3 -> com.example.secondapp.activity.cq:
    com.example.secondapp.activity.Register this$0 -> a
    void onClick(android.view.View) -> onClick
    com.example.secondapp.activity.Register access$0(com.example.secondapp.activity.Register$3) -> a
com.example.secondapp.activity.Register$3$1 -> com.example.secondapp.activity.cr:
    com.example.secondapp.activity.Register$3 this$1 -> a
    void finish() -> a
com.example.secondapp.activity.Register$4 -> com.example.secondapp.activity.cs:
    com.example.secondapp.activity.Register this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.Register$5 -> com.example.secondapp.activity.ct:
    com.example.secondapp.activity.Register this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.Register$6 -> com.example.secondapp.activity.cu:
    com.example.secondapp.activity.Register this$0 -> a
com.example.secondapp.activity.Register$7 -> com.example.secondapp.activity.cv:
    com.example.secondapp.activity.Register this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.SearchInterface -> com.example.secondapp.activity.SearchInterface:
    android.widget.ImageView back -> a
    android.widget.TextView cleanhistory -> b
    android.widget.EditText editText -> c
    android.widget.ListView listView -> d
    android.widget.ListView lvdetail -> e
    android.widget.LinearLayout beforesearch -> f
    java.util.List list -> g
    java.util.List list2 -> h
    com.example.secondapp.adapter.SearchHistoryAdapter adapter -> i
    com.example.secondapp.adapter.FruitShowListViewAdapter adapter2 -> j
    android.content.SharedPreferences share -> k
    com.example.secondapp.adapter.SearchHistoryAdapter$SearchHistoryBean bean -> l
    android.widget.LinearLayout search -> m
    android.widget.TextView apple -> n
    android.widget.TextView nosearch -> o
    android.widget.TextView pear -> p
    android.widget.TextView grape -> q
    android.widget.TextView kiwi -> r
    android.widget.TextView watermelon -> s
    java.lang.String name -> t
    java.lang.String input -> u
    android.os.Handler handler -> v
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void saveHistory(java.lang.String,android.widget.EditText) -> a
    void getSearchProduct() -> a
com.example.secondapp.activity.SearchInterface$1 -> com.example.secondapp.activity.cw:
    com.example.secondapp.activity.SearchInterface this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    com.example.secondapp.activity.SearchInterface access$0(com.example.secondapp.activity.SearchInterface$1) -> a
com.example.secondapp.activity.SearchInterface$1$1 -> com.example.secondapp.activity.cx:
    com.example.secondapp.activity.SearchInterface$1 this$1 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.secondapp.activity.SearchInterface$2 -> com.example.secondapp.activity.cy:
    com.example.secondapp.activity.SearchInterface this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.example.secondapp.activity.SearchInterface$3 -> com.example.secondapp.activity.cz:
    com.example.secondapp.activity.SearchInterface this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.Setting -> com.example.secondapp.activity.Setting:
    android.widget.LinearLayout back -> a
    android.widget.ToggleButton togglebutton1 -> b
    android.widget.RelativeLayout mysetting2 -> c
    android.widget.RelativeLayout mysetting3 -> d
    android.widget.RelativeLayout mysetting4 -> e
    android.widget.RelativeLayout mysetting5 -> f
    android.widget.RelativeLayout mysetting6 -> g
    android.widget.RelativeLayout mysetting7 -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.Setting$1 -> com.example.secondapp.activity.da:
    com.example.secondapp.activity.Setting this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.example.secondapp.activity.ShoppingCartList -> com.example.secondapp.activity.ShoppingCartList:
    com.example.secondapp.view.PullToRefreshLV listview -> a
    android.widget.LinearLayout back -> b
    android.widget.LinearLayout gopayfor -> c
    com.example.secondapp.adapter.ShoppingCartAdapter adapter -> d
    java.util.List list -> e
    int count -> f
    android.widget.TextView gopaynum -> g
    android.widget.TextView totalprice -> h
    android.widget.TextView nocom -> i
    android.widget.ImageView deleteall -> l
    double doublePrices -> j
    android.os.Handler handler -> k
    void onCreate(android.os.Bundle) -> onCreate
    void toCalculate() -> a
    void initView() -> b
    void onClick(android.view.View) -> onClick
    void showMyDialog(int) -> a
    void getshoppingcart(int) -> b
    void onClickContentItem(int,int,java.lang.Object) -> a
    void showMyDialogItem(int) -> c
com.example.secondapp.activity.ShoppingCartList$1 -> com.example.secondapp.activity.db:
    com.example.secondapp.activity.ShoppingCartList this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.ShoppingCartList$2 -> com.example.secondapp.activity.dc:
    com.example.secondapp.activity.ShoppingCartList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.secondapp.activity.ShoppingCartList$3 -> com.example.secondapp.activity.dd:
    com.example.secondapp.activity.ShoppingCartList this$0 -> a
    void onRefresh() -> a
com.example.secondapp.activity.ShoppingCartList$3$1 -> com.example.secondapp.activity.de:
    com.example.secondapp.activity.ShoppingCartList$3 this$1 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.secondapp.activity.ShoppingCartList$4 -> com.example.secondapp.activity.df:
    com.example.secondapp.activity.ShoppingCartList this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.activity.ShoppingCartList$5 -> com.example.secondapp.activity.dg:
    com.example.secondapp.activity.ShoppingCartList this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.activity.ShoppingCartList$5$1 -> com.example.secondapp.activity.dh:
    com.example.secondapp.activity.ShoppingCartList$5 this$1 -> a
com.example.secondapp.activity.ShoppingCartList$6 -> com.example.secondapp.activity.di:
    com.example.secondapp.activity.ShoppingCartList this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.activity.ShoppingCartList$7 -> com.example.secondapp.activity.dj:
    com.example.secondapp.activity.ShoppingCartList this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.activity.ShoppingCartList$8 -> com.example.secondapp.activity.dk:
    com.example.secondapp.activity.ShoppingCartList this$0 -> a
    int val$position -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.activity.ShoppingCartList$8$1 -> com.example.secondapp.activity.dl:
    com.example.secondapp.activity.ShoppingCartList$8 this$1 -> a
com.example.secondapp.activity.ToBeEvaluation -> com.example.secondapp.activity.ToBeEvaluation:
    android.widget.Button btn1 -> a
    android.widget.Button btn2 -> b
    android.widget.LinearLayout back -> c
    int pos -> j
    com.example.secondapp.bean.MyOrderBean myOrderBean -> k
    android.widget.ImageView imageView -> d
    android.widget.TextView comname -> e
    android.widget.TextView comprice -> f
    android.widget.TextView number -> g
    android.widget.TextView paid -> h
    android.widget.TextView money -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void showMyDialog(int) -> a
    com.example.secondapp.bean.MyOrderBean access$0() -> a
com.example.secondapp.activity.ToBeEvaluation$1 -> com.example.secondapp.activity.dm:
    com.example.secondapp.activity.ToBeEvaluation this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.activity.ToBeEvaluation$2 -> com.example.secondapp.activity.dn:
    com.example.secondapp.activity.ToBeEvaluation this$0 -> a
    int val$position -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.activity.ToBeEvaluation$2$1 -> com.example.secondapp.activity.do:
    com.example.secondapp.activity.ToBeEvaluation$2 this$1 -> a
com.example.secondapp.activity.ToBePay -> com.example.secondapp.activity.ToBePay:
    android.widget.Button btn1 -> a
    android.widget.Button btn2 -> b
    android.widget.LinearLayout back -> c
    int pos -> j
    com.example.secondapp.bean.MyOrderBean myOrderBean -> k
    android.widget.ImageView imageView -> d
    android.widget.TextView comname -> e
    android.widget.TextView comprice -> f
    android.widget.TextView number -> g
    android.widget.TextView paid -> h
    android.widget.TextView money -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void showMyDialog(int) -> a
    com.example.secondapp.bean.MyOrderBean access$0() -> a
com.example.secondapp.activity.ToBePay$1 -> com.example.secondapp.activity.dp:
    com.example.secondapp.activity.ToBePay this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.activity.ToBePay$2 -> com.example.secondapp.activity.dq:
    com.example.secondapp.activity.ToBePay this$0 -> a
    int val$position -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.activity.ToBePay$2$1 -> com.example.secondapp.activity.dr:
    com.example.secondapp.activity.ToBePay$2 this$1 -> a
com.example.secondapp.activity.ToBeReceive -> com.example.secondapp.activity.ToBeReceive:
    android.widget.Button btn1 -> a
    android.widget.Button btn2 -> b
    android.widget.LinearLayout back -> c
    com.example.secondapp.bean.MyOrderBean myOrderBean -> j
    android.widget.ImageView imageView -> d
    android.widget.TextView comname -> e
    android.widget.TextView comprice -> f
    android.widget.TextView number -> g
    android.widget.TextView paid -> h
    android.widget.TextView money -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void showMyDialog(int) -> a
    com.example.secondapp.bean.MyOrderBean access$0() -> a
com.example.secondapp.activity.ToBeReceive$1 -> com.example.secondapp.activity.ds:
    com.example.secondapp.activity.ToBeReceive this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.activity.ToBeReceive$2 -> com.example.secondapp.activity.dt:
    com.example.secondapp.activity.ToBeReceive this$0 -> a
    int val$position -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.activity.ToBeReceive$2$1 -> com.example.secondapp.activity.du:
    com.example.secondapp.activity.ToBeReceive$2 this$1 -> a
com.example.secondapp.activity.ToBeShipped -> com.example.secondapp.activity.ToBeShipped:
    android.widget.Button btn1 -> a
    android.widget.Button btn2 -> b
    android.widget.LinearLayout back -> c
    com.example.secondapp.bean.MyOrderBean myOrderBean -> j
    android.widget.ImageView imageView -> d
    android.widget.TextView comname -> e
    android.widget.TextView comprice -> f
    android.widget.TextView number -> g
    android.widget.TextView paid -> h
    android.widget.TextView money -> i
    int pos -> k
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void showMyDialog(int) -> a
    com.example.secondapp.bean.MyOrderBean access$0() -> a
com.example.secondapp.activity.ToBeShipped$1 -> com.example.secondapp.activity.dv:
    com.example.secondapp.activity.ToBeShipped this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.activity.ToBeShipped$2 -> com.example.secondapp.activity.dw:
    com.example.secondapp.activity.ToBeShipped this$0 -> a
    int val$position -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.activity.ToBeShipped$2$1 -> com.example.secondapp.activity.dx:
    com.example.secondapp.activity.ToBeShipped$2 this$1 -> a
com.example.secondapp.activity.ViewLogistics -> com.example.secondapp.activity.ViewLogistics:
    com.example.secondapp.bean.MyOrderBean bean -> a
    android.widget.TextView expressname -> b
    android.widget.TextView expressnumber -> c
    android.widget.LinearLayout back -> d
    android.widget.ImageView commodityimage -> e
    android.widget.TextView commodityname -> f
    android.widget.TextView commodityprice -> g
    android.widget.TextView commoditynumber -> h
    void onCreate(android.os.Bundle) -> onCreate
com.example.secondapp.activity.ViewLogistics$1 -> com.example.secondapp.activity.dy:
    com.example.secondapp.activity.ViewLogistics this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.WelcomeActivity -> com.example.secondapp.activity.WelcomeActivity:
    com.amap.api.location.LocationManagerProxy mLocationManagerProxy -> c
    org.json.JSONObject object -> a
    android.os.Handler handler -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void run() -> run
    void login(java.lang.String,java.lang.String) -> a
    void init() -> a
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
    void onPause() -> onPause
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onResume() -> onResume
com.example.secondapp.activity.WelcomeActivity$1 -> com.example.secondapp.activity.dz:
    com.example.secondapp.activity.WelcomeActivity this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.WelcomeActivity$2 -> com.example.secondapp.activity.ea:
    com.example.secondapp.activity.WelcomeActivity this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
    void onFailure(java.lang.String,int,java.lang.String) -> a
com.example.secondapp.activity.XieyiActivity -> com.example.secondapp.activity.XieyiActivity:
    com.example.secondapp.view.MyTextView2 view -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    java.lang.String getAssetsString(android.content.Context,java.lang.String) -> a
com.example.secondapp.activity.forgetAndModifyPSD -> com.example.secondapp.activity.forgetAndModifyPSD:
    java.lang.String phone -> b
    android.widget.EditText newpassword -> c
    android.widget.EditText confirmpassword -> d
    android.widget.TextView confirm -> e
    int code -> f
    android.os.Handler handler -> a
    void onCreate(android.os.Bundle) -> onCreate
    void changePassword() -> a
    int access$0() -> b
    android.widget.EditText access$1() -> c
    android.widget.EditText access$2() -> d
    void access$3(int) -> a
com.example.secondapp.activity.forgetAndModifyPSD$1 -> com.example.secondapp.activity.eb:
    com.example.secondapp.activity.forgetAndModifyPSD this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.activity.forgetAndModifyPSD$2 -> com.example.secondapp.activity.ec:
    com.example.secondapp.activity.forgetAndModifyPSD this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.activity.forgetAndModifyPSD$3 -> com.example.secondapp.activity.ed:
    com.example.secondapp.activity.forgetAndModifyPSD this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.adapter.AdressAdapter -> com.example.secondapp.adapter.a:
    java.util.List list -> a
    android.view.LayoutInflater inflater -> b
    android.content.Context context -> c
    android.widget.LinearLayout layoutitem -> d
    int flag -> e
    java.util.HashMap isSelected -> f
    java.lang.String uid -> g
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void initDate() -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.HashMap getIsSelected() -> a
    void showMyDialog(int) -> a
    void setDefaultAdress(int) -> b
com.example.secondapp.adapter.AdressAdapter$1 -> com.example.secondapp.adapter.b:
    com.example.secondapp.adapter.AdressAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.AdressAdapter$2 -> com.example.secondapp.adapter.c:
    com.example.secondapp.adapter.AdressAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.AdressAdapter$3 -> com.example.secondapp.adapter.d:
    com.example.secondapp.adapter.AdressAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.AdressAdapter$4 -> com.example.secondapp.adapter.e:
    com.example.secondapp.adapter.AdressAdapter this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.adapter.AdressAdapter$5 -> com.example.secondapp.adapter.f:
    com.example.secondapp.adapter.AdressAdapter this$0 -> a
    int val$position -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.adapter.AdressAdapter$6 -> com.example.secondapp.adapter.g:
    com.example.secondapp.adapter.AdressAdapter this$0 -> a
com.example.secondapp.adapter.AdressAdapter$Holder -> com.example.secondapp.adapter.h:
    android.widget.TextView name -> a
    android.widget.TextView adress -> b
    android.widget.TextView phonenumber -> c
    android.widget.CheckBox checkBox -> d
    com.example.secondapp.adapter.AdressAdapter this$0 -> e
com.example.secondapp.adapter.AdvertisingImageadapter -> com.example.secondapp.adapter.AdvertisingImageadapter:
    java.util.ArrayList viewlist -> b
    android.content.Context context -> a
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
com.example.secondapp.adapter.AdvertisingImageadapter$1 -> com.example.secondapp.adapter.i:
    com.example.secondapp.adapter.AdvertisingImageadapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.AdvertisingImageadapter$2 -> com.example.secondapp.adapter.j:
    com.example.secondapp.adapter.AdvertisingImageadapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.AdvertisingImageadapter$3 -> com.example.secondapp.adapter.k:
    com.example.secondapp.adapter.AdvertisingImageadapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.AnimateFirstDisplayListener -> com.example.secondapp.adapter.l:
    java.util.List displayedImages -> a
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
com.example.secondapp.adapter.ClassAdapter -> com.example.secondapp.adapter.m:
    java.util.List list -> a
    android.view.LayoutInflater inflater -> b
    android.content.Context context -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.secondapp.adapter.ClassAdapter$Holder -> com.example.secondapp.adapter.n:
    android.widget.ImageView classimage -> a
    android.widget.TextView typename -> b
    android.widget.TextView example -> c
    com.example.secondapp.adapter.ClassAdapter this$0 -> d
com.example.secondapp.adapter.EvalutionAdapter -> com.example.secondapp.adapter.o:
    java.util.List list -> a
    android.view.LayoutInflater inflater -> b
    android.content.Context context -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.secondapp.adapter.EvalutionAdapter$Holder -> com.example.secondapp.adapter.p:
    android.widget.TextView username -> a
    android.widget.TextView date -> b
    android.widget.TextView evaluation -> c
    android.widget.RatingBar ratingBar -> d
    com.example.secondapp.adapter.EvalutionAdapter this$0 -> e
com.example.secondapp.adapter.FruitShowListViewAdapter -> com.example.secondapp.adapter.q:
    java.util.List list -> a
    android.view.LayoutInflater inflater -> b
    android.content.Context context -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.secondapp.adapter.FruitShowListViewAdapter$Holder -> com.example.secondapp.adapter.r:
    android.widget.ImageView compic -> a
    android.widget.TextView comdescribe -> b
    android.widget.TextView compri -> c
    android.widget.TextView comsuppri -> d
    android.widget.TextView addshopcart -> e
    android.widget.TextView compnum -> f
    com.example.secondapp.adapter.FruitShowListViewAdapter this$0 -> g
com.example.secondapp.adapter.ImgTextAdapter -> com.example.secondapp.adapter.s:
    java.util.List list -> a
    android.view.LayoutInflater inflater -> b
    android.content.Context context -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.secondapp.adapter.ImgTextAdapter$Holder -> com.example.secondapp.adapter.t:
    android.widget.ImageView imgid -> a
    com.example.secondapp.adapter.ImgTextAdapter this$0 -> b
com.example.secondapp.adapter.ItemGoodsAdapter -> com.example.secondapp.adapter.u:
    com.example.secondapp.adapter.ItemGoodsAdapter$ViewHolder holder -> b
    java.util.List findEmps -> c
    android.content.Context mContext -> d
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener animateFirstListener -> e
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> a
    com.example.secondapp.adapter.OnClickContentItemListener onClickContentItemListener -> f
    void setOnClickContentItemListener(com.example.secondapp.adapter.OnClickContentItemListener) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.example.secondapp.adapter.OnClickContentItemListener access$0(com.example.secondapp.adapter.ItemGoodsAdapter) -> a
com.example.secondapp.adapter.ItemGoodsAdapter$1 -> com.example.secondapp.adapter.v:
    com.example.secondapp.adapter.ItemGoodsAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.ItemGoodsAdapter$2 -> com.example.secondapp.adapter.w:
    com.example.secondapp.adapter.ItemGoodsAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.ItemGoodsAdapter$ViewHolder -> com.example.secondapp.adapter.x:
    android.widget.ImageView comimage -> a
    android.widget.TextView comname -> b
    android.widget.TextView comprice -> c
    android.widget.TextView freight -> d
    android.widget.TextView paid -> e
    android.widget.ImageView goods_jian -> f
    android.widget.ImageView goods_add -> g
    android.widget.TextView item_num -> h
    com.example.secondapp.adapter.ItemGoodsAdapter this$0 -> i
com.example.secondapp.adapter.LvAdapter -> com.example.secondapp.adapter.y:
    java.util.List list -> a
    android.content.Context context -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.secondapp.adapter.MyCollectionAdapter -> com.example.secondapp.adapter.z:
    java.util.List list -> a
    android.view.LayoutInflater inflater -> b
    android.content.Context context -> c
    java.lang.String uid -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void showMyDialog(int) -> a
    java.lang.String access$0(com.example.secondapp.adapter.MyCollectionAdapter) -> a
com.example.secondapp.adapter.MyCollectionAdapter$1 -> com.example.secondapp.adapter.aa:
    com.example.secondapp.adapter.MyCollectionAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.MyCollectionAdapter$2 -> com.example.secondapp.adapter.ab:
    com.example.secondapp.adapter.MyCollectionAdapter this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.adapter.MyCollectionAdapter$3 -> com.example.secondapp.adapter.ac:
    com.example.secondapp.adapter.MyCollectionAdapter this$0 -> a
    int val$position -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.adapter.MyCollectionAdapter$3$1 -> com.example.secondapp.adapter.ad:
    com.example.secondapp.adapter.MyCollectionAdapter$3 this$1 -> a
com.example.secondapp.adapter.MyCollectionAdapter$Holder -> com.example.secondapp.adapter.ae:
    android.widget.ImageView compic -> a
    android.widget.TextView comdescribe -> b
    android.widget.TextView compri -> c
    android.widget.TextView comsuppri -> d
    android.widget.TextView addshopcart -> e
    com.example.secondapp.adapter.MyCollectionAdapter this$0 -> f
com.example.secondapp.adapter.MyOrderAdapter -> com.example.secondapp.adapter.af:
    java.util.List list -> a
    android.view.LayoutInflater inflater -> b
    android.content.Context context -> c
    java.util.List listItemID -> d
    android.widget.CheckBox checkBox -> e
    java.lang.String uid -> g
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener animateFirstListener -> h
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> f
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.secondapp.adapter.MyOrderAdapter$1 -> com.example.secondapp.adapter.ag:
    com.example.secondapp.adapter.MyOrderAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.MyOrderAdapter$2 -> com.example.secondapp.adapter.ah:
    com.example.secondapp.adapter.MyOrderAdapter this$0 -> a
    com.example.secondapp.bean.MyOrderBean val$myOrderBean -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.MyOrderAdapter$Holder -> com.example.secondapp.adapter.ai:
    android.widget.ImageView orderimg -> a
    android.widget.TextView ordername -> b
    android.widget.TextView orderprice -> c
    android.widget.TextView freightprice -> d
    android.widget.TextView paidprice -> e
    android.widget.TextView number -> f
    android.widget.TextView checkorder -> g
    android.widget.TextView cancelpay -> h
    android.widget.TextView payment -> i
    com.example.secondapp.adapter.MyOrderAdapter this$0 -> j
com.example.secondapp.adapter.MyOrderAdapter2 -> com.example.secondapp.adapter.aj:
    java.util.List list -> a
    android.view.LayoutInflater inflater -> b
    android.content.Context context -> c
    java.lang.String uid -> e
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener animateFirstListener -> f
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void showMyDialog(int) -> a
com.example.secondapp.adapter.MyOrderAdapter2$1 -> com.example.secondapp.adapter.ak:
    com.example.secondapp.adapter.MyOrderAdapter2 this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.MyOrderAdapter2$2 -> com.example.secondapp.adapter.al:
    com.example.secondapp.adapter.MyOrderAdapter2 this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.MyOrderAdapter2$3 -> com.example.secondapp.adapter.am:
    com.example.secondapp.adapter.MyOrderAdapter2 this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.adapter.MyOrderAdapter2$4 -> com.example.secondapp.adapter.an:
    com.example.secondapp.adapter.MyOrderAdapter2 this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.adapter.MyOrderAdapter2$Holder -> com.example.secondapp.adapter.ao:
    android.widget.ImageView orderimg -> a
    android.widget.TextView ordername -> b
    android.widget.TextView orderprice -> c
    android.widget.TextView freightprice -> d
    android.widget.TextView paidprice -> e
    android.widget.TextView number -> f
    android.widget.TextView checkorder -> g
    android.widget.TextView cancelpay -> h
    android.widget.TextView payment -> i
    com.example.secondapp.adapter.MyOrderAdapter2 this$0 -> j
com.example.secondapp.adapter.MyOrderAdapter3 -> com.example.secondapp.adapter.ap:
    java.util.List list -> a
    android.view.LayoutInflater inflater -> b
    android.content.Context context -> c
    java.lang.String qq -> d
    java.lang.String uid -> g
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener animateFirstListener -> h
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> e
    android.os.Handler handler -> f
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void contactSeller(int) -> a
    void showMyDialog(int) -> b
    java.lang.String access$0(com.example.secondapp.adapter.MyOrderAdapter3) -> a
com.example.secondapp.adapter.MyOrderAdapter3$1 -> com.example.secondapp.adapter.aq:
    com.example.secondapp.adapter.MyOrderAdapter3 this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.adapter.MyOrderAdapter3$2 -> com.example.secondapp.adapter.ar:
    com.example.secondapp.adapter.MyOrderAdapter3 this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.MyOrderAdapter3$3 -> com.example.secondapp.adapter.as:
    com.example.secondapp.adapter.MyOrderAdapter3 this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.MyOrderAdapter3$4 -> com.example.secondapp.adapter.at:
    com.example.secondapp.adapter.MyOrderAdapter3 this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.adapter.MyOrderAdapter3$5 -> com.example.secondapp.adapter.au:
    com.example.secondapp.adapter.MyOrderAdapter3 this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.adapter.MyOrderAdapter3$6 -> com.example.secondapp.adapter.av:
    com.example.secondapp.adapter.MyOrderAdapter3 this$0 -> a
    int val$position -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.adapter.MyOrderAdapter3$6$1 -> com.example.secondapp.adapter.aw:
    com.example.secondapp.adapter.MyOrderAdapter3$6 this$1 -> a
com.example.secondapp.adapter.MyOrderAdapter3$Holder -> com.example.secondapp.adapter.ax:
    android.widget.ImageView orderimg -> a
    android.widget.TextView ordername -> b
    android.widget.TextView orderprice -> c
    android.widget.TextView freightprice -> d
    android.widget.TextView paidprice -> e
    android.widget.TextView number -> f
    android.widget.TextView checkorder -> g
    android.widget.TextView cancelpay -> h
    android.widget.TextView payment -> i
    com.example.secondapp.adapter.MyOrderAdapter3 this$0 -> j
com.example.secondapp.adapter.MyOrderAdapter4 -> com.example.secondapp.adapter.ay:
    java.util.List list -> a
    android.view.LayoutInflater inflater -> b
    android.content.Context context -> c
    java.lang.String uid -> e
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener animateFirstListener -> f
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void showMyDialog(int) -> a
    java.lang.String access$0(com.example.secondapp.adapter.MyOrderAdapter4) -> a
com.example.secondapp.adapter.MyOrderAdapter4$1 -> com.example.secondapp.adapter.az:
    com.example.secondapp.adapter.MyOrderAdapter4 this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.MyOrderAdapter4$2 -> com.example.secondapp.adapter.ba:
    com.example.secondapp.adapter.MyOrderAdapter4 this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.MyOrderAdapter4$3 -> com.example.secondapp.adapter.bb:
    com.example.secondapp.adapter.MyOrderAdapter4 this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.adapter.MyOrderAdapter4$4 -> com.example.secondapp.adapter.bc:
    com.example.secondapp.adapter.MyOrderAdapter4 this$0 -> a
    int val$position -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.adapter.MyOrderAdapter4$4$1 -> com.example.secondapp.adapter.bd:
    com.example.secondapp.adapter.MyOrderAdapter4$4 this$1 -> a
com.example.secondapp.adapter.MyOrderAdapter4$Holder -> com.example.secondapp.adapter.be:
    android.widget.ImageView orderimg -> a
    android.widget.TextView ordername -> b
    android.widget.TextView orderprice -> c
    android.widget.TextView freightprice -> d
    android.widget.TextView paidprice -> e
    android.widget.TextView number -> f
    android.widget.TextView checkorder -> g
    android.widget.TextView cancelpay -> h
    android.widget.TextView payment -> i
    com.example.secondapp.adapter.MyOrderAdapter4 this$0 -> j
com.example.secondapp.adapter.OnClickContentItemListener -> com.example.secondapp.adapter.bf:
    void onClickContentItem(int,int,java.lang.Object) -> a
com.example.secondapp.adapter.SearchHistoryAdapter -> com.example.secondapp.adapter.bg:
    java.util.List list -> a
    android.view.LayoutInflater inflater -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.example.secondapp.adapter.SearchHistoryAdapter$Holder -> com.example.secondapp.adapter.bh:
    android.widget.TextView searchname -> a
    com.example.secondapp.adapter.SearchHistoryAdapter this$0 -> b
com.example.secondapp.adapter.SearchHistoryAdapter$SearchHistoryBean -> com.example.secondapp.adapter.bi:
    java.lang.String searchname -> a
com.example.secondapp.adapter.ShoppingCartAdapter -> com.example.secondapp.adapter.bj:
    java.util.List list -> a
    android.view.LayoutInflater inflater -> b
    android.content.Context context -> c
    double totalall -> d
    double UnitPrice -> e
    int flag -> f
    int countall -> g
    java.lang.String uid -> h
    com.example.secondapp.adapter.OnClickContentItemListener onClickContentItemListener -> i
    void setOnClickContentItemListener(com.example.secondapp.adapter.OnClickContentItemListener) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.example.secondapp.adapter.OnClickContentItemListener access$0(com.example.secondapp.adapter.ShoppingCartAdapter) -> a
com.example.secondapp.adapter.ShoppingCartAdapter$1 -> com.example.secondapp.adapter.bk:
    com.example.secondapp.adapter.ShoppingCartAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.ShoppingCartAdapter$2 -> com.example.secondapp.adapter.bl:
    com.example.secondapp.adapter.ShoppingCartAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.ShoppingCartAdapter$3 -> com.example.secondapp.adapter.bm:
    com.example.secondapp.adapter.ShoppingCartAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.ShoppingCartAdapter$Holder -> com.example.secondapp.adapter.bn:
    android.widget.ImageView scpic -> a
    android.widget.TextView scdescribe -> b
    android.widget.TextView scpri -> c
    android.widget.TextView sccount -> d
    android.widget.TextView total -> e
    android.widget.TextView plus -> f
    android.widget.TextView minus -> g
    android.widget.ImageView deletered -> h
    com.example.secondapp.adapter.ShoppingCartAdapter this$0 -> i
com.example.secondapp.adapter.ViewPagerAdapter -> com.example.secondapp.adapter.ViewPagerAdapter:
    com.example.secondapp.adapter.ViewPagerAdapter$ViewHolder holder -> b
    com.example.secondapp.adapter.OnClickContentItemListener onClickContentItemListener -> c
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> a
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener animateFirstListener -> d
    java.util.List mPaths -> e
    android.content.Context mContext -> f
    void setOnClickContentItemListener(com.example.secondapp.adapter.OnClickContentItemListener) -> a
    void change(java.util.List) -> a
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    com.example.secondapp.adapter.OnClickContentItemListener access$0(com.example.secondapp.adapter.ViewPagerAdapter) -> a
com.example.secondapp.adapter.ViewPagerAdapter$1 -> com.example.secondapp.adapter.bo:
    com.example.secondapp.adapter.ViewPagerAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.example.secondapp.adapter.ViewPagerAdapter$ViewHolder -> com.example.secondapp.adapter.bp:
    android.widget.ImageView iv -> a
    com.example.secondapp.adapter.ViewPagerAdapter this$0 -> b
com.example.secondapp.base.ActivityTack -> com.example.secondapp.base.a:
    java.util.List activityList -> a
    com.example.secondapp.base.ActivityTack tack -> b
    com.example.secondapp.base.ActivityTack getInstanse() -> a
    void addActivity(android.app.Activity) -> a
    void removeActivity(android.app.Activity) -> b
    void popActivity(android.app.Activity) -> c
    void popUntilActivity(java.lang.Class[]) -> a
com.example.secondapp.base.BaseActivity -> com.example.secondapp.base.BaseActivity:
    android.app.NotificationManager notificationManager -> z
    int mScreenWidth -> A
    int mScreenHeight -> B
    void onCreate(android.os.Bundle) -> onCreate
    com.example.secondapp.SecondApplication getMyApp() -> l
    void save(java.lang.String,java.lang.Object) -> a
    com.android.volley.RequestQueue getRequestQueue() -> m
    com.google.gson.Gson getGson() -> n
    android.content.SharedPreferences getSp() -> o
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    void showMsg(android.content.Context,java.lang.String) -> b
com.example.secondapp.base.BaseFragment -> com.example.secondapp.base.BaseFragment:
    void onCreate(android.os.Bundle) -> onCreate
com.example.secondapp.base.MyBaseFragment -> com.example.secondapp.base.MyBaseFragment:
    com.example.secondapp.SecondApplication getMyApp() -> a
    com.google.gson.Gson getGson() -> b
    android.content.SharedPreferences getSp() -> c
com.example.secondapp.bean.AdressBean -> com.example.secondapp.bean.AdressBean:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String adress -> adress
    java.lang.String phonenumber -> phonenumber
    int id -> id
    int state -> state
com.example.secondapp.bean.ClassBean -> com.example.secondapp.bean.ClassBean:
    long serialVersionUID -> serialVersionUID
    int typeid -> typeid
    java.lang.String typelogo -> typelogo
    java.lang.String typename -> typename
    java.lang.String example -> example
com.example.secondapp.bean.EvaluationBean -> com.example.secondapp.bean.EvaluationBean:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    java.lang.String date -> date
    java.lang.String evaluation -> evaluation
    int grade -> grade
com.example.secondapp.bean.FruitBean -> com.example.secondapp.bean.FruitBean:
    long serialVersionUID -> serialVersionUID
    int product_id -> product_id
    java.lang.String product_name -> product_name
    java.lang.String community_id -> community_id
    java.lang.String shop_id -> shop_id
    java.lang.String type_id -> type_id
    java.lang.String product_pic -> product_pic
    java.lang.String product_pic1 -> product_pic1
    java.lang.String product_pic2 -> product_pic2
    java.lang.String product_pic3 -> product_pic3
    java.lang.String buy_numbers -> buy_numbers
    java.lang.String is_discount -> is_discount
    java.lang.String is_tuangou -> is_tuangou
    java.lang.String price_tuangou -> price_tuangou
    java.lang.String price -> price
    java.lang.String info -> info
    java.lang.String discount -> discount
    java.lang.String tuangou_numbers -> tuangou_numbers
    java.lang.String unit -> unit
    java.lang.String dateline -> dateline
    java.lang.String is_open -> is_open
    java.lang.String is_num -> is_num
    java.lang.String delivery_type -> delivery_type
    java.lang.String pay_type -> pay_type
    java.lang.String product_audit -> product_audit
    java.lang.String type_name -> type_name
    java.lang.String uid -> uid
    java.lang.String type_logo -> type_logo
    java.lang.String example -> example
    java.lang.String countNum -> countNum
    java.util.List reply -> reply
    java.lang.String getCountNum() -> getCountNum
    void setCountNum(java.lang.String) -> setCountNum
    java.lang.String getProduct_name() -> getProduct_name
    void setProduct_name(java.lang.String) -> setProduct_name
    java.util.List getReply() -> getReply
    void setReply(java.util.List) -> setReply
    long getSerialVersionUID() -> getSerialVersionUID
    int getProduct_id() -> getProduct_id
    void setProduct_id(int) -> setProduct_id
    java.lang.String getCommunity_id() -> getCommunity_id
    void setCommunity_id(java.lang.String) -> setCommunity_id
    java.lang.String getShop_id() -> getShop_id
    void setShop_id(java.lang.String) -> setShop_id
    java.lang.String getType_id() -> getType_id
    void setType_id(java.lang.String) -> setType_id
    java.lang.String getProduct_pic() -> getProduct_pic
    void setProduct_pic(java.lang.String) -> setProduct_pic
    java.lang.String getProduct_pic1() -> getProduct_pic1
    void setProduct_pic1(java.lang.String) -> setProduct_pic1
    java.lang.String getProduct_pic2() -> getProduct_pic2
    void setProduct_pic2(java.lang.String) -> setProduct_pic2
    java.lang.String getProduct_pic3() -> getProduct_pic3
    void setProduct_pic3(java.lang.String) -> setProduct_pic3
    java.lang.String getBuy_numbers() -> getBuy_numbers
    void setBuy_numbers(java.lang.String) -> setBuy_numbers
    java.lang.String getIs_discount() -> getIs_discount
    void setIs_discount(java.lang.String) -> setIs_discount
    java.lang.String getIs_tuangou() -> getIs_tuangou
    void setIs_tuangou(java.lang.String) -> setIs_tuangou
    java.lang.String getPrice_tuangou() -> getPrice_tuangou
    void setPrice_tuangou(java.lang.String) -> setPrice_tuangou
    java.lang.String getPrice() -> getPrice
    void setPrice(java.lang.String) -> setPrice
    java.lang.String getInfo() -> getInfo
    void setInfo(java.lang.String) -> setInfo
    java.lang.String getDiscount() -> getDiscount
    void setDiscount(java.lang.String) -> setDiscount
    java.lang.String getTuangou_numbers() -> getTuangou_numbers
    void setTuangou_numbers(java.lang.String) -> setTuangou_numbers
    java.lang.String getUnit() -> getUnit
    void setUnit(java.lang.String) -> setUnit
    java.lang.String getDateline() -> getDateline
    void setDateline(java.lang.String) -> setDateline
    java.lang.String getIs_open() -> getIs_open
    void setIs_open(java.lang.String) -> setIs_open
    java.lang.String getIs_num() -> getIs_num
    void setIs_num(java.lang.String) -> setIs_num
    java.lang.String getDelivery_type() -> getDelivery_type
    void setDelivery_type(java.lang.String) -> setDelivery_type
    java.lang.String getPay_type() -> getPay_type
    void setPay_type(java.lang.String) -> setPay_type
    java.lang.String getProduct_audit() -> getProduct_audit
    void setProduct_audit(java.lang.String) -> setProduct_audit
    java.lang.String getType_name() -> getType_name
    void setType_name(java.lang.String) -> setType_name
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
    java.lang.String getType_logo() -> getType_logo
    void setType_logo(java.lang.String) -> setType_logo
    java.lang.String getExample() -> getExample
    void setExample(java.lang.String) -> setExample
com.example.secondapp.bean.ImgTextBean -> com.example.secondapp.bean.ImgTextBean:
    long serialVersionUID -> serialVersionUID
    java.lang.String imgid -> imgid
com.example.secondapp.bean.MyOrderBean -> com.example.secondapp.bean.MyOrderBean:
    java.lang.String id -> id
    java.lang.String order_no -> order_no
    java.lang.String user_id -> user_id
    java.lang.String pay_type -> pay_type
    java.lang.String distribution -> distribution
    java.lang.String status -> status
    java.lang.String accept_name -> accept_name
    java.lang.String postcode -> postcode
    java.lang.String telephone -> telephone
    java.lang.String country -> country
    java.lang.String province -> province
    java.lang.String city -> city
    java.lang.String area -> area
    java.lang.String address -> address
    java.lang.String mobile -> mobile
    java.lang.String payable_amount -> payable_amount
    java.lang.String real_amount -> real_amount
    java.lang.String payable_freight -> payable_freight
    java.lang.String real_freight -> real_freight
    java.lang.String pay_time -> pay_time
    java.lang.String send_time -> send_time
    java.lang.String create_time -> create_time
    java.lang.String completion_time -> completion_time
    java.lang.String invoice -> invoice
    java.lang.String postscript -> postscript
    java.lang.String note -> note
    java.lang.String if_del -> if_del
    java.lang.String insured -> insured
    java.lang.String if_insured -> if_insured
    java.lang.String pay_fee -> pay_fee
    java.lang.String invoice_title -> invoice_title
    java.lang.String taxes -> taxes
    java.lang.String promotions -> promotions
    java.lang.String discount -> discount
    java.lang.String order_amount -> order_amount
    java.lang.String prop -> prop
    java.lang.String accept_time -> accept_time
    java.lang.String exp -> exp
    java.lang.String point -> point
    java.lang.String type -> type
    java.lang.String trade_no -> trade_no
    java.lang.String takeself -> takeself
    java.lang.String order_id -> order_id
    java.lang.String goods_id -> goods_id
    java.lang.String img -> img
    java.lang.String product_id -> product_id
    java.lang.String goods_price -> goods_price
    java.lang.String real_price -> real_price
    java.lang.String goods_nums -> goods_nums
    java.lang.String goods_weight -> goods_weight
    java.lang.String goods_array -> goods_array
    java.lang.String is_send -> is_send
    java.lang.String is_checkout -> is_checkout
    java.lang.String delivery_id -> delivery_id
    java.util.List goods_data -> goods_data
    java.util.List getGoods_data() -> getGoods_data
    void setGoods_data(java.util.List) -> setGoods_data
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getOrder_no() -> getOrder_no
    void setOrder_no(java.lang.String) -> setOrder_no
    java.lang.String getUser_id() -> getUser_id
    void setUser_id(java.lang.String) -> setUser_id
    java.lang.String getPay_type() -> getPay_type
    void setPay_type(java.lang.String) -> setPay_type
    java.lang.String getDistribution() -> getDistribution
    void setDistribution(java.lang.String) -> setDistribution
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    java.lang.String getAccept_name() -> getAccept_name
    void setAccept_name(java.lang.String) -> setAccept_name
    java.lang.String getPostcode() -> getPostcode
    void setPostcode(java.lang.String) -> setPostcode
    java.lang.String getTelephone() -> getTelephone
    void setTelephone(java.lang.String) -> setTelephone
    java.lang.String getCountry() -> getCountry
    void setCountry(java.lang.String) -> setCountry
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getArea() -> getArea
    void setArea(java.lang.String) -> setArea
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
    java.lang.String getMobile() -> getMobile
    void setMobile(java.lang.String) -> setMobile
    java.lang.String getPayable_amount() -> getPayable_amount
    void setPayable_amount(java.lang.String) -> setPayable_amount
    java.lang.String getReal_amount() -> getReal_amount
    void setReal_amount(java.lang.String) -> setReal_amount
    java.lang.String getPayable_freight() -> getPayable_freight
    void setPayable_freight(java.lang.String) -> setPayable_freight
    java.lang.String getReal_freight() -> getReal_freight
    void setReal_freight(java.lang.String) -> setReal_freight
    java.lang.String getPay_time() -> getPay_time
    void setPay_time(java.lang.String) -> setPay_time
    java.lang.String getSend_time() -> getSend_time
    void setSend_time(java.lang.String) -> setSend_time
    java.lang.String getCreate_time() -> getCreate_time
    void setCreate_time(java.lang.String) -> setCreate_time
    java.lang.String getCompletion_time() -> getCompletion_time
    void setCompletion_time(java.lang.String) -> setCompletion_time
    java.lang.String getInvoice() -> getInvoice
    void setInvoice(java.lang.String) -> setInvoice
    java.lang.String getPostscript() -> getPostscript
    void setPostscript(java.lang.String) -> setPostscript
    java.lang.String getNote() -> getNote
    void setNote(java.lang.String) -> setNote
    java.lang.String getIf_del() -> getIf_del
    void setIf_del(java.lang.String) -> setIf_del
    java.lang.String getInsured() -> getInsured
    void setInsured(java.lang.String) -> setInsured
    java.lang.String getIf_insured() -> getIf_insured
    void setIf_insured(java.lang.String) -> setIf_insured
    java.lang.String getPay_fee() -> getPay_fee
    void setPay_fee(java.lang.String) -> setPay_fee
    java.lang.String getInvoice_title() -> getInvoice_title
    void setInvoice_title(java.lang.String) -> setInvoice_title
    java.lang.String getTaxes() -> getTaxes
    void setTaxes(java.lang.String) -> setTaxes
    java.lang.String getPromotions() -> getPromotions
    void setPromotions(java.lang.String) -> setPromotions
    java.lang.String getDiscount() -> getDiscount
    void setDiscount(java.lang.String) -> setDiscount
    java.lang.String getOrder_amount() -> getOrder_amount
    void setOrder_amount(java.lang.String) -> setOrder_amount
    java.lang.String getProp() -> getProp
    void setProp(java.lang.String) -> setProp
    java.lang.String getAccept_time() -> getAccept_time
    void setAccept_time(java.lang.String) -> setAccept_time
    java.lang.String getExp() -> getExp
    void setExp(java.lang.String) -> setExp
    java.lang.String getPoint() -> getPoint
    void setPoint(java.lang.String) -> setPoint
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.lang.String getTrade_no() -> getTrade_no
    void setTrade_no(java.lang.String) -> setTrade_no
    java.lang.String getTakeself() -> getTakeself
    void setTakeself(java.lang.String) -> setTakeself
    java.lang.String getOrder_id() -> getOrder_id
    void setOrder_id(java.lang.String) -> setOrder_id
    java.lang.String getGoods_id() -> getGoods_id
    void setGoods_id(java.lang.String) -> setGoods_id
    java.lang.String getImg() -> getImg
    void setImg(java.lang.String) -> setImg
    java.lang.String getProduct_id() -> getProduct_id
    void setProduct_id(java.lang.String) -> setProduct_id
    java.lang.String getGoods_price() -> getGoods_price
    void setGoods_price(java.lang.String) -> setGoods_price
    java.lang.String getReal_price() -> getReal_price
    void setReal_price(java.lang.String) -> setReal_price
    java.lang.String getGoods_nums() -> getGoods_nums
    void setGoods_nums(java.lang.String) -> setGoods_nums
    java.lang.String getGoods_weight() -> getGoods_weight
    void setGoods_weight(java.lang.String) -> setGoods_weight
    java.lang.String getGoods_array() -> getGoods_array
    void setGoods_array(java.lang.String) -> setGoods_array
    java.lang.String getIs_send() -> getIs_send
    void setIs_send(java.lang.String) -> setIs_send
    java.lang.String getIs_checkout() -> getIs_checkout
    void setIs_checkout(java.lang.String) -> setIs_checkout
    java.lang.String getDelivery_id() -> getDelivery_id
    void setDelivery_id(java.lang.String) -> setDelivery_id
com.example.secondapp.bean.OrderGoods -> com.example.secondapp.bean.OrderGoods:
    java.lang.String goods_no -> goods_no
    java.lang.String product_id -> product_id
    java.lang.String product_name -> product_name
    java.lang.String img -> img
    java.lang.String order_id -> order_id
    java.lang.String goods_weight -> goods_weight
    java.lang.String shop_name -> shop_name
    java.lang.String is_checkout -> is_checkout
    java.lang.String is_send -> is_send
    java.lang.String delivery_id -> delivery_id
    java.lang.String real_price -> real_price
    java.lang.String id -> id
    java.lang.String goods_price -> goods_price
    java.lang.String goods_id -> goods_id
    java.lang.String goods_nums -> goods_nums
    java.lang.String getGoods_no() -> getGoods_no
    void setGoods_no(java.lang.String) -> setGoods_no
    java.lang.String getProduct_id() -> getProduct_id
    void setProduct_id(java.lang.String) -> setProduct_id
    java.lang.String getProduct_name() -> getProduct_name
    void setProduct_name(java.lang.String) -> setProduct_name
    java.lang.String getImg() -> getImg
    void setImg(java.lang.String) -> setImg
    java.lang.String getOrder_id() -> getOrder_id
    void setOrder_id(java.lang.String) -> setOrder_id
    java.lang.String getGoods_weight() -> getGoods_weight
    void setGoods_weight(java.lang.String) -> setGoods_weight
    java.lang.String getShop_name() -> getShop_name
    void setShop_name(java.lang.String) -> setShop_name
    java.lang.String getIs_checkout() -> getIs_checkout
    void setIs_checkout(java.lang.String) -> setIs_checkout
    java.lang.String getIs_send() -> getIs_send
    void setIs_send(java.lang.String) -> setIs_send
    java.lang.String getDelivery_id() -> getDelivery_id
    void setDelivery_id(java.lang.String) -> setDelivery_id
    java.lang.String getReal_price() -> getReal_price
    void setReal_price(java.lang.String) -> setReal_price
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getGoods_price() -> getGoods_price
    void setGoods_price(java.lang.String) -> setGoods_price
    java.lang.String getGoods_id() -> getGoods_id
    void setGoods_id(java.lang.String) -> setGoods_id
    java.lang.String getGoods_nums() -> getGoods_nums
    void setGoods_nums(java.lang.String) -> setGoods_nums
com.example.secondapp.bean.OrderId -> com.example.secondapp.bean.OrderId:
    long serialVersionUID -> serialVersionUID
    int orderid -> orderid
com.example.secondapp.bean.Response -> com.example.secondapp.bean.Response:
    long serialVersionUID -> serialVersionUID
    int code -> code
com.example.secondapp.bean.ShoppingcartBean -> com.example.secondapp.bean.ShoppingcartBean:
    long serialVersionUID -> serialVersionUID
    java.lang.String fruitimage -> fruitimage
    java.lang.String fruitname -> fruitname
    java.lang.String fruitprice -> fruitprice
    int fruitcount -> fruitcount
    int shopid -> shopid
    int cartid -> cartid
    int fruitid -> fruitid
    java.lang.String dateline -> dateline
com.example.secondapp.bean.User -> com.example.secondapp.bean.User:
    long serialVersionUID -> serialVersionUID
    int uid -> uid
    java.lang.String username -> username
    java.lang.String mobile -> mobile
com.example.secondapp.broadcastreceiver.NetCheckReceiver -> com.example.secondapp.broadcastreceiver.NetCheckReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.example.secondapp.city.CharacterParser -> com.example.secondapp.city.a:
    int[] pyvalue -> b
    java.lang.String[] pystr -> a
    java.lang.StringBuilder buffer -> c
    com.example.secondapp.city.CharacterParser characterParser -> d
    com.example.secondapp.city.CharacterParser getInstance() -> a
    int getChsAscii(java.lang.String) -> c
    java.lang.String convert(java.lang.String) -> a
    java.lang.String getSelling(java.lang.String) -> b
com.example.secondapp.city.CityList -> com.example.secondapp.city.CityList:
    com.example.secondapp.city.CityList$ListAdapter adapter -> a
    android.widget.ListView mCityLit -> b
    android.widget.TextView overlay -> c
    java.util.HashMap alphaIndexer -> d
    com.example.secondapp.city.CityList$OverlayThread overlayThread -> e
    java.lang.String current_city_str -> f
    java.util.List mCityNames -> g
    com.example.secondapp.city.SideBar sideBar -> h
    android.widget.TextView dialog -> i
    com.example.secondapp.city.CharacterParser characterParser -> j
    com.example.secondapp.city.PinyinComparator pinyinComparator -> k
    android.os.Handler handler -> l
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> b
    void getCityNames() -> a
    void onClick(android.view.View) -> onClick
    void setAdapter(java.util.List) -> a
    java.util.List access$0(com.example.secondapp.city.CityList) -> a
    com.example.secondapp.city.CharacterParser access$1(com.example.secondapp.city.CityList) -> b
    void access$2(com.example.secondapp.city.CityList,java.util.List) -> a
    android.widget.ListView access$3(com.example.secondapp.city.CityList) -> c
    android.widget.TextView access$5(com.example.secondapp.city.CityList) -> d
    android.os.Handler access$7(com.example.secondapp.city.CityList) -> e
    com.example.secondapp.city.CityList$ListAdapter access$9(com.example.secondapp.city.CityList) -> f
    void access$10(com.example.secondapp.city.CityList,java.util.HashMap) -> a
    void access$11(com.example.secondapp.city.CityList,com.example.secondapp.city.CityList$OverlayThread) -> a
com.example.secondapp.city.CityList$1 -> com.example.secondapp.city.b:
    com.example.secondapp.city.CityList this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.city.CityList$2 -> com.example.secondapp.city.c:
    com.example.secondapp.city.CityList this$0 -> a
    void onTouchingLetterChanged(java.lang.String) -> a
com.example.secondapp.city.CityList$3 -> com.example.secondapp.city.d:
    com.example.secondapp.city.CityList this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.city.CityList$CityListOnItemClick -> com.example.secondapp.city.e:
    com.example.secondapp.city.CityList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.secondapp.city.CityList$ListAdapter -> com.example.secondapp.city.f:
    android.view.LayoutInflater inflater -> b
    java.util.List list -> c
    com.example.secondapp.city.CityList this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getSectionForPosition(int) -> getSectionForPosition
    int getPositionForSection(int) -> getPositionForSection
    java.lang.Object[] getSections() -> getSections
com.example.secondapp.city.CityList$ListAdapter$ViewHolder -> com.example.secondapp.city.g:
    android.widget.TextView alpha -> a
    android.widget.TextView name -> b
    com.example.secondapp.city.CityList$ListAdapter this$1 -> c
com.example.secondapp.city.CityList$OverlayThread -> com.example.secondapp.city.h:
    com.example.secondapp.city.CityList this$0 -> a
    void run() -> run
com.example.secondapp.city.PinyinComparator -> com.example.secondapp.city.i:
    int compare(com.example.secondapp.model.SortModel,com.example.secondapp.model.SortModel) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.example.secondapp.city.SideBar -> com.example.secondapp.city.SideBar:
    com.example.secondapp.city.SideBar$OnTouchingLetterChangedListener onTouchingLetterChangedListener -> b
    java.lang.String[] b -> a
    int choose -> c
    android.graphics.Paint paint -> d
    android.widget.TextView mTextDialog -> e
    void setTextView(android.widget.TextView) -> setTextView
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void setOnTouchingLetterChangedListener(com.example.secondapp.city.SideBar$OnTouchingLetterChangedListener) -> setOnTouchingLetterChangedListener
com.example.secondapp.city.SideBar$OnTouchingLetterChangedListener -> com.example.secondapp.city.j:
    void onTouchingLetterChanged(java.lang.String) -> a
com.example.secondapp.clearcache.DataCleanManager -> com.example.secondapp.a.a:
    void cleanDatabases(android.content.Context) -> a
    void deleteFilesByDirectory(java.io.File) -> a
com.example.secondapp.data.AdSlide -> com.example.secondapp.data.AdSlide:
    java.lang.String id -> id
    java.lang.String url -> url
    java.lang.String dateline -> dateline
    java.lang.String imgurl -> imgurl
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getDateline() -> getDateline
    void setDateline(java.lang.String) -> setDateline
    java.lang.String getImgurl() -> getImgurl
    void setImgurl(java.lang.String) -> setImgurl
com.example.secondapp.data.CityLocatData -> com.example.secondapp.data.CityLocatData:
    java.lang.String code -> code
    java.lang.String msg -> msg
    java.util.List data -> data
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    java.lang.String getMsg() -> getMsg
    void setMsg(java.lang.String) -> setMsg
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
com.example.secondapp.data.FruitBeanData -> com.example.secondapp.data.FruitBeanData:
    java.lang.String code -> code
    java.lang.String msg -> msg
    java.util.List data -> data
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    java.lang.String getMsg() -> getMsg
    void setMsg(java.lang.String) -> setMsg
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
com.example.secondapp.data.FruitBeanSingleData -> com.example.secondapp.data.FruitBeanSingleData:
    java.lang.String code -> code
    java.lang.String msg -> msg
    com.example.secondapp.bean.FruitBean data -> data
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    java.lang.String getMsg() -> getMsg
    void setMsg(java.lang.String) -> setMsg
    com.example.secondapp.bean.FruitBean getData() -> getData
    void setData(com.example.secondapp.bean.FruitBean) -> setData
com.example.secondapp.data.MyOrderBeanData -> com.example.secondapp.data.MyOrderBeanData:
    java.lang.String code -> code
    java.lang.String msg -> msg
    java.util.List data -> data
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    java.lang.String getMsg() -> getMsg
    void setMsg(java.lang.String) -> setMsg
    java.util.List getData() -> getData
    void setData(java.util.List) -> setData
com.example.secondapp.data.Order -> com.example.secondapp.data.Order:
    java.lang.String ordersn -> ordersn
    java.lang.String pay_money -> pay_money
    java.lang.String pay_way -> pay_way
    java.lang.String getOrdersn() -> getOrdersn
    void setOrdersn(java.lang.String) -> setOrdersn
    java.lang.String getPay_money() -> getPay_money
    void setPay_money(java.lang.String) -> setPay_money
    java.lang.String getPay_way() -> getPay_way
    void setPay_way(java.lang.String) -> setPay_way
com.example.secondapp.data.OrderDATA -> com.example.secondapp.data.OrderDATA:
    java.lang.String code -> code
    java.lang.String msg -> msg
    com.example.secondapp.data.Order data -> data
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    java.lang.String getMsg() -> getMsg
    void setMsg(java.lang.String) -> setMsg
    com.example.secondapp.data.Order getData() -> getData
    void setData(com.example.secondapp.data.Order) -> setData
com.example.secondapp.data.UploadData -> com.example.secondapp.data.UploadData:
    java.lang.String code -> code
    java.lang.String msg -> msg
    java.lang.String data -> data
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    java.lang.String getMsg() -> getMsg
    void setMsg(java.lang.String) -> setMsg
    java.lang.String getData() -> getData
    void setData(java.lang.String) -> setData
com.example.secondapp.fragment.BottomFragment -> com.example.secondapp.fragment.BottomFragment:
    android.widget.LinearLayout mainpage -> a
    android.widget.LinearLayout recommend -> b
    android.widget.LinearLayout classification -> c
    android.widget.LinearLayout personalcenter -> d
    android.widget.ImageView mainpage_image -> e
    android.widget.ImageView recommend_image -> f
    android.widget.ImageView classification_image -> g
    android.widget.ImageView personalcenter_image -> h
    android.widget.TextView mainpage_text -> i
    android.widget.TextView recommend_text -> j
    android.widget.TextView classification_text -> k
    android.widget.TextView personalcenter_text -> l
    android.view.View view -> m
    com.example.secondapp.fragment.BottomFragment$OnBottomClickListener bottomClickListener -> n
    android.widget.LinearLayout linearLayout -> o
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setBottomClickListener(com.example.secondapp.fragment.BottomFragment$OnBottomClickListener) -> a
    void setSelected(int) -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.fragment.BottomFragment$OnBottomClickListener -> com.example.secondapp.fragment.a:
    void onBottomClick(android.view.View,int) -> a
com.example.secondapp.fragment.ClassificationFragment -> com.example.secondapp.fragment.ClassificationFragment:
    android.view.View view -> a
    android.widget.ListView classlv -> b
    java.util.List list -> c
    com.example.secondapp.adapter.ClassAdapter adapter -> d
    android.app.ProgressDialog progressDialog -> f
    android.os.Handler handler -> e
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void getdata() -> d
    android.app.ProgressDialog access$0(com.example.secondapp.fragment.ClassificationFragment) -> a
com.example.secondapp.fragment.ClassificationFragment$1 -> com.example.secondapp.fragment.b:
    com.example.secondapp.fragment.ClassificationFragment this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.fragment.ClassificationFragment$2 -> com.example.secondapp.fragment.c:
    com.example.secondapp.fragment.ClassificationFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.secondapp.fragment.ClassificationFragment$3 -> com.example.secondapp.fragment.d:
    com.example.secondapp.fragment.ClassificationFragment this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.fragment.MainPageFragment -> com.example.secondapp.fragment.MainPageFragment:
    com.example.secondapp.view.PullToRefreshView pulltorefreshscrollview -> g
    android.view.View view -> a
    android.widget.ListView listView -> b
    java.util.List list -> h
    com.example.secondapp.handler.ImageHandler handler2 -> c
    com.example.secondapp.adapter.FruitShowListViewAdapter adapter -> i
    android.support.v4.view.ViewPager viewpager -> j
    com.example.secondapp.adapter.ViewPagerAdapter adapterAd -> k
    android.widget.LinearLayout viewGroup -> l
    android.widget.ImageView dot -> m
    android.widget.ImageView[] dots -> n
    java.lang.Runnable runnable -> o
    int autoChangeTime -> p
    java.util.List lists -> q
    android.app.ProgressDialog progressDialog -> r
    android.os.Handler handler -> d
    android.support.v4.view.ViewPager$OnPageChangeListener myOnPageChangeListener -> e
    android.view.View$OnClickListener onClick -> f
    android.os.Handler viewHandler -> s
    android.content.BroadcastReceiver mBroadcastReceiver -> t
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void getadv() -> d
    void onFooterRefresh(com.example.secondapp.view.PullToRefreshView) -> a
    void onHeaderRefresh(com.example.secondapp.view.PullToRefreshView) -> b
    void getListViewData() -> e
    void initViewPager() -> h
    void initDot() -> i
    void setCurView(int) -> a
    void setCurDot(int) -> b
    void onClickContentItem(int,int,java.lang.Object) -> a
    void registerBoradcastReceiver() -> f
    void onDestroy() -> onDestroy
    java.util.List access$0(com.example.secondapp.fragment.MainPageFragment) -> a
    com.example.secondapp.adapter.FruitShowListViewAdapter access$1() -> g
    void access$2(com.example.secondapp.fragment.MainPageFragment) -> b
    void access$3(com.example.secondapp.fragment.MainPageFragment,int) -> a
    android.os.Handler access$4(com.example.secondapp.fragment.MainPageFragment) -> c
    java.lang.Runnable access$5(com.example.secondapp.fragment.MainPageFragment) -> d
    int access$6(com.example.secondapp.fragment.MainPageFragment) -> e
    void access$7(com.example.secondapp.fragment.MainPageFragment,int) -> b
    android.app.ProgressDialog access$8(com.example.secondapp.fragment.MainPageFragment) -> f
    java.util.List access$9(com.example.secondapp.fragment.MainPageFragment) -> g
    com.example.secondapp.view.PullToRefreshView access$10(com.example.secondapp.fragment.MainPageFragment) -> h
    android.support.v4.view.ViewPager access$11(com.example.secondapp.fragment.MainPageFragment) -> i
    com.example.secondapp.adapter.ViewPagerAdapter access$12(com.example.secondapp.fragment.MainPageFragment) -> j
com.example.secondapp.fragment.MainPageFragment$1 -> com.example.secondapp.fragment.e:
    com.example.secondapp.fragment.MainPageFragment this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.fragment.MainPageFragment$10 -> com.example.secondapp.fragment.f:
    com.example.secondapp.fragment.MainPageFragment this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.fragment.MainPageFragment$11 -> com.example.secondapp.fragment.g:
    com.example.secondapp.fragment.MainPageFragment this$0 -> a
    void run() -> run
com.example.secondapp.fragment.MainPageFragment$2 -> com.example.secondapp.fragment.h:
    com.example.secondapp.fragment.MainPageFragment this$0 -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.example.secondapp.fragment.MainPageFragment$3 -> com.example.secondapp.fragment.i:
    com.example.secondapp.fragment.MainPageFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.fragment.MainPageFragment$4 -> com.example.secondapp.fragment.j:
    com.example.secondapp.fragment.MainPageFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.fragment.MainPageFragment$5 -> com.example.secondapp.fragment.k:
    com.example.secondapp.fragment.MainPageFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.example.secondapp.fragment.MainPageFragment$6 -> com.example.secondapp.fragment.l:
    com.example.secondapp.fragment.MainPageFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.secondapp.fragment.MainPageFragment$7 -> com.example.secondapp.fragment.m:
    com.example.secondapp.fragment.MainPageFragment this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.fragment.MainPageFragment$8 -> com.example.secondapp.fragment.n:
    com.example.secondapp.fragment.MainPageFragment this$0 -> a
    void run() -> run
com.example.secondapp.fragment.MainPageFragment$9 -> com.example.secondapp.fragment.o:
    com.example.secondapp.fragment.MainPageFragment this$0 -> a
    void run() -> run
com.example.secondapp.fragment.PersonalcenterFragment -> com.example.secondapp.fragment.PersonalcenterFragment:
    android.view.View view -> b
    android.widget.TextView logon -> c
    android.widget.TextView register -> d
    android.widget.ImageView imagehead -> e
    android.widget.LinearLayout collection -> f
    android.widget.LinearLayout personalshoppingcart -> g
    android.widget.RelativeLayout lin1 -> h
    android.widget.RelativeLayout lin2 -> i
    android.widget.RelativeLayout lin3 -> j
    android.widget.RelativeLayout lin4 -> k
    android.widget.RelativeLayout personalsetting -> l
    android.widget.RelativeLayout personalorder -> m
    android.widget.RelativeLayout personalhelpandfeddback -> n
    android.widget.RelativeLayout personalcenter -> o
    android.widget.RelativeLayout personalcenter2 -> p
    android.widget.RelativeLayout pushmsg -> q
    android.widget.TextView username -> r
    android.widget.FrameLayout frame1 -> s
    android.widget.FrameLayout frame2 -> t
    android.widget.FrameLayout frame3 -> u
    android.widget.FrameLayout frame4 -> v
    android.widget.TextView number1 -> w
    android.widget.TextView number2 -> x
    android.widget.TextView number3 -> y
    android.widget.TextView number4 -> z
    android.widget.ImageView logonimage2 -> A
    android.widget.LinearLayout statusbar -> B
    android.widget.TextView money -> C
    java.lang.String moneyget -> D
    int myorder1 -> E
    int myorder2 -> F
    int myorder3 -> G
    int myorder4 -> H
    android.os.Handler handler -> I
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener animateFirstListener -> J
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> a
    android.content.BroadcastReceiver mBroadcastReceiver -> K
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void getMoney() -> e
    void onResume() -> onResume
    void registerBoradcastReceiver() -> d
    void onDestroy() -> onDestroy
    android.widget.TextView access$0(com.example.secondapp.fragment.PersonalcenterFragment) -> a
    java.lang.String access$1(com.example.secondapp.fragment.PersonalcenterFragment) -> b
    android.widget.ImageView access$2(com.example.secondapp.fragment.PersonalcenterFragment) -> c
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener access$3(com.example.secondapp.fragment.PersonalcenterFragment) -> d
    void access$4(com.example.secondapp.fragment.PersonalcenterFragment,java.lang.String) -> a
    android.os.Handler access$5(com.example.secondapp.fragment.PersonalcenterFragment) -> e
com.example.secondapp.fragment.PersonalcenterFragment$1 -> com.example.secondapp.fragment.p:
    com.example.secondapp.fragment.PersonalcenterFragment this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.fragment.PersonalcenterFragment$2 -> com.example.secondapp.fragment.q:
    com.example.secondapp.fragment.PersonalcenterFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.example.secondapp.fragment.PersonalcenterFragment$4 -> com.example.secondapp.fragment.r:
    com.example.secondapp.fragment.PersonalcenterFragment this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.fragment.PublicTitleFragment -> com.example.secondapp.fragment.PublicTitleFragment:
    android.view.View view -> i
    android.widget.TextView title -> a
    int getchange -> b
    android.widget.LinearLayout magnifer -> c
    android.widget.RelativeLayout shoppingcart -> d
    int numbercount -> j
    android.widget.ImageView numberimage -> e
    android.widget.TextView select_city -> f
    android.widget.TextView number -> g
    android.widget.FrameLayout frameimg -> h
    android.content.BroadcastReceiver mBroadcastReceiver -> k
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void registerBoradcastReceiver() -> d
    void onDestroy() -> onDestroy
    int access$0() -> e
com.example.secondapp.fragment.PublicTitleFragment$1 -> com.example.secondapp.fragment.s:
    com.example.secondapp.fragment.PublicTitleFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.example.secondapp.fragment.PublicTitleFragment$2 -> com.example.secondapp.fragment.t:
    com.example.secondapp.fragment.PublicTitleFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.fragment.PublicTitleFragment$3 -> com.example.secondapp.fragment.u:
    com.example.secondapp.fragment.PublicTitleFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.example.secondapp.fragment.RecommendFragment -> com.example.secondapp.fragment.RecommendFragment:
    android.view.View view -> a
    com.example.secondapp.view.DecoratorViewPager viewPager -> b
    java.util.List list -> c
    android.support.v4.app.Fragment rmd1 -> d
    android.support.v4.app.Fragment rmd2 -> e
    android.support.v4.app.Fragment rmd3 -> f
    android.support.v4.app.Fragment rmd4 -> g
    android.widget.RadioButton text1 -> h
    android.widget.RadioButton text2 -> i
    android.widget.RadioButton text3 -> j
    android.widget.RadioButton text4 -> k
    android.widget.ImageView mIv -> m
    int off -> n
    int ll -> o
    int dhBmpW -> p
    android.widget.RadioGroup radiogroup -> l
    int position -> q
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView(android.view.View,android.view.LayoutInflater) -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    void setSelected(int) -> a
    int access$0() -> d
    int access$1() -> e
    android.widget.ImageView access$2(com.example.secondapp.fragment.RecommendFragment) -> a
    void access$3(int) -> b
com.example.secondapp.fragment.RecommendFragment$1 -> com.example.secondapp.fragment.v:
    com.example.secondapp.fragment.RecommendFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.example.secondapp.fragment.RecommendFragment$2 -> com.example.secondapp.fragment.w:
    com.example.secondapp.fragment.RecommendFragment this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.example.secondapp.fragment.RecommendFragment$myViewPagerAdapter -> com.example.secondapp.fragment.x:
    java.util.List list -> a
    com.example.secondapp.fragment.RecommendFragment this$0 -> b
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
com.example.secondapp.fragment.test -> com.example.secondapp.fragment.test:
    android.view.View view -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.example.secondapp.fragmentdetail.MOFragment1 -> com.example.secondapp.fragmentdetail.MOFragment1:
    android.view.View view -> a
    com.example.secondapp.view.PullToRefreshLV lv -> b
    java.util.List list -> c
    com.example.secondapp.adapter.MyOrderAdapter adapter -> d
    android.widget.RelativeLayout orderbotoom -> e
    int count1 -> i
    android.widget.TextView noorder -> f
    android.widget.TextView totalprice -> g
    double temp -> j
    android.os.Handler handler -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void getMOF1Data(int) -> a
    void onClickContentItem(int,int,java.lang.Object) -> a
    void access$0(int) -> b
    int access$1() -> d
com.example.secondapp.fragmentdetail.MOFragment1$1 -> com.example.secondapp.fragmentdetail.a:
    com.example.secondapp.fragmentdetail.MOFragment1 this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.fragmentdetail.MOFragment1$2 -> com.example.secondapp.fragmentdetail.b:
    com.example.secondapp.fragmentdetail.MOFragment1 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.secondapp.fragmentdetail.MOFragment1$3 -> com.example.secondapp.fragmentdetail.c:
    com.example.secondapp.fragmentdetail.MOFragment1 this$0 -> a
    void onRefresh() -> a
    com.example.secondapp.fragmentdetail.MOFragment1 access$0(com.example.secondapp.fragmentdetail.MOFragment1$3) -> a
com.example.secondapp.fragmentdetail.MOFragment1$3$1 -> com.example.secondapp.fragmentdetail.d:
    com.example.secondapp.fragmentdetail.MOFragment1$3 this$1 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.secondapp.fragmentdetail.MOFragment1$4 -> com.example.secondapp.fragmentdetail.e:
    com.example.secondapp.fragmentdetail.MOFragment1 this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.fragmentdetail.MOFragment2 -> com.example.secondapp.fragmentdetail.MOFragment2:
    android.view.View view -> a
    com.example.secondapp.view.PullToRefreshLV lv -> b
    java.util.List list -> c
    com.example.secondapp.adapter.MyOrderAdapter2 adapter -> d
    int count2 -> e
    android.widget.TextView noorder -> f
    android.os.Handler handler -> g
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void getMOF2Data(int) -> a
    void onClickContentItem(int,int,java.lang.Object) -> a
com.example.secondapp.fragmentdetail.MOFragment2$1 -> com.example.secondapp.fragmentdetail.f:
    com.example.secondapp.fragmentdetail.MOFragment2 this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.fragmentdetail.MOFragment2$2 -> com.example.secondapp.fragmentdetail.g:
    com.example.secondapp.fragmentdetail.MOFragment2 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.secondapp.fragmentdetail.MOFragment2$3 -> com.example.secondapp.fragmentdetail.h:
    com.example.secondapp.fragmentdetail.MOFragment2 this$0 -> a
    void onRefresh() -> a
    com.example.secondapp.fragmentdetail.MOFragment2 access$0(com.example.secondapp.fragmentdetail.MOFragment2$3) -> a
com.example.secondapp.fragmentdetail.MOFragment2$3$1 -> com.example.secondapp.fragmentdetail.i:
    com.example.secondapp.fragmentdetail.MOFragment2$3 this$1 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.secondapp.fragmentdetail.MOFragment2$4 -> com.example.secondapp.fragmentdetail.j:
    com.example.secondapp.fragmentdetail.MOFragment2 this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.fragmentdetail.MOFragment3 -> com.example.secondapp.fragmentdetail.MOFragment3:
    android.view.View view -> a
    com.example.secondapp.view.PullToRefreshLV lv -> b
    java.util.List list -> c
    com.example.secondapp.adapter.MyOrderAdapter3 adapter -> d
    int count3 -> e
    android.widget.TextView noorder -> f
    android.os.Handler handler -> g
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void getMOF3Data(int) -> a
    void onClickContentItem(int,int,java.lang.Object) -> a
com.example.secondapp.fragmentdetail.MOFragment3$1 -> com.example.secondapp.fragmentdetail.k:
    com.example.secondapp.fragmentdetail.MOFragment3 this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.fragmentdetail.MOFragment3$2 -> com.example.secondapp.fragmentdetail.l:
    com.example.secondapp.fragmentdetail.MOFragment3 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.secondapp.fragmentdetail.MOFragment3$3 -> com.example.secondapp.fragmentdetail.m:
    com.example.secondapp.fragmentdetail.MOFragment3 this$0 -> a
    void onRefresh() -> a
    com.example.secondapp.fragmentdetail.MOFragment3 access$0(com.example.secondapp.fragmentdetail.MOFragment3$3) -> a
com.example.secondapp.fragmentdetail.MOFragment3$3$1 -> com.example.secondapp.fragmentdetail.n:
    com.example.secondapp.fragmentdetail.MOFragment3$3 this$1 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.secondapp.fragmentdetail.MOFragment3$4 -> com.example.secondapp.fragmentdetail.o:
    com.example.secondapp.fragmentdetail.MOFragment3 this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.fragmentdetail.MOFragment4 -> com.example.secondapp.fragmentdetail.MOFragment4:
    android.view.View view -> a
    com.example.secondapp.view.PullToRefreshLV lv -> b
    java.util.List list -> c
    com.example.secondapp.adapter.MyOrderAdapter4 adapter -> d
    int count4 -> e
    android.widget.TextView noorder -> f
    android.widget.PopupWindow popupWindow -> j
    android.view.View viewpopup -> k
    android.widget.EditText evaluate -> l
    android.widget.TextView cancel -> m
    android.widget.TextView confirm -> n
    android.widget.RatingBar ratingbar -> o
    android.widget.TextView tt -> p
    int mScreenWidth -> g
    int mScreenHeight -> h
    android.os.Handler handler -> i
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void getMOF4Data(int) -> a
    void onClickContentItem(int,int,java.lang.Object) -> a
    void showPopupWindow() -> d
    void onClick(android.view.View) -> onClick
com.example.secondapp.fragmentdetail.MOFragment4$1 -> com.example.secondapp.fragmentdetail.p:
    com.example.secondapp.fragmentdetail.MOFragment4 this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.fragmentdetail.MOFragment4$2 -> com.example.secondapp.fragmentdetail.q:
    com.example.secondapp.fragmentdetail.MOFragment4 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.secondapp.fragmentdetail.MOFragment4$3 -> com.example.secondapp.fragmentdetail.r:
    com.example.secondapp.fragmentdetail.MOFragment4 this$0 -> a
    void onRefresh() -> a
    com.example.secondapp.fragmentdetail.MOFragment4 access$0(com.example.secondapp.fragmentdetail.MOFragment4$3) -> a
com.example.secondapp.fragmentdetail.MOFragment4$3$1 -> com.example.secondapp.fragmentdetail.s:
    com.example.secondapp.fragmentdetail.MOFragment4$3 this$1 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.secondapp.fragmentdetail.MOFragment4$4 -> com.example.secondapp.fragmentdetail.t:
    com.example.secondapp.fragmentdetail.MOFragment4 this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.fragmentdetail.MOFragment4$5 -> com.example.secondapp.fragmentdetail.u:
    com.example.secondapp.fragmentdetail.MOFragment4 this$0 -> a
    void onRatingChanged(android.widget.RatingBar,float,boolean) -> onRatingChanged
com.example.secondapp.fragmentdetail.RmdFragment1 -> com.example.secondapp.fragmentdetail.RmdFragment1:
    android.view.View view -> a
    com.example.secondapp.view.MyListViewUpDown listView -> b
    java.util.List list -> c
    com.example.secondapp.adapter.FruitShowListViewAdapter adapter -> d
    android.app.ProgressDialog progressDialog -> g
    android.widget.TextView nodata -> e
    android.os.Handler handler -> f
    android.content.BroadcastReceiver mBroadcastReceiver -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroyView() -> onDestroyView
    void getRF1Data() -> d
    void onLoad() -> e
    void onRefresh() -> f
    void registerBoradcastReceiver() -> g
    android.app.ProgressDialog access$0(com.example.secondapp.fragmentdetail.RmdFragment1) -> a
com.example.secondapp.fragmentdetail.RmdFragment1$1 -> com.example.secondapp.fragmentdetail.v:
    com.example.secondapp.fragmentdetail.RmdFragment1 this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.fragmentdetail.RmdFragment1$2 -> com.example.secondapp.fragmentdetail.w:
    com.example.secondapp.fragmentdetail.RmdFragment1 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.example.secondapp.fragmentdetail.RmdFragment1$3 -> com.example.secondapp.fragmentdetail.x:
    com.example.secondapp.fragmentdetail.RmdFragment1 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.secondapp.fragmentdetail.RmdFragment1$4 -> com.example.secondapp.fragmentdetail.y:
    com.example.secondapp.fragmentdetail.RmdFragment1 this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.fragmentdetail.RmdFragment1$5 -> com.example.secondapp.fragmentdetail.z:
    com.example.secondapp.fragmentdetail.RmdFragment1 this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.secondapp.fragmentdetail.RmdFragment1$6 -> com.example.secondapp.fragmentdetail.aa:
    com.example.secondapp.fragmentdetail.RmdFragment1 this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.secondapp.fragmentdetail.RmdFragment2 -> com.example.secondapp.fragmentdetail.RmdFragment2:
    android.view.View view -> a
    com.example.secondapp.view.MyListViewUpDown listView -> b
    java.util.List list -> c
    com.example.secondapp.adapter.FruitShowListViewAdapter adapter -> d
    android.app.ProgressDialog progressDialog -> g
    android.widget.TextView noData -> e
    android.os.Handler handler -> f
    android.content.BroadcastReceiver mBroadcastReceiver -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroyView() -> onDestroyView
    void getRF2Data() -> d
    void onLoad() -> e
    void onRefresh() -> f
    void registerBoradcastReceiver() -> g
    android.app.ProgressDialog access$0(com.example.secondapp.fragmentdetail.RmdFragment2) -> a
com.example.secondapp.fragmentdetail.RmdFragment2$1 -> com.example.secondapp.fragmentdetail.ab:
    com.example.secondapp.fragmentdetail.RmdFragment2 this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.fragmentdetail.RmdFragment2$2 -> com.example.secondapp.fragmentdetail.ac:
    com.example.secondapp.fragmentdetail.RmdFragment2 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.example.secondapp.fragmentdetail.RmdFragment2$3 -> com.example.secondapp.fragmentdetail.ad:
    com.example.secondapp.fragmentdetail.RmdFragment2 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.secondapp.fragmentdetail.RmdFragment2$4 -> com.example.secondapp.fragmentdetail.ae:
    com.example.secondapp.fragmentdetail.RmdFragment2 this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
    void onFailure(java.lang.String,int,java.lang.String) -> a
com.example.secondapp.fragmentdetail.RmdFragment2$5 -> com.example.secondapp.fragmentdetail.af:
    com.example.secondapp.fragmentdetail.RmdFragment2 this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.secondapp.fragmentdetail.RmdFragment2$6 -> com.example.secondapp.fragmentdetail.ag:
    com.example.secondapp.fragmentdetail.RmdFragment2 this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.secondapp.fragmentdetail.RmdFragment3 -> com.example.secondapp.fragmentdetail.RmdFragment3:
    android.view.View view -> a
    com.example.secondapp.view.MyListViewUpDown listView -> b
    java.util.List list -> c
    com.example.secondapp.adapter.FruitShowListViewAdapter adapter -> d
    boolean flag -> g
    android.app.ProgressDialog progressDialog -> h
    android.widget.TextView noData -> e
    android.os.Handler handler -> f
    android.content.BroadcastReceiver mBroadcastReceiver -> i
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroyView() -> onDestroyView
    void getRF3Data() -> d
    void onLoad() -> e
    void onRefresh() -> f
    void registerBoradcastReceiver() -> g
    boolean access$0(com.example.secondapp.fragmentdetail.RmdFragment3) -> a
    void access$1(com.example.secondapp.fragmentdetail.RmdFragment3,boolean) -> a
    android.app.ProgressDialog access$2(com.example.secondapp.fragmentdetail.RmdFragment3) -> b
com.example.secondapp.fragmentdetail.RmdFragment3$1 -> com.example.secondapp.fragmentdetail.ah:
    com.example.secondapp.fragmentdetail.RmdFragment3 this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.fragmentdetail.RmdFragment3$2 -> com.example.secondapp.fragmentdetail.ai:
    com.example.secondapp.fragmentdetail.RmdFragment3 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.example.secondapp.fragmentdetail.RmdFragment3$3 -> com.example.secondapp.fragmentdetail.aj:
    com.example.secondapp.fragmentdetail.RmdFragment3 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.secondapp.fragmentdetail.RmdFragment3$4 -> com.example.secondapp.fragmentdetail.ak:
    com.example.secondapp.fragmentdetail.RmdFragment3 this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
    void onFailure(java.lang.String,int,java.lang.String) -> a
com.example.secondapp.fragmentdetail.RmdFragment3$5 -> com.example.secondapp.fragmentdetail.al:
    com.example.secondapp.fragmentdetail.RmdFragment3 this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.secondapp.fragmentdetail.RmdFragment3$6 -> com.example.secondapp.fragmentdetail.am:
    com.example.secondapp.fragmentdetail.RmdFragment3 this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.secondapp.fragmentdetail.RmdFragment4 -> com.example.secondapp.fragmentdetail.RmdFragment4:
    android.view.View view -> a
    com.example.secondapp.view.MyListViewUpDown listView -> b
    java.util.List list -> c
    com.example.secondapp.adapter.FruitShowListViewAdapter adapter -> d
    android.view.View view2 -> e
    android.app.ProgressDialog progressDialog -> h
    android.widget.TextView noData -> f
    android.os.Handler handler -> g
    android.content.BroadcastReceiver mBroadcastReceiver -> i
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroyView() -> onDestroyView
    void getRF4Data() -> d
    void onLoad() -> e
    void onRefresh() -> f
    void registerBoradcastReceiver() -> g
    android.app.ProgressDialog access$0(com.example.secondapp.fragmentdetail.RmdFragment4) -> a
com.example.secondapp.fragmentdetail.RmdFragment4$1 -> com.example.secondapp.fragmentdetail.an:
    com.example.secondapp.fragmentdetail.RmdFragment4 this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.fragmentdetail.RmdFragment4$2 -> com.example.secondapp.fragmentdetail.ao:
    com.example.secondapp.fragmentdetail.RmdFragment4 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.example.secondapp.fragmentdetail.RmdFragment4$3 -> com.example.secondapp.fragmentdetail.ap:
    com.example.secondapp.fragmentdetail.RmdFragment4 this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.example.secondapp.fragmentdetail.RmdFragment4$4 -> com.example.secondapp.fragmentdetail.aq:
    com.example.secondapp.fragmentdetail.RmdFragment4 this$0 -> a
    void onSuccess(org.json.JSONObject) -> a
com.example.secondapp.fragmentdetail.RmdFragment4$5 -> com.example.secondapp.fragmentdetail.ar:
    com.example.secondapp.fragmentdetail.RmdFragment4 this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.secondapp.fragmentdetail.RmdFragment4$6 -> com.example.secondapp.fragmentdetail.as:
    com.example.secondapp.fragmentdetail.RmdFragment4 this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.secondapp.handler.ImageHandler -> com.example.secondapp.b.a:
    java.lang.ref.WeakReference weakReference -> a
    int currentItem -> b
    void handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.http.AsyncHttpClient -> com.example.secondapp.c.a:
    java.lang.String JSESSIONID -> a
    com.example.secondapp.http.AsyncHttpClient asyncHttpClient -> b
    java.util.ArrayList runningHttpClientThreads -> c
    java.util.ArrayList queuedHttpClientThreads -> d
    com.example.secondapp.http.AsyncHttpClient getInstance() -> a
    void get(java.lang.String,java.lang.String,com.example.secondapp.http.HttpParams,com.example.secondapp.http.AsyncHttpResponseHandler) -> a
    void post(java.lang.String,java.lang.String,com.example.secondapp.http.HttpParams,com.example.secondapp.http.AsyncHttpResponseHandler) -> b
    void onComplete(com.example.secondapp.http.AsyncHttpClient$HttpClientThread) -> a
    java.lang.String access$0() -> b
    void access$1(java.lang.String) -> a
com.example.secondapp.http.AsyncHttpClient$HttpClientThread -> com.example.secondapp.c.b:
    org.apache.http.impl.client.DefaultHttpClient httpClient -> a
    java.net.HttpURLConnection httpURLConnection -> b
    java.lang.String serverAddress -> d
    java.lang.String url -> e
    com.example.secondapp.http.HttpParams params -> f
    com.example.secondapp.http.AsyncHttpResponseHandler asyncHttpResponseHandler -> g
    int requestMethod -> h
    int statusCode -> i
    boolean isSuccess -> j
    java.lang.String errorMsg -> k
    boolean isRunning -> l
    com.example.secondapp.http.OnCompleteListener listener -> m
    com.example.secondapp.http.AsyncHttpClient this$0 -> c
    void run() -> run
    java.lang.String getGetUrl(java.lang.String,java.lang.String,com.example.secondapp.http.HttpParams) -> a
    void doGet(java.lang.String,java.lang.String,com.example.secondapp.http.HttpParams,com.example.secondapp.http.AsyncHttpResponseHandler) -> a
    java.lang.String getResponse(java.lang.String) -> a
    java.lang.String getPostUrl(java.lang.String,java.lang.String) -> a
    void doPost(java.lang.String,java.lang.String,com.example.secondapp.http.HttpParams,com.example.secondapp.http.AsyncHttpResponseHandler) -> b
    java.lang.String postResponse(java.lang.String,com.example.secondapp.http.HttpParams) -> a
    void doUpload(java.lang.String,java.lang.String,com.example.secondapp.http.HttpParams,com.example.secondapp.http.AsyncHttpResponseHandler) -> c
    java.lang.String upload(java.lang.String,com.example.secondapp.http.HttpParams,com.example.secondapp.http.AsyncHttpResponseHandler) -> a
    java.lang.String getMyPostParamsString(com.example.secondapp.http.HttpParams) -> a
    boolean access$0(com.example.secondapp.http.AsyncHttpClient$HttpClientThread) -> a
com.example.secondapp.http.AsyncHttpResponseHandler -> com.example.secondapp.c.c:
    void onSuccess(org.json.JSONObject) -> a
    void onSuccess(org.json.JSONArray) -> a
    void onSuccess(java.lang.String) -> a
    void onFailure(java.lang.String,int,java.lang.String) -> a
    void onStartUpload() -> a
    void onUploadProgress(int) -> a
    void onUploadCompleted() -> b
com.example.secondapp.http.HttpClientUtils -> com.example.secondapp.c.d:
    com.example.secondapp.http.AsyncHttpClient asyncHttpClient -> a
    com.example.secondapp.http.AsyncHttpClient getInstance() -> a
com.example.secondapp.http.HttpParams -> com.example.secondapp.c.e:
    java.util.ArrayList params -> a
    void put(java.lang.String,int) -> a
    void put(java.lang.String,double) -> a
    void put(java.lang.String,java.lang.String) -> a
    int getParamsCount() -> a
    com.example.secondapp.http.Param get(int) -> a
com.example.secondapp.http.Logg -> com.example.secondapp.c.f:
    void d(java.lang.String,java.lang.String) -> a
    void i(java.lang.String,java.lang.String) -> b
    void w(java.lang.String,java.lang.String) -> c
    void e(java.lang.String,java.lang.String) -> d
    void out(java.lang.String) -> a
com.example.secondapp.http.OnCompleteListener -> com.example.secondapp.c.g:
    void onComplete(com.example.secondapp.http.AsyncHttpClient$HttpClientThread) -> a
com.example.secondapp.http.Param -> com.example.secondapp.c.h:
    java.lang.String key -> a
    java.lang.Object vObject -> b
com.example.secondapp.model.CityModel -> com.example.secondapp.model.CityModel:
    java.lang.String name -> name
    java.util.List districtList -> districtList
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.util.List getDistrictList() -> getDistrictList
    void setDistrictList(java.util.List) -> setDistrictList
    java.lang.String toString() -> toString
com.example.secondapp.model.DistrictModel -> com.example.secondapp.model.DistrictModel:
    java.lang.String name -> name
    java.lang.String zipcode -> zipcode
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getZipcode() -> getZipcode
    void setZipcode(java.lang.String) -> setZipcode
    java.lang.String toString() -> toString
com.example.secondapp.model.OrdersForm -> com.example.secondapp.model.OrdersForm:
    java.util.Map list -> list
    java.util.Map getList() -> getList
    void setList(java.util.Map) -> setList
com.example.secondapp.model.ProvinceModel -> com.example.secondapp.model.ProvinceModel:
    java.lang.String name -> name
    java.util.List cityList -> cityList
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.util.List getCityList() -> getCityList
    void setCityList(java.util.List) -> setCityList
    java.lang.String toString() -> toString
com.example.secondapp.model.ReplyObj -> com.example.secondapp.model.ReplyObj:
    java.lang.String id -> id
    java.lang.String uid -> uid
    java.lang.String product_id -> product_id
    java.lang.String order_id -> order_id
    java.lang.String content -> content
    java.lang.String grade -> grade
    java.lang.String dateline -> dateline
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
    java.lang.String getProduct_id() -> getProduct_id
    void setProduct_id(java.lang.String) -> setProduct_id
    java.lang.String getOrder_id() -> getOrder_id
    void setOrder_id(java.lang.String) -> setOrder_id
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getGrade() -> getGrade
    void setGrade(java.lang.String) -> setGrade
    java.lang.String getDateline() -> getDateline
    void setDateline(java.lang.String) -> setDateline
com.example.secondapp.model.SortModel -> com.example.secondapp.model.SortModel:
    java.lang.String id -> id
    java.lang.String city_id -> city_id
    java.lang.String city_name -> city_name
    java.lang.String lat -> lat
    java.lang.String lng -> lng
    java.lang.String first -> first
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getCity_id() -> getCity_id
    void setCity_id(java.lang.String) -> setCity_id
    java.lang.String getCity_name() -> getCity_name
    void setCity_name(java.lang.String) -> setCity_name
    java.lang.String getLat() -> getLat
    void setLat(java.lang.String) -> setLat
    java.lang.String getLng() -> getLng
    void setLng(java.lang.String) -> setLng
    java.lang.String getFirst() -> getFirst
    void setFirst(java.lang.String) -> setFirst
com.example.secondapp.model.XmlParserHandler -> com.example.secondapp.model.XmlParserHandler:
    java.util.List provinceList -> provinceList
    com.example.secondapp.model.ProvinceModel provinceModel -> provinceModel
    com.example.secondapp.model.CityModel cityModel -> cityModel
    com.example.secondapp.model.DistrictModel districtModel -> districtModel
    java.util.List getDataList() -> getDataList
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.example.secondapp.networkbitmap.BitmapCache -> com.example.secondapp.d.a:
    android.support.v4.util.LruCache mBitmapCache -> a
    void addBitmap(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap getBitmap(java.lang.String) -> a
com.example.secondapp.networkbitmap.BitmapCache$1 -> com.example.secondapp.d.b:
    com.example.secondapp.networkbitmap.BitmapCache this$0 -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> a
    void entryRemoved(boolean,java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
com.example.secondapp.networkbitmap.BitmapDownloader -> com.example.secondapp.d.c:
    java.lang.String TAG -> a
    int DEFAULT_DOWNLOAD_NUM -> b
    java.lang.String DEFAULT_PATH_PIC -> c
    com.example.secondapp.networkbitmap.BitmapDownloader mBitmapDowloader -> d
    com.example.secondapp.networkbitmap.BitmapCache mBitmapCache -> e
    java.util.ArrayList mQueuedDownloads -> f
    java.util.ArrayList mRunningDownloads -> g
    java.util.HashMap mDuplicateDownloads -> h
    int mMaxDownloads -> i
    android.graphics.drawable.Drawable mErrorDrawable -> j
    android.graphics.drawable.Drawable mInProgressDrawable -> k
    int mErrorDrawableResource -> l
    int mInProgressDrawableResource -> m
    boolean mAnimateImageAppearance -> n
    boolean mAnimateImageAppearanceAfterDownload -> o
    com.example.secondapp.networkbitmap.BitmapDownloader$BitmapLoaderCallback mCallback -> p
    int[] $SWITCH_TABLE$com$example$secondapp$networkbitmap$BitmapDownloader$AnimateAppearance -> q
    com.example.secondapp.networkbitmap.BitmapDownloader getInstance(int) -> a
    void setup(int) -> b
    void setCachePath(java.lang.String) -> a
    void setAnimateImageAppearance(com.example.secondapp.networkbitmap.BitmapDownloader$AnimateAppearance) -> a
    void download(java.lang.String,java.lang.String,android.widget.ImageView) -> a
    com.example.secondapp.networkbitmap.BitmapCache access$0(com.example.secondapp.networkbitmap.BitmapDownloader) -> a
    java.lang.String access$1() -> a
    java.util.ArrayList access$2(com.example.secondapp.networkbitmap.BitmapDownloader) -> b
    java.util.ArrayList access$3(com.example.secondapp.networkbitmap.BitmapDownloader) -> c
    int access$4(com.example.secondapp.networkbitmap.BitmapDownloader) -> d
    java.lang.String access$5(com.example.secondapp.networkbitmap.BitmapDownloader) -> e
    void access$6(com.example.secondapp.networkbitmap.BitmapDownloader,java.lang.String) -> a
    boolean access$7(com.example.secondapp.networkbitmap.BitmapDownloader) -> f
    boolean access$8(com.example.secondapp.networkbitmap.BitmapDownloader) -> g
    com.example.secondapp.networkbitmap.BitmapDownloader$BitmapLoaderCallback access$9(com.example.secondapp.networkbitmap.BitmapDownloader) -> h
    java.util.HashMap access$10(com.example.secondapp.networkbitmap.BitmapDownloader) -> i
    int access$11(com.example.secondapp.networkbitmap.BitmapDownloader) -> j
    android.graphics.drawable.Drawable access$12(com.example.secondapp.networkbitmap.BitmapDownloader) -> k
    int access$13(com.example.secondapp.networkbitmap.BitmapDownloader) -> l
    android.graphics.drawable.Drawable access$14(com.example.secondapp.networkbitmap.BitmapDownloader) -> m
    int[] $SWITCH_TABLE$com$example$secondapp$networkbitmap$BitmapDownloader$AnimateAppearance() -> b
com.example.secondapp.networkbitmap.BitmapDownloader$AnimateAppearance -> com.example.secondapp.d.d:
    com.example.secondapp.networkbitmap.BitmapDownloader$AnimateAppearance ANIMATE_ALWAYS -> a
    com.example.secondapp.networkbitmap.BitmapDownloader$AnimateAppearance ANIMATE_AFTER_DOWNLOAD -> b
    com.example.secondapp.networkbitmap.BitmapDownloader$AnimateAppearance ANIMATE_NEVER -> c
    com.example.secondapp.networkbitmap.BitmapDownloader$AnimateAppearance[] ENUM$VALUES -> d
    com.example.secondapp.networkbitmap.BitmapDownloader$AnimateAppearance[] values() -> values
    com.example.secondapp.networkbitmap.BitmapDownloader$AnimateAppearance valueOf(java.lang.String) -> valueOf
com.example.secondapp.networkbitmap.BitmapDownloader$BitmapLoaderCallback -> com.example.secondapp.d.e:
    void onLoaded(android.widget.ImageView) -> a
com.example.secondapp.networkbitmap.BitmapDownloader$Download -> com.example.secondapp.d.f:
    java.lang.String mUrl -> b
    java.lang.ref.WeakReference mImageViewRef -> c
    com.example.secondapp.networkbitmap.BitmapDownloaderTask mBitmapDownloaderTask -> d
    com.example.secondapp.networkbitmap.BitmapLoaderTask mBitmapLoaderTask -> e
    boolean mIsCancelled -> f
    boolean mWasDownloaded -> g
    com.example.secondapp.networkbitmap.BitmapDownloader this$0 -> a
    com.example.secondapp.networkbitmap.BitmapDownloaderTask getBitmapDownloaderTask() -> a
    android.widget.ImageView getImageView() -> b
    java.lang.String getUrl() -> c
    void loadImage() -> d
    void doDownload() -> e
    boolean isDirExists(java.lang.String) -> a
    boolean isBeingDownloaded() -> l
    void loadFromDisk(android.widget.ImageView) -> a
    void cancel() -> m
    int indexOfDownloadWithDifferentURL() -> n
    boolean isQueuedForDownload() -> o
    int indexOfQueuedDownloadWithDifferentURL() -> p
    boolean isAnotherQueuedOrRunningWithSameUrl() -> q
    void loadDrawable(android.graphics.drawable.Drawable) -> a
    void loadDrawable(android.graphics.drawable.Drawable,boolean) -> a
    void onComplete() -> f
    void onError() -> g
    void loadErrorDrawable(android.widget.ImageView) -> b
    void loadInProgressDrawable(android.widget.ImageView) -> c
    void onCancel() -> h
    void notFound() -> i
    void loadBitmap(android.graphics.Bitmap) -> a
    void onLoadError() -> j
    void onLoadCancelled() -> k
    com.example.secondapp.networkbitmap.BitmapDownloader access$0(com.example.secondapp.networkbitmap.BitmapDownloader$Download) -> a
com.example.secondapp.networkbitmap.BitmapDownloader$Download$1 -> com.example.secondapp.d.g:
    com.example.secondapp.networkbitmap.BitmapDownloader$Download this$1 -> a
    void onEnded() -> a
com.example.secondapp.networkbitmap.BitmapDownloaderTask -> com.example.secondapp.d.h:
    java.lang.String TAG -> b
    java.lang.String mUrl -> a
    android.content.Context mContext -> c
    com.example.secondapp.networkbitmap.BitmapDownloaderTask$BitmapDownloadListener mListener -> d
    org.apache.http.client.methods.HttpGet mGetRequest -> e
    java.lang.String picPath -> f
    java.lang.Boolean doInBackground(java.lang.String[]) -> a
    void onCancelled() -> onCancelled
    void onPostExecute(java.lang.Boolean) -> a
    int resolveUrl() -> a
    java.lang.Boolean downloadBitmap() -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.secondapp.networkbitmap.BitmapDownloaderTask$BitmapDownloadListener -> com.example.secondapp.d.i:
    void onComplete() -> f
    void onError() -> g
    void onCancel() -> h
com.example.secondapp.networkbitmap.BitmapLoaderTask -> com.example.secondapp.d.j:
    java.lang.String TAG -> b
    java.lang.ref.WeakReference imageViewReference -> c
    android.content.Context mContext -> d
    com.example.secondapp.networkbitmap.BitmapLoaderTask$BitmapLoadListener mListener -> e
    java.lang.String mUrl -> a
    boolean mError -> f
    java.lang.String picPath -> g
    int mWidth -> h
    int mHeight -> i
    int defaultWidth -> j
    int defaultHeight -> k
    int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> a
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.example.secondapp.networkbitmap.BitmapLoaderTask$BitmapLoadListener -> com.example.secondapp.d.k:
    void notFound() -> i
    void loadBitmap(android.graphics.Bitmap) -> a
    void onLoadError() -> j
    void onLoadCancelled() -> k
com.example.secondapp.networkbitmap.BitmapTransitionDrawable -> com.example.secondapp.d.l:
    int mTransitionState -> a
    boolean mReverse -> b
    long mStartTimeMillis -> c
    int mFrom -> d
    int mTo -> e
    int mDuration -> f
    int mOriginalDuration -> g
    int mAlpha -> h
    boolean mCrossFade -> i
    com.example.secondapp.networkbitmap.BitmapTransitionDrawable$BitmapTransitionCallback mTransitionCallback -> j
    android.os.Handler mHandler -> k
    void startTransition(int) -> a
    void draw(android.graphics.Canvas) -> draw
    void setCrossFadeEnabled(boolean) -> a
    void setTransitionCallback(com.example.secondapp.networkbitmap.BitmapTransitionDrawable$BitmapTransitionCallback) -> a
    void onEnd() -> a
    com.example.secondapp.networkbitmap.BitmapTransitionDrawable$BitmapTransitionCallback access$0(com.example.secondapp.networkbitmap.BitmapTransitionDrawable) -> a
com.example.secondapp.networkbitmap.BitmapTransitionDrawable$2 -> com.example.secondapp.d.m:
    com.example.secondapp.networkbitmap.BitmapTransitionDrawable this$0 -> a
    void run() -> run
com.example.secondapp.networkbitmap.BitmapTransitionDrawable$BitmapTransitionCallback -> com.example.secondapp.d.n:
    void onEnded() -> a
com.example.secondapp.networkbitmap.BitmapUtil -> com.example.secondapp.d.o:
    com.example.secondapp.networkbitmap.BitmapDownloader mBitmapDownload -> a
    java.lang.String cachePath -> b
    com.example.secondapp.networkbitmap.BitmapDownloader getInstance() -> a
    void setCachePath(java.lang.String) -> a
    void createCachePath(java.lang.String) -> b
com.example.secondapp.networkbitmap.MD5 -> com.example.secondapp.d.p:
    java.lang.String md5(java.lang.String) -> a
com.example.secondapp.networkbitmap.SystemBase -> com.example.secondapp.d.q:
    java.lang.String SDCARDPATH -> a
    java.lang.String APP_CACHE_PATH -> b
    java.lang.String DATA_CACHE_PATH -> c
    java.lang.String IMAGE_CACHE_PATH -> d
    java.lang.String DOWN_LOAD_PATH -> e
com.example.secondapp.serviceId.CheckNetwork -> com.example.secondapp.e.a:
    void setNetworkMethod(android.content.Context) -> a
    boolean isNetworkAvailable(android.content.Context) -> b
com.example.secondapp.serviceId.CheckNetwork$1 -> com.example.secondapp.e.b:
    android.content.Context val$context -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.serviceId.CheckNetwork$2 -> com.example.secondapp.e.c:
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.serviceId.CountDownButtonHelper -> com.example.secondapp.e.d:
    android.os.CountDownTimer countDownTimer -> a
    com.example.secondapp.serviceId.CountDownButtonHelper$OnFinishListener listener -> b
    android.widget.Button button -> c
    void start(android.content.Context) -> a
    void setOnFinishListener(com.example.secondapp.serviceId.CountDownButtonHelper$OnFinishListener) -> a
    com.example.secondapp.serviceId.CountDownButtonHelper$OnFinishListener access$0(com.example.secondapp.serviceId.CountDownButtonHelper) -> a
com.example.secondapp.serviceId.CountDownButtonHelper$1 -> com.example.secondapp.e.e:
    com.example.secondapp.serviceId.CountDownButtonHelper this$0 -> a
    android.widget.Button val$button -> b
    java.lang.String val$defaultString -> c
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.example.secondapp.serviceId.CountDownButtonHelper$OnFinishListener -> com.example.secondapp.e.f:
    void finish() -> a
com.example.secondapp.serviceId.ServerId -> com.example.secondapp.e.g:
    java.lang.String serveradress -> a
    java.lang.String logonurl -> b
    java.lang.String checkshoppingcart -> c
    java.lang.String addshoppingcart -> d
    java.lang.String deleteshoppingcart -> e
    java.lang.String deleteallshoppingcart -> f
    java.lang.String modifyaccount -> g
    java.lang.String lastproduct -> h
    java.lang.String getmemberInfo -> i
    java.lang.String moneyPay -> j
    java.lang.String popularity -> k
    java.lang.String salesproduct -> l
    java.lang.String priceproduct -> m
    java.lang.String checkaddress -> n
    java.lang.String addaddress -> o
    java.lang.String getproductassess -> p
    java.lang.String topayment -> q
    java.lang.String toreceiving -> r
    java.lang.String toshipped -> s
    java.lang.String toevaluated -> t
    java.lang.String deletetopayment -> u
    java.lang.String cancelorder -> v
    java.lang.String deleteevaluated -> w
    java.lang.String getCollection -> x
    java.lang.String deleteCollection -> y
    java.lang.String addproductCollection -> z
    java.lang.String getProductDetails -> A
    java.lang.String producttype -> B
    java.lang.String getproducttype -> C
    java.lang.String updatePass -> D
    java.lang.String updatapass -> E
    java.lang.String getphonecode -> F
    java.lang.String getregister -> G
    java.lang.String getmobile -> H
    java.lang.String getmobilecode -> I
    java.lang.String getshopqq -> J
    java.lang.String toassess -> K
    java.lang.String likeproduct -> L
    java.lang.String cartnumber -> M
    java.lang.String getadv -> N
    java.lang.String getcover -> O
    java.lang.String getproducttypeprice -> P
    java.lang.String getproducttypeorder -> Q
    java.lang.String getdefaultadress -> R
    java.lang.String getPushMsg -> S
    java.lang.String update_personal_msg -> T
    java.lang.String get_order_by_type -> U
    java.lang.String set_order_by_type -> V
    java.lang.String get_city_list_url -> W
    java.lang.String notify_url -> X
    java.lang.String statue_url -> Y
com.example.secondapp.sharedprefernces.SharedPrefsUtil -> com.example.secondapp.f.a:
    void putValue(android.content.Context,java.lang.String,int) -> a
    int getValue(android.content.Context,java.lang.String,int) -> b
    java.lang.String getValue(android.content.Context,java.lang.String,java.lang.String) -> a
com.example.secondapp.upload.CommonUtil -> com.example.secondapp.g.a:
    com.android.volley.RequestQueue uploadRequestQueue -> a
    com.android.volley.RequestQueue getUploadRequestQueue(android.content.Context) -> a
    void addPutUploadFileRequest(android.content.Context,java.lang.String,java.util.Map,java.util.Map,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener,java.lang.Object) -> a
com.example.secondapp.upload.CommonUtil$1 -> com.example.secondapp.g.b:
    java.util.Map val$files -> a
    java.util.Map val$params -> b
    java.util.Map getFileUploads() -> a
    java.util.Map getStringUploads() -> b
com.example.secondapp.upload.MultiPartRequest -> com.example.secondapp.g.c:
    java.util.Map getFileUploads() -> a
    java.util.Map getStringUploads() -> b
com.example.secondapp.upload.MultiPartStack -> com.example.secondapp.g.d:
    java.lang.String TAG -> a
    org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map) -> performRequest
    void addHeaders(org.apache.http.client.methods.HttpUriRequest,java.util.Map) -> a
    org.apache.http.HttpResponse performMultiPartRequest(com.android.volley.Request,java.util.Map) -> a
    org.apache.http.client.methods.HttpUriRequest createMultiPartRequest(com.android.volley.Request,java.util.Map) -> b
    void setMultiPartBody(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,com.android.volley.Request) -> a
com.example.secondapp.upload.MultiPartStringRequest -> com.example.secondapp.g.e:
    com.android.volley.Response$Listener mListener -> a
    java.util.Map fileUploads -> b
    java.util.Map stringUploads -> c
    java.util.Map getFileUploads() -> a
    java.util.Map getStringUploads() -> b
    com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse) -> parseNetworkResponse
    void deliverResponse(java.lang.String) -> a
    java.lang.String getBodyContentType() -> getBodyContentType
    void deliverResponse(java.lang.Object) -> deliverResponse
com.example.secondapp.util.CompressPhotoUtil -> com.example.secondapp.h.a:
    java.lang.String saveBitmap2file(android.graphics.Bitmap,java.lang.String,java.io.File) -> a
com.example.secondapp.util.RelativeDateFormat -> com.example.secondapp.h.b:
    java.lang.String format(long) -> a
com.example.secondapp.util.StringUtil -> com.example.secondapp.h.c:
    boolean isJson(java.lang.String) -> a
    boolean isNullOrEmpty(java.lang.String) -> b
    boolean isOPen(android.content.Context) -> a
com.example.secondapp.versionupdate.ParseXmlService -> com.example.secondapp.i.a:
    java.util.HashMap parseXml(java.io.InputStream) -> a
com.example.secondapp.versionupdate.UpdateManager -> com.example.secondapp.i.b:
    java.util.HashMap mHashMap -> a
    java.lang.String mSavePath -> b
    int progress -> c
    boolean cancelUpdate -> d
    android.content.Context mContext -> e
    android.widget.ProgressBar mProgress -> f
    android.app.Dialog mDownloadDialog -> g
    android.os.Handler mHandler -> h
    void checkUpdate() -> a
    boolean isUpdate() -> c
    int getVersionCode(android.content.Context) -> a
    void showMyDialog() -> b
    void showDownloadDialog() -> d
    void downloadApk() -> e
    void installApk() -> f
    android.widget.ProgressBar access$0(com.example.secondapp.versionupdate.UpdateManager) -> a
    int access$1(com.example.secondapp.versionupdate.UpdateManager) -> b
    void access$2(com.example.secondapp.versionupdate.UpdateManager) -> c
    void access$3(com.example.secondapp.versionupdate.UpdateManager,java.lang.String) -> a
    java.lang.String access$4(com.example.secondapp.versionupdate.UpdateManager) -> d
    void access$5(com.example.secondapp.versionupdate.UpdateManager,int) -> a
    android.os.Handler access$6(com.example.secondapp.versionupdate.UpdateManager) -> e
    boolean access$7(com.example.secondapp.versionupdate.UpdateManager) -> f
    android.app.Dialog access$8(com.example.secondapp.versionupdate.UpdateManager) -> g
    void access$9(com.example.secondapp.versionupdate.UpdateManager) -> h
    void access$10(com.example.secondapp.versionupdate.UpdateManager,boolean) -> a
com.example.secondapp.versionupdate.UpdateManager$1 -> com.example.secondapp.i.c:
    com.example.secondapp.versionupdate.UpdateManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.example.secondapp.versionupdate.UpdateManager$2 -> com.example.secondapp.i.d:
    com.example.secondapp.versionupdate.UpdateManager this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.versionupdate.UpdateManager$3 -> com.example.secondapp.i.e:
    com.example.secondapp.versionupdate.UpdateManager this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.versionupdate.UpdateManager$6 -> com.example.secondapp.i.f:
    com.example.secondapp.versionupdate.UpdateManager this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.example.secondapp.versionupdate.UpdateManager$downloadApkThread -> com.example.secondapp.i.g:
    com.example.secondapp.versionupdate.UpdateManager this$0 -> a
    void run() -> run
com.example.secondapp.view.CircleImageView -> com.example.secondapp.view.CircleImageView:
    android.widget.ImageView$ScaleType SCALE_TYPE -> a
    android.graphics.Bitmap$Config BITMAP_CONFIG -> b
    android.graphics.RectF mDrawableRect -> c
    android.graphics.RectF mBorderRect -> d
    android.graphics.Matrix mShaderMatrix -> e
    android.graphics.Paint mBitmapPaint -> f
    android.graphics.Paint mBorderPaint -> g
    int mBorderColor -> h
    int mBorderWidth -> i
    android.graphics.Bitmap mBitmap -> j
    android.graphics.BitmapShader mBitmapShader -> k
    int mBitmapWidth -> l
    int mBitmapHeight -> m
    float mDrawableRadius -> n
    float mBorderRadius -> o
    boolean mReady -> p
    boolean mSetupPending -> q
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    int getBorderColor() -> getBorderColor
    void setBorderColor(int) -> setBorderColor
    int getBorderWidth() -> getBorderWidth
    void setBorderWidth(int) -> setBorderWidth
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    android.graphics.Bitmap getBitmapFromDrawable(android.graphics.drawable.Drawable) -> a
    void setup() -> a
    void updateShaderMatrix() -> b
com.example.secondapp.view.DecoratorViewPager -> com.example.secondapp.view.DecoratorViewPager:
    android.view.ViewGroup parent -> a
    void setNestedpParent(android.view.ViewGroup) -> setNestedpParent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.example.secondapp.view.MyDialog -> com.example.secondapp.view.a:
    android.widget.ImageView icon -> a
    android.widget.TextView title -> b
    android.widget.ImageView divider -> c
    android.widget.TextView message -> d
    android.widget.FrameLayout custom -> e
    android.widget.Button button1 -> f
    android.widget.Button button3 -> g
    android.widget.Button button2 -> h
    android.widget.LinearLayout buttonPanel -> i
    boolean isButton1Show -> j
    boolean isButton2Show -> k
    boolean isButton3Show -> l
    android.content.Context context -> m
    android.content.DialogInterface$OnClickListener onClickListener1 -> n
    android.content.DialogInterface$OnClickListener onClickListener3 -> o
    android.content.DialogInterface$OnClickListener onClickListener2 -> p
    int iconRes -> q
    android.graphics.drawable.Drawable iconDrawable -> r
    java.lang.CharSequence titleText -> s
    java.lang.CharSequence messageText -> t
    java.lang.CharSequence button1Text -> u
    java.lang.CharSequence button3Text -> v
    java.lang.CharSequence button2Text -> w
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void setTitle(int) -> setTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setMessage(java.lang.CharSequence) -> a
    void setMessage(int) -> a
    void setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> a
    void setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> a
    void setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> b
    void setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> b
com.example.secondapp.view.MyListViewUpDown -> com.example.secondapp.view.MyListViewUpDown:
    android.view.LayoutInflater inflater -> a
    android.widget.LinearLayout headerView -> b
    android.widget.LinearLayout footerView -> c
    android.widget.TextView lvHeaderTipsTv -> d
    android.widget.TextView lvHeaderLastUpdatedTv -> e
    android.widget.ImageView lvHeaderArrowIv -> f
    android.widget.ProgressBar lvHeaderProgressBar -> g
    android.widget.TextView noData -> h
    android.widget.TextView loadFull -> i
    android.widget.TextView more -> j
    android.widget.ProgressBar loading -> k
    int headerContentHeight -> l
    android.view.animation.RotateAnimation animation -> m
    android.view.animation.RotateAnimation reverseAnimation -> n
    int startY -> o
    int state -> p
    boolean isBack -> q
    boolean isRecored -> r
    com.example.secondapp.view.MyListViewUpDown$OnRefreshListener refreshListener -> s
    com.example.secondapp.view.MyListViewUpDown$OnLoadListener onLoadListener -> t
    boolean isRefreshable -> u
    boolean isLoading -> v
    boolean loadEnable -> w
    boolean isLoadFull -> x
    int pageSize -> y
    int firstVisibleItem -> z
    int scrollState -> A
    void init(android.content.Context) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void changeHeaderViewByState() -> d
    void setResultSize(int) -> setResultSize
    void measureView(android.view.View) -> a
    void setonRefreshListener(com.example.secondapp.view.MyListViewUpDown$OnRefreshListener) -> setonRefreshListener
    void setOnLoadListener(com.example.secondapp.view.MyListViewUpDown$OnLoadListener) -> setOnLoadListener
    void setLoadEnable(boolean) -> setLoadEnable
    void onRefreshComplete() -> a
    void onLoadComplete() -> b
    void onRefresh() -> e
    void onLoad() -> c
    void setAdapter(com.example.secondapp.adapter.FruitShowListViewAdapter) -> setAdapter
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void ifNeedLoad(android.widget.AbsListView,int) -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.example.secondapp.view.MyListViewUpDown$OnLoadListener -> com.example.secondapp.view.b:
    void onLoad() -> e
com.example.secondapp.view.MyListViewUpDown$OnRefreshListener -> com.example.secondapp.view.c:
    void onRefresh() -> f
com.example.secondapp.view.MyTextView2 -> com.example.secondapp.view.MyTextView2:
    java.lang.String text -> a
    float textSize -> b
    float paddingLeft -> c
    float paddingRight -> d
    int textColor -> e
    android.graphics.Paint paint1 -> f
    float textShowWidth -> g
    void onDraw(android.graphics.Canvas) -> onDraw
com.example.secondapp.view.PullToRefreshLV -> com.example.secondapp.view.PullToRefreshLV:
    android.view.LayoutInflater inflater -> a
    android.widget.LinearLayout headerView -> b
    android.widget.TextView lvHeaderTipsTv -> c
    android.widget.TextView lvHeaderLastUpdatedTv -> d
    android.widget.ImageView lvHeaderArrowIv -> e
    android.widget.ProgressBar lvHeaderProgressBar -> f
    int headerContentHeight -> g
    android.view.animation.RotateAnimation animation -> h
    android.view.animation.RotateAnimation reverseAnimation -> i
    int startY -> j
    int state -> k
    boolean isBack -> l
    boolean isRecored -> m
    com.example.secondapp.view.PullToRefreshLV$OnRefreshListener refreshListener -> n
    boolean isRefreshable -> o
    void init(android.content.Context) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void changeHeaderViewByState() -> b
    void measureView(android.view.View) -> a
    void setonRefreshListener(com.example.secondapp.view.PullToRefreshLV$OnRefreshListener) -> setonRefreshListener
    void onRefreshComplete() -> a
    void onLvRefresh() -> c
    void setAdapter(com.example.secondapp.adapter.LvAdapter) -> setAdapter
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.example.secondapp.view.PullToRefreshLV$OnRefreshListener -> com.example.secondapp.view.d:
    void onRefresh() -> a
com.example.secondapp.view.PullToRefreshView -> com.example.secondapp.view.PullToRefreshView:
    int mLastMotionY -> a
    boolean mLock -> b
    android.view.View mHeaderView -> c
    android.view.View mFooterView -> d
    android.widget.AdapterView mAdapterView -> e
    android.widget.ScrollView mScrollView -> f
    int mHeaderViewHeight -> g
    int mFooterViewHeight -> h
    android.widget.ImageView mHeaderImageView -> i
    android.widget.ImageView mFooterImageView -> j
    android.widget.TextView mHeaderTextView -> k
    android.widget.TextView mFooterTextView -> l
    android.widget.TextView mHeaderUpdateTextView -> m
    android.widget.ProgressBar mHeaderProgressBar -> n
    android.widget.ProgressBar mFooterProgressBar -> o
    android.view.LayoutInflater mInflater -> p
    int mHeaderState -> q
    int mFooterState -> r
    int mPullState -> s
    android.view.animation.RotateAnimation mFlipAnimation -> t
    android.view.animation.RotateAnimation mReverseFlipAnimation -> u
    com.example.secondapp.view.PullToRefreshView$OnFooterRefreshListener mOnFooterRefreshListener -> v
    com.example.secondapp.view.PullToRefreshView$OnHeaderRefreshListener mOnHeaderRefreshListener -> w
    void init() -> c
    void addHeaderView() -> d
    void addFooterView() -> e
    void onFinishInflate() -> onFinishInflate
    void initContentAdapterView() -> f
    void measureView(android.view.View) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isRefreshViewScroll(int) -> a
    void headerPrepareToRefresh(int) -> b
    void footerPrepareToRefresh(int) -> c
    int changingHeaderViewTopMargin(int) -> d
    void headerRefreshing() -> g
    void footerRefreshing() -> h
    void setHeaderTopMargin(int) -> setHeaderTopMargin
    void onHeaderRefreshComplete() -> a
    void onFooterRefreshComplete() -> b
    void setLastUpdated(java.lang.CharSequence) -> setLastUpdated
    int getHeaderTopMargin() -> getHeaderTopMargin
    void setOnHeaderRefreshListener(com.example.secondapp.view.PullToRefreshView$OnHeaderRefreshListener) -> setOnHeaderRefreshListener
    void setOnFooterRefreshListener(com.example.secondapp.view.PullToRefreshView$OnFooterRefreshListener) -> setOnFooterRefreshListener
com.example.secondapp.view.PullToRefreshView$OnFooterRefreshListener -> com.example.secondapp.view.e:
    void onFooterRefresh(com.example.secondapp.view.PullToRefreshView) -> a
com.example.secondapp.view.PullToRefreshView$OnHeaderRefreshListener -> com.example.secondapp.view.f:
    void onHeaderRefresh(com.example.secondapp.view.PullToRefreshView) -> b
com.example.secondapp.view.ReboundScrollView -> com.example.secondapp.view.ReboundScrollView:
    android.view.View contentView -> a
    float startY -> b
    android.graphics.Rect originalRect -> c
    boolean canPullDown -> d
    boolean canPullUp -> e
    boolean isMoved -> f
    void onFinishInflate() -> onFinishInflate
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean isCanPullDown() -> a
    boolean isCanPullUp() -> b
com.google.gson.DefaultDateTypeAdapter -> com.google.gson.DefaultDateTypeAdapter:
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> deserializeToDate
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.ExclusionStrategy -> com.google.gson.ExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    java.lang.reflect.Field field -> field
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getName() -> getName
    java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    java.lang.Class getDeclaredClass() -> getDeclaredClass
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.util.Collection getAnnotations() -> getAnnotations
    boolean hasModifier(int) -> hasModifier
    java.lang.Object get(java.lang.Object) -> get
    boolean isSynthetic() -> isSynthetic
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    java.lang.String modifyString(char,java.lang.String,int) -> modifyString
    java.lang.String access$100(java.lang.String) -> access$100
    java.lang.String access$200(java.lang.String,java.lang.String) -> access$200
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingStrategy -> com.google.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    java.lang.ThreadLocal calls -> calls
    java.util.Map typeTokenCache -> typeTokenCache
    java.util.List factories -> factories
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean serializeNulls -> serializeNulls
    boolean htmlSafe -> htmlSafe
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean prettyPrinting -> prettyPrinting
    com.google.gson.JsonDeserializationContext deserializationContext -> deserializationContext
    com.google.gson.JsonSerializationContext serializationContext -> serializationContext
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> access$000
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    com.google.gson.Gson this$0 -> this$0
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
    com.google.gson.TypeAdapter delegate -> delegate
    void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    java.util.Map instanceCreators -> instanceCreators
    java.util.List factories -> factories
    java.util.List hierarchyFactories -> hierarchyFactories
    boolean serializeNulls -> serializeNulls
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean escapeHtmlChars -> escapeHtmlChars
    boolean prettyPrinting -> prettyPrinting
    boolean generateNonExecutableJson -> generateNonExecutableJson
    com.google.gson.GsonBuilder setVersion(double) -> setVersion
    com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    com.google.gson.Gson create() -> create
    void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
com.google.gson.InstanceCreator -> com.google.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    java.util.List elements -> elements
    com.google.gson.JsonArray deepCopy() -> deepCopy
    void add(com.google.gson.JsonElement) -> add
    void addAll(com.google.gson.JsonArray) -> addAll
    com.google.gson.JsonElement set(int,com.google.gson.JsonElement) -> set
    boolean remove(com.google.gson.JsonElement) -> remove
    com.google.gson.JsonElement remove(int) -> remove
    boolean contains(com.google.gson.JsonElement) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    com.google.gson.JsonElement get(int) -> get
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    short getAsShort() -> getAsShort
    boolean getAsBoolean() -> getAsBoolean
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonDeserializationContext -> com.google.gson.JsonDeserializationContext:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.JsonDeserializer -> com.google.gson.JsonDeserializer:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    com.google.gson.JsonElement deepCopy() -> deepCopy
    boolean isJsonArray() -> isJsonArray
    boolean isJsonObject() -> isJsonObject
    boolean isJsonPrimitive() -> isJsonPrimitive
    boolean isJsonNull() -> isJsonNull
    com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    boolean getAsBoolean() -> getAsBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    short getAsShort() -> getAsShort
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    com.google.gson.JsonNull deepCopy() -> deepCopy
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    com.google.gson.internal.LinkedTreeMap members -> members
    com.google.gson.JsonObject deepCopy() -> deepCopy
    void add(java.lang.String,com.google.gson.JsonElement) -> add
    com.google.gson.JsonElement remove(java.lang.String) -> remove
    void addProperty(java.lang.String,java.lang.String) -> addProperty
    void addProperty(java.lang.String,java.lang.Number) -> addProperty
    void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    void addProperty(java.lang.String,java.lang.Character) -> addProperty
    com.google.gson.JsonElement createJsonElement(java.lang.Object) -> createJsonElement
    java.util.Set entrySet() -> entrySet
    boolean has(java.lang.String) -> has
    com.google.gson.JsonElement get(java.lang.String) -> get
    com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    com.google.gson.JsonElement parse(java.lang.String) -> parse
    com.google.gson.JsonElement parse(java.io.Reader) -> parse
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    java.lang.Class[] PRIMITIVE_TYPES -> PRIMITIVE_TYPES
    java.lang.Object value -> value
    com.google.gson.JsonPrimitive deepCopy() -> deepCopy
    void setValue(java.lang.Object) -> setValue
    boolean isBoolean() -> isBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    boolean getAsBoolean() -> getAsBoolean
    boolean isNumber() -> isNumber
    java.lang.Number getAsNumber() -> getAsNumber
    boolean isString() -> isString
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    short getAsShort() -> getAsShort
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    boolean isPrimitiveOrString(java.lang.Object) -> isPrimitiveOrString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonSerializationContext -> com.google.gson.JsonSerializationContext:
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.JsonSerializer -> com.google.gson.JsonSerializer:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
    com.google.gson.stream.JsonReader parser -> parser
    java.lang.Object lock -> lock
    com.google.gson.JsonElement next() -> next
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.TreeTypeAdapter -> com.google.gson.TreeTypeAdapter:
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.Gson gson -> gson
    com.google.gson.reflect.TypeToken typeToken -> typeToken
    com.google.gson.TypeAdapterFactory skipPast -> skipPast
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
com.google.gson.TreeTypeAdapter$1 -> com.google.gson.TreeTypeAdapter$1:
com.google.gson.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.TreeTypeAdapter$SingleTypeFactory:
    com.google.gson.reflect.TypeToken exactType -> exactType
    boolean matchRawType -> matchRawType
    java.lang.Class hierarchyType -> hierarchyType
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void toJson(java.io.Writer,java.lang.Object) -> toJson
    com.google.gson.TypeAdapter nullSafe() -> nullSafe
    java.lang.String toJson(java.lang.Object) -> toJson
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object fromJson(java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.String) -> fromJson
    java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    com.google.gson.TypeAdapter this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
com.google.gson.TypeAdapterFactory -> com.google.gson.TypeAdapterFactory:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.annotations.Expose -> com.google.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
com.google.gson.annotations.JsonAdapter -> com.google.gson.annotations.JsonAdapter:
    java.lang.Class value() -> value
com.google.gson.annotations.SerializedName -> com.google.gson.annotations.SerializedName:
    java.lang.String value() -> value
com.google.gson.annotations.Since -> com.google.gson.annotations.Since:
    double value() -> value
com.google.gson.annotations.Until -> com.google.gson.annotations.Until:
    double value() -> value
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    void checkArgument(boolean) -> checkArgument
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    void access$000(java.lang.reflect.Type) -> access$000
    int access$100(java.lang.Object) -> access$100
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    java.util.Map instanceCreators -> instanceCreators
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    com.google.gson.InstanceCreator val$typeCreator -> val$typeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$10:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$11:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$12:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> unsafeAllocator
    java.lang.Class val$rawType -> val$rawType
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
    com.google.gson.InstanceCreator val$rawTypeCreator -> val$rawTypeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
    java.lang.reflect.Constructor val$constructor -> val$constructor
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$9:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
    com.google.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> version
    int modifiers -> modifiers
    boolean serializeInnerClasses -> serializeInnerClasses
    boolean requireExpose -> requireExpose
    java.util.List serializationStrategies -> serializationStrategies
    java.util.List deserializationStrategies -> deserializationStrategies
    com.google.gson.internal.Excluder clone() -> clone
    com.google.gson.internal.Excluder withVersion(double) -> withVersion
    com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    boolean isAnonymousOrLocal(java.lang.Class) -> isAnonymousOrLocal
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    boolean isStatic(java.lang.Class) -> isStatic
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
    boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    com.google.gson.TypeAdapter delegate -> delegate
    boolean val$skipDeserialize -> val$skipDeserialize
    boolean val$skipSerialize -> val$skipSerialize
    com.google.gson.Gson val$gson -> val$gson
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.internal.Excluder this$0 -> this$0
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    java.lang.String value -> value
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedHashTreeMap -> com.google.gson.internal.LinkedHashTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    com.google.gson.internal.LinkedHashTreeMap$Node[] table -> table
    com.google.gson.internal.LinkedHashTreeMap$Node header -> header
    int size -> size
    int modCount -> modCount
    int threshold -> threshold
    com.google.gson.internal.LinkedHashTreeMap$EntrySet entrySet -> entrySet
    com.google.gson.internal.LinkedHashTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.internal.LinkedHashTreeMap$Node find(java.lang.Object,boolean) -> find
    com.google.gson.internal.LinkedHashTreeMap$Node findByObject(java.lang.Object) -> findByObject
    com.google.gson.internal.LinkedHashTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int secondaryHash(int) -> secondaryHash
    void removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> removeInternal
    com.google.gson.internal.LinkedHashTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node) -> replaceInParent
    void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> rebalance
    void rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node) -> rotateLeft
    void rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node) -> rotateRight
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    void doubleCapacity() -> doubleCapacity
    com.google.gson.internal.LinkedHashTreeMap$Node[] doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[]) -> doubleCapacity
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedHashTreeMap$1 -> com.google.gson.internal.LinkedHashTreeMap$1:
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedHashTreeMap$AvlBuilder -> com.google.gson.internal.LinkedHashTreeMap$AvlBuilder:
    com.google.gson.internal.LinkedHashTreeMap$Node stack -> stack
    int leavesToSkip -> leavesToSkip
    int leavesSkipped -> leavesSkipped
    int size -> size
    void reset(int) -> reset
    void add(com.google.gson.internal.LinkedHashTreeMap$Node) -> add
    com.google.gson.internal.LinkedHashTreeMap$Node root() -> root
com.google.gson.internal.LinkedHashTreeMap$AvlIterator -> com.google.gson.internal.LinkedHashTreeMap$AvlIterator:
    com.google.gson.internal.LinkedHashTreeMap$Node stackTop -> stackTop
    void reset(com.google.gson.internal.LinkedHashTreeMap$Node) -> reset
    com.google.gson.internal.LinkedHashTreeMap$Node next() -> next
com.google.gson.internal.LinkedHashTreeMap$EntrySet -> com.google.gson.internal.LinkedHashTreeMap$EntrySet:
    com.google.gson.internal.LinkedHashTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedHashTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedHashTreeMap$EntrySet$1:
    com.google.gson.internal.LinkedHashTreeMap$EntrySet this$1 -> this$1
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.google.gson.internal.LinkedHashTreeMap$KeySet -> com.google.gson.internal.LinkedHashTreeMap$KeySet:
    com.google.gson.internal.LinkedHashTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedHashTreeMap$KeySet$1 -> com.google.gson.internal.LinkedHashTreeMap$KeySet$1:
    com.google.gson.internal.LinkedHashTreeMap$KeySet this$1 -> this$1
    java.lang.Object next() -> next
com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator:
    com.google.gson.internal.LinkedHashTreeMap$Node next -> next
    com.google.gson.internal.LinkedHashTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    com.google.gson.internal.LinkedHashTreeMap this$0 -> this$0
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedHashTreeMap$Node nextNode() -> nextNode
    void remove() -> remove
com.google.gson.internal.LinkedHashTreeMap$Node -> com.google.gson.internal.LinkedHashTreeMap$Node:
    com.google.gson.internal.LinkedHashTreeMap$Node parent -> parent
    com.google.gson.internal.LinkedHashTreeMap$Node left -> left
    com.google.gson.internal.LinkedHashTreeMap$Node right -> right
    com.google.gson.internal.LinkedHashTreeMap$Node next -> next
    com.google.gson.internal.LinkedHashTreeMap$Node prev -> prev
    java.lang.Object key -> key
    int hash -> hash
    java.lang.Object value -> value
    int height -> height
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.gson.internal.LinkedHashTreeMap$Node first() -> first
    com.google.gson.internal.LinkedHashTreeMap$Node last() -> last
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    com.google.gson.internal.LinkedTreeMap$Node root -> root
    int size -> size
    int modCount -> modCount
    com.google.gson.internal.LinkedTreeMap$Node header -> header
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> entrySet
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> rotateRight
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.LinkedTreeMap$1:
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.LinkedTreeMap$EntrySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedTreeMap$EntrySet$1:
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> this$1
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.LinkedTreeMap$KeySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.LinkedTreeMap$KeySet$1:
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> this$1
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.LinkedTreeMap$Node:
    com.google.gson.internal.LinkedTreeMap$Node parent -> parent
    com.google.gson.internal.LinkedTreeMap$Node left -> left
    com.google.gson.internal.LinkedTreeMap$Node right -> right
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node prev -> prev
    java.lang.Object key -> key
    java.lang.Object value -> value
    int height -> height
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.gson.internal.LinkedTreeMap$Node first() -> first
    com.google.gson.internal.LinkedTreeMap$Node last() -> last
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ObjectConstructor:
    java.lang.Object construct() -> construct
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    java.lang.Class wrap(java.lang.Class) -> wrap
    java.lang.Class unwrap(java.lang.Class) -> unwrap
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$1 -> com.google.gson.internal.Streams$1:
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
    java.lang.Appendable appendable -> appendable
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> currentWrite
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
    char[] chars -> chars
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    com.google.gson.internal.UnsafeAllocator create() -> create
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    java.lang.reflect.Method val$allocateInstance -> val$allocateInstance
    java.lang.Object val$unsafe -> val$unsafe
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    int val$constructorId -> val$constructorId
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> componentType
    com.google.gson.TypeAdapter componentTypeAdapter -> componentTypeAdapter
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter elementTypeAdapter -> elementTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    java.text.DateFormat buildIso8601Format() -> buildIso8601Format
    java.util.Date read(com.google.gson.stream.JsonReader) -> read
    java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory -> com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.TypeAdapter getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter) -> getTypeAdapter
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    java.io.Reader UNREADABLE_READER -> UNREADABLE_READER
    java.lang.Object SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    java.lang.Object peekStack() -> peekStack
    java.lang.Object popStack() -> popStack
    void expect(com.google.gson.stream.JsonToken) -> expect
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    java.lang.String toString() -> toString
    void promoteNameToValue() -> promoteNameToValue
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    java.io.Writer UNWRITABLE_WRITER -> UNWRITABLE_WRITER
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    java.lang.String pendingName -> pendingName
    com.google.gson.JsonElement product -> product
    com.google.gson.JsonElement get() -> get
    com.google.gson.JsonElement peek() -> peek
    void put(com.google.gson.JsonElement) -> put
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean complexMapKeySerialization -> complexMapKeySerialization
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> access$000
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter keyTypeAdapter -> keyTypeAdapter
    com.google.gson.TypeAdapter valueTypeAdapter -> valueTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> this$0
    java.util.Map read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
    java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    com.google.gson.Gson gson -> gson
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.internal.Excluder excluder -> excluder
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    boolean excludeField(java.lang.reflect.Field,boolean,com.google.gson.internal.Excluder) -> excludeField
    java.lang.String getFieldName(java.lang.reflect.Field) -> getFieldName
    java.lang.String getFieldName(com.google.gson.FieldNamingStrategy,java.lang.reflect.Field) -> getFieldName
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    com.google.gson.TypeAdapter getFieldAdapter(com.google.gson.Gson,java.lang.reflect.Field,com.google.gson.reflect.TypeToken) -> getFieldAdapter
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
    com.google.gson.TypeAdapter access$100(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Field,com.google.gson.reflect.TypeToken) -> access$100
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    com.google.gson.TypeAdapter typeAdapter -> typeAdapter
    com.google.gson.Gson val$context -> val$context
    java.lang.reflect.Field val$field -> val$field
    com.google.gson.reflect.TypeToken val$fieldType -> val$fieldType
    boolean val$isPrimitive -> val$isPrimitive
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
    boolean writeField(java.lang.Object) -> writeField
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Map boundFields -> boundFields
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    java.lang.String name -> name
    boolean serialized -> serialized
    boolean deserialized -> deserialized
    boolean writeField(java.lang.Object) -> writeField
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.bind.SqlDateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.bind.SqlDateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.bind.TimeTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.bind.TimeTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    com.google.gson.Gson context -> context
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.reflect.Type type -> type
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    com.google.gson.TypeAdapter CLASS -> CLASS
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.google.gson.TypeAdapter BIT_SET -> BIT_SET
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.google.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.google.gson.TypeAdapter BYTE -> BYTE
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.google.gson.TypeAdapter SHORT -> SHORT
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.google.gson.TypeAdapter INTEGER -> INTEGER
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.google.gson.TypeAdapter LONG -> LONG
    com.google.gson.TypeAdapter FLOAT -> FLOAT
    com.google.gson.TypeAdapter DOUBLE -> DOUBLE
    com.google.gson.TypeAdapter NUMBER -> NUMBER
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> NUMBER_FACTORY
    com.google.gson.TypeAdapter CHARACTER -> CHARACTER
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.google.gson.TypeAdapter STRING -> STRING
    com.google.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.google.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.google.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.google.gson.TypeAdapter URL -> URL
    com.google.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.google.gson.TypeAdapter URI -> URI
    com.google.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.google.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.google.gson.TypeAdapter UUID -> UUID
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    com.google.gson.TypeAdapter CALENDAR -> CALENDAR
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.google.gson.TypeAdapter LOCALE -> LOCALE
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.google.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
    java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
    java.lang.String read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
    java.net.URL read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
    java.net.URI read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$22$1 -> com.google.gson.internal.bind.TypeAdapters$22$1:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> val$dateTypeAdapter
    com.google.gson.internal.bind.TypeAdapters$22 this$0 -> this$0
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
    java.lang.String YEAR -> YEAR
    java.lang.String MONTH -> MONTH
    java.lang.String DAY_OF_MONTH -> DAY_OF_MONTH
    java.lang.String HOUR_OF_DAY -> HOUR_OF_DAY
    java.lang.String MINUTE -> MINUTE
    java.lang.String SECOND -> SECOND
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
    java.lang.Class val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$29:
    java.lang.Class val$unboxed -> val$unboxed
    java.lang.Class val$boxed -> val$boxed
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$30:
    java.lang.Class val$base -> val$base
    java.lang.Class val$sub -> val$sub
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$31:
    java.lang.Class val$clazz -> val$clazz
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$32:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    java.util.Map nameToConstant -> nameToConstant
    java.util.Map constantToName -> constantToName
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getType() -> getType
    boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
    java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    char[] NON_EXECUTE_PREFIX -> NON_EXECUTE_PREFIX
    long MIN_INCOMPLETE_INTEGER -> MIN_INCOMPLETE_INTEGER
    int PEEKED_NONE -> PEEKED_NONE
    int PEEKED_BEGIN_OBJECT -> PEEKED_BEGIN_OBJECT
    int PEEKED_END_OBJECT -> PEEKED_END_OBJECT
    int PEEKED_BEGIN_ARRAY -> PEEKED_BEGIN_ARRAY
    int PEEKED_END_ARRAY -> PEEKED_END_ARRAY
    int PEEKED_TRUE -> PEEKED_TRUE
    int PEEKED_FALSE -> PEEKED_FALSE
    int PEEKED_NULL -> PEEKED_NULL
    int PEEKED_SINGLE_QUOTED -> PEEKED_SINGLE_QUOTED
    int PEEKED_DOUBLE_QUOTED -> PEEKED_DOUBLE_QUOTED
    int PEEKED_UNQUOTED -> PEEKED_UNQUOTED
    int PEEKED_BUFFERED -> PEEKED_BUFFERED
    int PEEKED_SINGLE_QUOTED_NAME -> PEEKED_SINGLE_QUOTED_NAME
    int PEEKED_DOUBLE_QUOTED_NAME -> PEEKED_DOUBLE_QUOTED_NAME
    int PEEKED_UNQUOTED_NAME -> PEEKED_UNQUOTED_NAME
    int PEEKED_LONG -> PEEKED_LONG
    int PEEKED_NUMBER -> PEEKED_NUMBER
    int PEEKED_EOF -> PEEKED_EOF
    int NUMBER_CHAR_NONE -> NUMBER_CHAR_NONE
    int NUMBER_CHAR_SIGN -> NUMBER_CHAR_SIGN
    int NUMBER_CHAR_DIGIT -> NUMBER_CHAR_DIGIT
    int NUMBER_CHAR_DECIMAL -> NUMBER_CHAR_DECIMAL
    int NUMBER_CHAR_FRACTION_DIGIT -> NUMBER_CHAR_FRACTION_DIGIT
    int NUMBER_CHAR_EXP_E -> NUMBER_CHAR_EXP_E
    int NUMBER_CHAR_EXP_SIGN -> NUMBER_CHAR_EXP_SIGN
    int NUMBER_CHAR_EXP_DIGIT -> NUMBER_CHAR_EXP_DIGIT
    java.io.Reader in -> in
    boolean lenient -> lenient
    char[] buffer -> buffer
    int pos -> pos
    int limit -> limit
    int lineNumber -> lineNumber
    int lineStart -> lineStart
    int peeked -> peeked
    long peekedLong -> peekedLong
    int peekedNumberLength -> peekedNumberLength
    java.lang.String peekedString -> peekedString
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String[] pathNames -> pathNames
    int[] pathIndices -> pathIndices
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    int doPeek() -> doPeek
    int peekKeyword() -> peekKeyword
    int peekNumber() -> peekNumber
    boolean isLiteral(char) -> isLiteral
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    java.lang.String nextQuotedValue(char) -> nextQuotedValue
    java.lang.String nextUnquotedValue() -> nextUnquotedValue
    void skipQuotedValue(char) -> skipQuotedValue
    void skipUnquotedValue() -> skipUnquotedValue
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    void push(int) -> push
    boolean fillBuffer(int) -> fillBuffer
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    int nextNonWhitespace(boolean) -> nextNonWhitespace
    void checkLenient() -> checkLenient
    void skipToEndOfLine() -> skipToEndOfLine
    boolean skipTo(java.lang.String) -> skipTo
    java.lang.String toString() -> toString
    java.lang.String getPath() -> getPath
    char readEscapeCharacter() -> readEscapeCharacter
    java.io.IOException syntaxError(java.lang.String) -> syntaxError
    void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    int access$000(com.google.gson.stream.JsonReader) -> access$000
    int access$100(com.google.gson.stream.JsonReader) -> access$100
    int access$002(com.google.gson.stream.JsonReader,int) -> access$002
    int access$200(com.google.gson.stream.JsonReader) -> access$200
    int access$300(com.google.gson.stream.JsonReader) -> access$300
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonScope -> com.google.gson.stream.JsonScope:
    int EMPTY_ARRAY -> EMPTY_ARRAY
    int NONEMPTY_ARRAY -> NONEMPTY_ARRAY
    int EMPTY_OBJECT -> EMPTY_OBJECT
    int DANGLING_NAME -> DANGLING_NAME
    int NONEMPTY_OBJECT -> NONEMPTY_OBJECT
    int EMPTY_DOCUMENT -> EMPTY_DOCUMENT
    int NONEMPTY_DOCUMENT -> NONEMPTY_DOCUMENT
    int CLOSED -> CLOSED
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> $VALUES
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    java.lang.String[] REPLACEMENT_CHARS -> REPLACEMENT_CHARS
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> HTML_SAFE_REPLACEMENT_CHARS
    java.io.Writer out -> out
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String indent -> indent
    java.lang.String separator -> separator
    boolean lenient -> lenient
    boolean htmlSafe -> htmlSafe
    java.lang.String deferredName -> deferredName
    boolean serializeNulls -> serializeNulls
    void setIndent(java.lang.String) -> setIndent
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void setHtmlSafe(boolean) -> setHtmlSafe
    boolean isHtmlSafe() -> isHtmlSafe
    void setSerializeNulls(boolean) -> setSerializeNulls
    boolean getSerializeNulls() -> getSerializeNulls
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter open(int,java.lang.String) -> open
    com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> close
    void push(int) -> push
    int peek() -> peek
    void replaceTop(int) -> replaceTop
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    void writeDeferredName() -> writeDeferredName
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> string
    void newline() -> newline
    void beforeName() -> beforeName
    void beforeValue(boolean) -> beforeValue
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
com.hp.hpl.sparta.BuildDocument -> com.hp.hpl.sparta.BuildDocument:
    com.hp.hpl.sparta.ParseLog log_ -> log_
    com.hp.hpl.sparta.Element currentElement_ -> currentElement_
    com.hp.hpl.sparta.Document doc_ -> doc_
    com.hp.hpl.sparta.ParseSource parseSource_ -> parseSource_
    void setParseSource(com.hp.hpl.sparta.ParseSource) -> setParseSource
    com.hp.hpl.sparta.ParseSource getParseSource() -> getParseSource
    java.lang.String toString() -> toString
    java.lang.String getSystemId() -> getSystemId
    int getLineNumber() -> getLineNumber
    com.hp.hpl.sparta.Document getDocument() -> getDocument
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(com.hp.hpl.sparta.Element) -> startElement
    void endElement(com.hp.hpl.sparta.Element) -> endElement
    void characters(char[],int,int) -> characters
com.hp.hpl.sparta.CharCircBuffer -> com.hp.hpl.sparta.CharCircBuffer:
    int[] buf_ -> buf_
    int next_ -> next_
    int total_ -> total_
    boolean enabled_ -> enabled_
    void enable() -> enable
    void disable() -> disable
    void addInt(int) -> addInt
    void addChar(char) -> addChar
    void addRaw(int) -> addRaw
    void addString(java.lang.String) -> addString
    java.lang.String toString() -> toString
com.hp.hpl.sparta.DOMException -> com.hp.hpl.sparta.DOMException:
    short code -> code
    short DOMSTRING_SIZE_ERR -> DOMSTRING_SIZE_ERR
    short HIERARCHY_REQUEST_ERR -> HIERARCHY_REQUEST_ERR
    short NOT_FOUND_ERR -> NOT_FOUND_ERR
com.hp.hpl.sparta.DefaultLog -> com.hp.hpl.sparta.DefaultLog:
    void error(java.lang.String,java.lang.String,int) -> error
    void warning(java.lang.String,java.lang.String,int) -> warning
    void note(java.lang.String,java.lang.String,int) -> note
com.hp.hpl.sparta.DefaultParseHandler -> com.hp.hpl.sparta.DefaultParseHandler:
    com.hp.hpl.sparta.ParseSource parseSource_ -> parseSource_
    void setParseSource(com.hp.hpl.sparta.ParseSource) -> setParseSource
    com.hp.hpl.sparta.ParseSource getParseSource() -> getParseSource
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(com.hp.hpl.sparta.Element) -> startElement
    void endElement(com.hp.hpl.sparta.Element) -> endElement
    void characters(char[],int,int) -> characters
com.hp.hpl.sparta.Document -> com.hp.hpl.sparta.Document:
    boolean DEBUG -> DEBUG
    java.lang.Integer ONE -> ONE
    java.util.Enumeration EMPTY -> EMPTY
    com.hp.hpl.sparta.Element rootElement_ -> rootElement_
    java.lang.String systemId_ -> systemId_
    com.hp.hpl.sparta.Sparta$Cache indices_ -> indices_
    java.util.Vector observers_ -> observers_
    java.util.Hashtable indexible_ -> indexible_
    java.lang.Object clone() -> clone
    java.lang.String getSystemId() -> getSystemId
    void setSystemId(java.lang.String) -> setSystemId
    java.lang.String toString() -> toString
    com.hp.hpl.sparta.Element getDocumentElement() -> getDocumentElement
    void setDocumentElement(com.hp.hpl.sparta.Element) -> setDocumentElement
    com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean) -> visitor
    com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean) -> visitor
    java.util.Enumeration xpathSelectElements(java.lang.String) -> xpathSelectElements
    void monitor(com.hp.hpl.sparta.xpath.XPath) -> monitor
    java.util.Enumeration xpathSelectStrings(java.lang.String) -> xpathSelectStrings
    com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String) -> xpathSelectElement
    java.lang.String xpathSelectString(java.lang.String) -> xpathSelectString
    boolean xpathEnsure(java.lang.String) -> xpathEnsure
    boolean xpathHasIndex(java.lang.String) -> xpathHasIndex
    com.hp.hpl.sparta.Document$Index xpathGetIndex(java.lang.String) -> xpathGetIndex
    void addObserver(com.hp.hpl.sparta.Document$Observer) -> addObserver
    void deleteObserver(com.hp.hpl.sparta.Document$Observer) -> deleteObserver
    void toString(java.io.Writer) -> toString
    void notifyObservers() -> notifyObservers
    void toXml(java.io.Writer) -> toXml
    boolean equals(java.lang.Object) -> equals
    int computeHashCode() -> computeHashCode
com.hp.hpl.sparta.Document$Index -> com.hp.hpl.sparta.Document$Index:
    com.hp.hpl.sparta.Sparta$Cache dict_ -> dict_
    com.hp.hpl.sparta.xpath.XPath xpath_ -> xpath_
    java.lang.String attrName_ -> attrName_
    com.hp.hpl.sparta.Document this$0 -> this$0
    java.util.Enumeration get(java.lang.String) -> get
    int size() -> size
    void update(com.hp.hpl.sparta.Document) -> update
    void regenerate() -> regenerate
com.hp.hpl.sparta.Document$Observer -> com.hp.hpl.sparta.Document$Observer:
    void update(com.hp.hpl.sparta.Document) -> update
com.hp.hpl.sparta.DocumentSource -> com.hp.hpl.sparta.DocumentSource:
    com.hp.hpl.sparta.Document getDocument() -> getDocument
com.hp.hpl.sparta.Element -> com.hp.hpl.sparta.Element:
    boolean DEBUG -> DEBUG
    com.hp.hpl.sparta.Node firstChild_ -> firstChild_
    com.hp.hpl.sparta.Node lastChild_ -> lastChild_
    java.util.Hashtable attributes_ -> attributes_
    java.util.Vector attributeNames_ -> attributeNames_
    java.lang.String tagName_ -> tagName_
    java.lang.Object clone() -> clone
    com.hp.hpl.sparta.Element cloneShallow() -> cloneShallow
    com.hp.hpl.sparta.Element cloneElement(boolean) -> cloneElement
    java.lang.String getTagName() -> getTagName
    void setTagName(java.lang.String) -> setTagName
    com.hp.hpl.sparta.Node getFirstChild() -> getFirstChild
    com.hp.hpl.sparta.Node getLastChild() -> getLastChild
    java.util.Enumeration getAttributeNames() -> getAttributeNames
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    void removeAttribute(java.lang.String) -> removeAttribute
    void appendChildNoChecking(com.hp.hpl.sparta.Node) -> appendChildNoChecking
    void appendChild(com.hp.hpl.sparta.Node) -> appendChild
    boolean canHaveAsDescendent(com.hp.hpl.sparta.Node) -> canHaveAsDescendent
    boolean removeChildNoChecking(com.hp.hpl.sparta.Node) -> removeChildNoChecking
    void removeChild(com.hp.hpl.sparta.Node) -> removeChild
    void replaceChild(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.Node) -> replaceChild
    void replaceChild(com.hp.hpl.sparta.Text,com.hp.hpl.sparta.Node) -> replaceChild
    void replaceChild_(com.hp.hpl.sparta.Node,com.hp.hpl.sparta.Node) -> replaceChild_
    void toString(java.io.Writer) -> toString
    void toXml(java.io.Writer) -> toXml
    com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean) -> visitor
    java.util.Enumeration xpathSelectElements(java.lang.String) -> xpathSelectElements
    java.util.Enumeration xpathSelectStrings(java.lang.String) -> xpathSelectStrings
    boolean xpathEnsure(java.lang.String) -> xpathEnsure
    com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String) -> xpathSelectElement
    java.lang.String xpathSelectString(java.lang.String) -> xpathSelectString
    boolean equals(java.lang.Object) -> equals
    int computeHashCode() -> computeHashCode
    void checkInvariant() -> checkInvariant
com.hp.hpl.sparta.EmptyEnumeration -> com.hp.hpl.sparta.EmptyEnumeration:
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
com.hp.hpl.sparta.EncodingMismatchException -> com.hp.hpl.sparta.EncodingMismatchException:
    java.lang.String declaredEncoding_ -> declaredEncoding_
    java.lang.String getDeclaredEncoding() -> getDeclaredEncoding
com.hp.hpl.sparta.Node -> com.hp.hpl.sparta.Node:
    com.hp.hpl.sparta.Document doc_ -> doc_
    com.hp.hpl.sparta.Element parentNode_ -> parentNode_
    com.hp.hpl.sparta.Node previousSibling_ -> previousSibling_
    com.hp.hpl.sparta.Node nextSibling_ -> nextSibling_
    java.lang.Object annotation_ -> annotation_
    int hash_ -> hash_
    void notifyObservers() -> notifyObservers
    void setOwnerDocument(com.hp.hpl.sparta.Document) -> setOwnerDocument
    com.hp.hpl.sparta.Document getOwnerDocument() -> getOwnerDocument
    com.hp.hpl.sparta.Element getParentNode() -> getParentNode
    com.hp.hpl.sparta.Node getPreviousSibling() -> getPreviousSibling
    com.hp.hpl.sparta.Node getNextSibling() -> getNextSibling
    java.lang.Object getAnnotation() -> getAnnotation
    void setAnnotation(java.lang.Object) -> setAnnotation
    void setParentNode(com.hp.hpl.sparta.Element) -> setParentNode
    void insertAtEndOfLinkedList(com.hp.hpl.sparta.Node) -> insertAtEndOfLinkedList
    void removeFromLinkedList() -> removeFromLinkedList
    void replaceInLinkedList(com.hp.hpl.sparta.Node) -> replaceInLinkedList
    java.lang.String toXml() -> toXml
    boolean xpathSetStrings(java.lang.String,java.lang.String) -> xpathSetStrings
    com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String) -> makeMatching
    java.util.Enumeration xpathSelectElements(java.lang.String) -> xpathSelectElements
    java.util.Enumeration xpathSelectStrings(java.lang.String) -> xpathSelectStrings
    com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String) -> xpathSelectElement
    java.lang.String xpathSelectString(java.lang.String) -> xpathSelectString
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
    void toString(java.io.Writer) -> toString
    void toXml(java.io.Writer) -> toXml
    void htmlEncode(java.io.Writer,java.lang.String) -> htmlEncode
    int computeHashCode() -> computeHashCode
    int hashCode() -> hashCode
com.hp.hpl.sparta.Node$1 -> com.hp.hpl.sparta.Node$1:
    com.hp.hpl.sparta.Element val$newChild -> val$newChild
    com.hp.hpl.sparta.Element val$parent -> val$parent
    java.lang.String val$msgContext -> val$msgContext
    java.lang.String val$tagName -> val$tagName
    com.hp.hpl.sparta.Node this$0 -> this$0
    void visit(com.hp.hpl.sparta.xpath.TrueExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrExistsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrLessExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextExistsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr) -> visit
com.hp.hpl.sparta.NodeListWithPosition -> com.hp.hpl.sparta.NodeListWithPosition:
    java.lang.Integer ONE -> ONE
    java.lang.Integer TWO -> TWO
    java.lang.Integer THREE -> THREE
    java.lang.Integer FOUR -> FOUR
    java.lang.Integer FIVE -> FIVE
    java.lang.Integer SIX -> SIX
    java.lang.Integer SEVEN -> SEVEN
    java.lang.Integer EIGHT -> EIGHT
    java.lang.Integer NINE -> NINE
    java.lang.Integer TEN -> TEN
    java.util.Vector vector_ -> vector_
    java.util.Hashtable positions_ -> positions_
    java.util.Enumeration iterator() -> iterator
    void removeAllElements() -> removeAllElements
    void add(java.lang.String) -> add
    java.lang.Integer identity(com.hp.hpl.sparta.Node) -> identity
    void add(com.hp.hpl.sparta.Node,int) -> add
    int position(com.hp.hpl.sparta.Node) -> position
    java.lang.String toString() -> toString
com.hp.hpl.sparta.ParseByteStream -> com.hp.hpl.sparta.ParseByteStream:
    com.hp.hpl.sparta.ParseCharStream parseSource_ -> parseSource_
    java.lang.String toString() -> toString
    java.lang.String getSystemId() -> getSystemId
    int getLineNumber() -> getLineNumber
    java.lang.String guessEncoding(java.lang.String,byte[],int,com.hp.hpl.sparta.ParseLog) -> guessEncoding
    java.lang.String hex(byte) -> hex
    boolean equals(byte[],int) -> equals
    boolean equals(byte[],short) -> equals
    java.lang.String fixEncoding(java.lang.String) -> fixEncoding
com.hp.hpl.sparta.ParseCharStream -> com.hp.hpl.sparta.ParseCharStream:
    boolean DEBUG -> DEBUG
    boolean H_DEBUG -> H_DEBUG
    char[] NAME_PUNCT_CHARS -> NAME_PUNCT_CHARS
    int MAX_COMMON_CHAR -> MAX_COMMON_CHAR
    boolean[] IS_NAME_CHAR -> IS_NAME_CHAR
    char[] COMMENT_BEGIN -> COMMENT_BEGIN
    char[] COMMENT_END -> COMMENT_END
    char[] PI_BEGIN -> PI_BEGIN
    char[] QU_END -> QU_END
    char[] DOCTYPE_BEGIN -> DOCTYPE_BEGIN
    char[] XML_BEGIN -> XML_BEGIN
    char[] ENCODING -> ENCODING
    char[] VERSION -> VERSION
    char[] VERSIONNUM_PUNC_CHARS -> VERSIONNUM_PUNC_CHARS
    char[] MARKUPDECL_BEGIN -> MARKUPDECL_BEGIN
    char[] CHARREF_BEGIN -> CHARREF_BEGIN
    char[] ENTITY_BEGIN -> ENTITY_BEGIN
    char[] NDATA -> NDATA
    char[] SYSTEM -> SYSTEM
    char[] PUBLIC -> PUBLIC
    char[] BEGIN_CDATA -> BEGIN_CDATA
    char[] END_CDATA -> END_CDATA
    char[] END_EMPTYTAG -> END_EMPTYTAG
    char[] BEGIN_ETAG -> BEGIN_ETAG
    java.lang.String systemId_ -> systemId_
    java.lang.String docTypeName_ -> docTypeName_
    java.io.Reader reader_ -> reader_
    java.util.Hashtable entities_ -> entities_
    java.util.Hashtable pes_ -> pes_
    com.hp.hpl.sparta.ParseLog log_ -> log_
    java.lang.String encoding_ -> encoding_
    int ch_ -> ch_
    boolean isExternalDtd_ -> isExternalDtd_
    int CBUF_SIZE -> CBUF_SIZE
    char[] cbuf_ -> cbuf_
    int curPos_ -> curPos_
    int endPos_ -> endPos_
    boolean eos_ -> eos_
    int TMP_BUF_SIZE -> TMP_BUF_SIZE
    char[] tmpBuf_ -> tmpBuf_
    int lineNumber_ -> lineNumber_
    com.hp.hpl.sparta.CharCircBuffer history_ -> history_
    int HISTORY_LENGTH -> HISTORY_LENGTH
    com.hp.hpl.sparta.ParseHandler handler_ -> handler_
    java.lang.String toString() -> toString
    java.lang.String getSystemId() -> getSystemId
    int getLineNumber() -> getLineNumber
    int getLastCharRead() -> getLastCharRead
    java.lang.String getHistory() -> getHistory
    int fillBuf() -> fillBuf
    int fillBuf(int) -> fillBuf
    char readChar() -> readChar
    char peekChar() -> peekChar
    void readChar(char) -> readChar
    boolean isChar(char) -> isChar
    char readChar(char,char) -> readChar
    char readChar(char,char,char,char) -> readChar
    boolean isChar(char,char) -> isChar
    boolean isChar(char,char,char,char) -> isChar
    boolean isIn(char,char[]) -> isIn
    void readS() -> readS
    boolean isS() -> isS
    boolean isNameChar() -> isNameChar
    boolean isLetter(char) -> isLetter
    boolean isNameChar(char) -> isNameChar
    boolean isExtender(char) -> isExtender
    java.lang.String readName() -> readName
    char readNameStartChar() -> readNameStartChar
    java.lang.String readEntityValue() -> readEntityValue
    boolean isEntityValue() -> isEntityValue
    void readSystemLiteral() -> readSystemLiteral
    void readPubidLiteral() -> readPubidLiteral
    boolean isMisc() -> isMisc
    void readMisc() -> readMisc
    void readComment() -> readComment
    boolean isComment() -> isComment
    void readPi() -> readPi
    boolean isPi() -> isPi
    void readProlog() -> readProlog
    boolean isDocTypeDecl() -> isDocTypeDecl
    void readXmlDecl() -> readXmlDecl
    boolean isXmlDecl() -> isXmlDecl
    boolean isEncodingDecl() -> isEncodingDecl
    java.lang.String readEncodingDecl() -> readEncodingDecl
    void readVersionInfo() -> readVersionInfo
    void readEq() -> readEq
    boolean isVersionNumChar() -> isVersionNumChar
    void readVersionNum() -> readVersionNum
    void readDocTypeDecl() -> readDocTypeDecl
    void readDeclSep() -> readDeclSep
    boolean isDeclSep() -> isDeclSep
    void readMarkupDecl() -> readMarkupDecl
    char readCharRef() -> readCharRef
    char[] readReference() -> readReference
    boolean isReference() -> isReference
    java.lang.String readEntityRef() -> readEntityRef
    java.lang.String readPeReference() -> readPeReference
    boolean isPeReference() -> isPeReference
    void readEntityDecl() -> readEntityDecl
    boolean isEntityDecl() -> isEntityDecl
    java.lang.String readExternalId() -> readExternalId
    boolean isExternalId() -> isExternalId
    void readSymbol(char[]) -> readSymbol
    boolean isSymbol(char[]) -> isSymbol
    java.lang.String readAttValue() -> readAttValue
    void readPossibleCharData() -> readPossibleCharData
    void readCdSect() -> readCdSect
    boolean isCdSect() -> isCdSect
    com.hp.hpl.sparta.Element readElement() -> readElement
    com.hp.hpl.sparta.ParseLog getLog() -> getLog
    boolean readEmptyElementTagOrSTag(com.hp.hpl.sparta.Element) -> readEmptyElementTagOrSTag
    void readAttribute(com.hp.hpl.sparta.Element) -> readAttribute
    void readETag(com.hp.hpl.sparta.Element) -> readETag
    boolean isETag() -> isETag
    void readContent() -> readContent
com.hp.hpl.sparta.ParseException -> com.hp.hpl.sparta.ParseException:
    int lineNumber_ -> lineNumber_
    java.lang.Throwable cause_ -> cause_
    java.lang.String toString(char[]) -> toString
    int getLineNumber() -> getLineNumber
    java.lang.Throwable getCause() -> getCause
    java.lang.String toMessage(java.lang.String,int,int,java.lang.String,java.lang.String) -> toMessage
    java.lang.String charRepr(int) -> charRepr
com.hp.hpl.sparta.ParseHandler -> com.hp.hpl.sparta.ParseHandler:
    void setParseSource(com.hp.hpl.sparta.ParseSource) -> setParseSource
    com.hp.hpl.sparta.ParseSource getParseSource() -> getParseSource
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(com.hp.hpl.sparta.Element) -> startElement
    void endElement(com.hp.hpl.sparta.Element) -> endElement
    void characters(char[],int,int) -> characters
com.hp.hpl.sparta.ParseLog -> com.hp.hpl.sparta.ParseLog:
    void error(java.lang.String,java.lang.String,int) -> error
    void warning(java.lang.String,java.lang.String,int) -> warning
    void note(java.lang.String,java.lang.String,int) -> note
com.hp.hpl.sparta.ParseSource -> com.hp.hpl.sparta.ParseSource:
    com.hp.hpl.sparta.ParseLog DEFAULT_LOG -> DEFAULT_LOG
    int MAXLOOKAHEAD -> MAXLOOKAHEAD
    java.lang.String toString() -> toString
    java.lang.String getSystemId() -> getSystemId
    int getLineNumber() -> getLineNumber
com.hp.hpl.sparta.Parser -> com.hp.hpl.sparta.Parser:
    com.hp.hpl.sparta.Document parse(java.lang.String,java.io.Reader) -> parse
    com.hp.hpl.sparta.Document parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog) -> parse
    com.hp.hpl.sparta.Document parse(java.lang.String) -> parse
    com.hp.hpl.sparta.Document parse(char[]) -> parse
    com.hp.hpl.sparta.Document parse(byte[]) -> parse
    com.hp.hpl.sparta.Document parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,java.lang.String) -> parse
    com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog) -> parse
    com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream) -> parse
    com.hp.hpl.sparta.Document parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String) -> parse
    void parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseHandler) -> parse
    void parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,com.hp.hpl.sparta.ParseHandler) -> parse
    void parse(java.lang.String,com.hp.hpl.sparta.ParseHandler) -> parse
    void parse(char[],com.hp.hpl.sparta.ParseHandler) -> parse
    void parse(byte[],com.hp.hpl.sparta.ParseHandler) -> parse
    void parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,com.hp.hpl.sparta.ParseHandler) -> parse
    void parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseHandler) -> parse
    void parse(java.lang.String,java.io.InputStream,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler) -> parse
    void parse(java.lang.String,java.io.Reader,com.hp.hpl.sparta.ParseLog,java.lang.String,com.hp.hpl.sparta.ParseHandler) -> parse
com.hp.hpl.sparta.Sparta -> com.hp.hpl.sparta.Sparta:
    com.hp.hpl.sparta.Sparta$Internment internment_ -> internment_
    com.hp.hpl.sparta.Sparta$CacheFactory cacheFactory_ -> cacheFactory_
    java.lang.String intern(java.lang.String) -> intern
    void setInternment(com.hp.hpl.sparta.Sparta$Internment) -> setInternment
    com.hp.hpl.sparta.Sparta$Cache newCache() -> newCache
    void setCacheFactory(com.hp.hpl.sparta.Sparta$CacheFactory) -> setCacheFactory
com.hp.hpl.sparta.Sparta$1 -> com.hp.hpl.sparta.Sparta$1:
    java.util.Hashtable strings_ -> strings_
    java.lang.String intern(java.lang.String) -> intern
com.hp.hpl.sparta.Sparta$2 -> com.hp.hpl.sparta.Sparta$2:
    com.hp.hpl.sparta.Sparta$Cache create() -> create
com.hp.hpl.sparta.Sparta$Cache -> com.hp.hpl.sparta.Sparta$Cache:
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    int size() -> size
com.hp.hpl.sparta.Sparta$CacheFactory -> com.hp.hpl.sparta.Sparta$CacheFactory:
    com.hp.hpl.sparta.Sparta$Cache create() -> create
com.hp.hpl.sparta.Sparta$HashtableCache -> com.hp.hpl.sparta.Sparta$HashtableCache:
com.hp.hpl.sparta.Sparta$Internment -> com.hp.hpl.sparta.Sparta$Internment:
    java.lang.String intern(java.lang.String) -> intern
com.hp.hpl.sparta.Text -> com.hp.hpl.sparta.Text:
    java.lang.StringBuffer text_ -> text_
    java.lang.Object clone() -> clone
    void appendData(java.lang.String) -> appendData
    void appendData(char) -> appendData
    void appendData(char[],int,int) -> appendData
    java.lang.String getData() -> getData
    void setData(java.lang.String) -> setData
    void toXml(java.io.Writer) -> toXml
    void toString(java.io.Writer) -> toString
    java.util.Enumeration xpathSelectElements(java.lang.String) -> xpathSelectElements
    java.util.Enumeration xpathSelectStrings(java.lang.String) -> xpathSelectStrings
    com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String) -> xpathSelectElement
    java.lang.String xpathSelectString(java.lang.String) -> xpathSelectString
    boolean equals(java.lang.Object) -> equals
    int computeHashCode() -> computeHashCode
com.hp.hpl.sparta.XPathVisitor -> com.hp.hpl.sparta.XPathVisitor:
    java.lang.Boolean TRUE -> TRUE
    java.lang.Boolean FALSE -> FALSE
    com.hp.hpl.sparta.NodeListWithPosition nodelistRaw_ -> nodelistRaw_
    java.util.Vector nodelistFiltered_ -> nodelistFiltered_
    java.util.Enumeration nodesetIterator_ -> nodesetIterator_
    java.lang.Object node_ -> node_
    com.hp.hpl.sparta.XPathVisitor$BooleanStack exprStack_ -> exprStack_
    com.hp.hpl.sparta.Node contextNode_ -> contextNode_
    boolean multiLevel_ -> multiLevel_
    com.hp.hpl.sparta.xpath.XPath xpath_ -> xpath_
    void visit(com.hp.hpl.sparta.xpath.ThisNodeTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.ParentNodeTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.AllElementTest) -> visit
    void accumulateElements(com.hp.hpl.sparta.Document) -> accumulateElements
    void accumulateElements(com.hp.hpl.sparta.Element) -> accumulateElements
    void visit(com.hp.hpl.sparta.xpath.TextTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.ElementTest) -> visit
    void accumulateMatchingElements(com.hp.hpl.sparta.Document,java.lang.String) -> accumulateMatchingElements
    void accumulateMatchingElements(com.hp.hpl.sparta.Element,java.lang.String) -> accumulateMatchingElements
    void visit(com.hp.hpl.sparta.xpath.AttrTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.TrueExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrExistsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrLessExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextExistsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr) -> visit
    java.util.Enumeration getResultEnumeration() -> getResultEnumeration
    com.hp.hpl.sparta.Element getFirstResultElement() -> getFirstResultElement
    java.lang.String getFirstResultString() -> getFirstResultString
com.hp.hpl.sparta.XPathVisitor$1 -> com.hp.hpl.sparta.XPathVisitor$1:
com.hp.hpl.sparta.XPathVisitor$BooleanStack -> com.hp.hpl.sparta.XPathVisitor$BooleanStack:
    com.hp.hpl.sparta.XPathVisitor$BooleanStack$Item top_ -> top_
    void push(java.lang.Boolean) -> push
    java.lang.Boolean pop() -> pop
com.hp.hpl.sparta.XPathVisitor$BooleanStack$Item -> com.hp.hpl.sparta.XPathVisitor$BooleanStack$Item:
    java.lang.Boolean bool -> bool
    com.hp.hpl.sparta.XPathVisitor$BooleanStack$Item prev -> prev
com.hp.hpl.sparta.xpath.AllElementTest -> com.hp.hpl.sparta.xpath.AllElementTest:
    com.hp.hpl.sparta.xpath.AllElementTest INSTANCE -> INSTANCE
    void accept(com.hp.hpl.sparta.xpath.Visitor) -> accept
    boolean isStringValue() -> isStringValue
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.AttrCompareExpr -> com.hp.hpl.sparta.xpath.AttrCompareExpr:
    java.lang.String attrValue_ -> attrValue_
    java.lang.String getAttrValue() -> getAttrValue
    java.lang.String toString(java.lang.String) -> toString
com.hp.hpl.sparta.xpath.AttrEqualsExpr -> com.hp.hpl.sparta.xpath.AttrEqualsExpr:
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.AttrExistsExpr -> com.hp.hpl.sparta.xpath.AttrExistsExpr:
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.AttrExpr -> com.hp.hpl.sparta.xpath.AttrExpr:
    java.lang.String attrName_ -> attrName_
    java.lang.String getAttrName() -> getAttrName
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.AttrGreaterExpr -> com.hp.hpl.sparta.xpath.AttrGreaterExpr:
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.AttrLessExpr -> com.hp.hpl.sparta.xpath.AttrLessExpr:
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.AttrNotEqualsExpr -> com.hp.hpl.sparta.xpath.AttrNotEqualsExpr:
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.AttrRelationalExpr -> com.hp.hpl.sparta.xpath.AttrRelationalExpr:
    int attrValue_ -> attrValue_
    double getAttrValue() -> getAttrValue
    java.lang.String toString(java.lang.String) -> toString
com.hp.hpl.sparta.xpath.AttrTest -> com.hp.hpl.sparta.xpath.AttrTest:
    java.lang.String attrName_ -> attrName_
    void accept(com.hp.hpl.sparta.xpath.Visitor) -> accept
    boolean isStringValue() -> isStringValue
    java.lang.String getAttrName() -> getAttrName
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.BooleanExpr -> com.hp.hpl.sparta.xpath.BooleanExpr:
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
com.hp.hpl.sparta.xpath.BooleanExprVisitor -> com.hp.hpl.sparta.xpath.BooleanExprVisitor:
    void visit(com.hp.hpl.sparta.xpath.TrueExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrExistsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrNotEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrLessExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrGreaterExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextExistsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextNotEqualsExpr) -> visit
    void visit(com.hp.hpl.sparta.xpath.PositionEqualsExpr) -> visit
com.hp.hpl.sparta.xpath.ElementTest -> com.hp.hpl.sparta.xpath.ElementTest:
    java.lang.String tagName_ -> tagName_
    void accept(com.hp.hpl.sparta.xpath.Visitor) -> accept
    boolean isStringValue() -> isStringValue
    java.lang.String getTagName() -> getTagName
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.ExprFactory -> com.hp.hpl.sparta.xpath.ExprFactory:
    com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer) -> createExpr
com.hp.hpl.sparta.xpath.NodeTest -> com.hp.hpl.sparta.xpath.NodeTest:
    void accept(com.hp.hpl.sparta.xpath.Visitor) -> accept
    boolean isStringValue() -> isStringValue
com.hp.hpl.sparta.xpath.NodeTestVisitor -> com.hp.hpl.sparta.xpath.NodeTestVisitor:
    void visit(com.hp.hpl.sparta.xpath.AllElementTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.ThisNodeTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.ParentNodeTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.ElementTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.AttrTest) -> visit
    void visit(com.hp.hpl.sparta.xpath.TextTest) -> visit
com.hp.hpl.sparta.xpath.ParentNodeTest -> com.hp.hpl.sparta.xpath.ParentNodeTest:
    com.hp.hpl.sparta.xpath.ParentNodeTest INSTANCE -> INSTANCE
    void accept(com.hp.hpl.sparta.xpath.Visitor) -> accept
    boolean isStringValue() -> isStringValue
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.PositionEqualsExpr -> com.hp.hpl.sparta.xpath.PositionEqualsExpr:
    int position_ -> position_
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    int getPosition() -> getPosition
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.SimpleStreamTokenizer -> com.hp.hpl.sparta.xpath.SimpleStreamTokenizer:
    int TT_EOF -> TT_EOF
    int TT_NUMBER -> TT_NUMBER
    int TT_WORD -> TT_WORD
    int ttype -> ttype
    int nval -> nval
    java.lang.String sval -> sval
    int WHITESPACE -> WHITESPACE
    int QUOTE -> QUOTE
    java.lang.StringBuffer buf_ -> buf_
    int nextType_ -> nextType_
    java.io.Reader reader_ -> reader_
    int[] charType_ -> charType_
    boolean pushedBack_ -> pushedBack_
    char inQuote_ -> inQuote_
    java.lang.String toString() -> toString
    void ordinaryChar(char) -> ordinaryChar
    void wordChars(char,char) -> wordChars
    int nextToken() -> nextToken
    void pushBack() -> pushBack
com.hp.hpl.sparta.xpath.Step -> com.hp.hpl.sparta.xpath.Step:
    com.hp.hpl.sparta.xpath.Step DOT -> DOT
    com.hp.hpl.sparta.xpath.NodeTest nodeTest_ -> nodeTest_
    com.hp.hpl.sparta.xpath.BooleanExpr predicate_ -> predicate_
    boolean multiLevel_ -> multiLevel_
    java.lang.String toString() -> toString
    boolean isMultiLevel() -> isMultiLevel
    boolean isStringValue() -> isStringValue
    com.hp.hpl.sparta.xpath.NodeTest getNodeTest() -> getNodeTest
    com.hp.hpl.sparta.xpath.BooleanExpr getPredicate() -> getPredicate
com.hp.hpl.sparta.xpath.TextCompareExpr -> com.hp.hpl.sparta.xpath.TextCompareExpr:
    java.lang.String value_ -> value_
    java.lang.String getValue() -> getValue
    java.lang.String toString(java.lang.String) -> toString
com.hp.hpl.sparta.xpath.TextEqualsExpr -> com.hp.hpl.sparta.xpath.TextEqualsExpr:
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.TextExistsExpr -> com.hp.hpl.sparta.xpath.TextExistsExpr:
    com.hp.hpl.sparta.xpath.TextExistsExpr INSTANCE -> INSTANCE
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.TextNotEqualsExpr -> com.hp.hpl.sparta.xpath.TextNotEqualsExpr:
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.TextTest -> com.hp.hpl.sparta.xpath.TextTest:
    com.hp.hpl.sparta.xpath.TextTest INSTANCE -> INSTANCE
    void accept(com.hp.hpl.sparta.xpath.Visitor) -> accept
    boolean isStringValue() -> isStringValue
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.ThisNodeTest -> com.hp.hpl.sparta.xpath.ThisNodeTest:
    com.hp.hpl.sparta.xpath.ThisNodeTest INSTANCE -> INSTANCE
    void accept(com.hp.hpl.sparta.xpath.Visitor) -> accept
    boolean isStringValue() -> isStringValue
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.TrueExpr -> com.hp.hpl.sparta.xpath.TrueExpr:
    com.hp.hpl.sparta.xpath.TrueExpr INSTANCE -> INSTANCE
    void accept(com.hp.hpl.sparta.xpath.BooleanExprVisitor) -> accept
    java.lang.String toString() -> toString
com.hp.hpl.sparta.xpath.Visitor -> com.hp.hpl.sparta.xpath.Visitor:
com.hp.hpl.sparta.xpath.XPath -> com.hp.hpl.sparta.xpath.XPath:
    int ASSERTION -> ASSERTION
    java.util.Stack steps_ -> steps_
    boolean absolute_ -> absolute_
    java.lang.String string_ -> string_
    java.util.Hashtable cache_ -> cache_
    java.lang.String toString() -> toString
    java.lang.String generateString() -> generateString
    boolean isAbsolute() -> isAbsolute
    boolean isStringValue() -> isStringValue
    java.util.Enumeration getSteps() -> getSteps
    java.lang.String getIndexingAttrName() -> getIndexingAttrName
    java.lang.String getIndexingAttrNameOfEquals() -> getIndexingAttrNameOfEquals
    java.lang.Object clone() -> clone
    com.hp.hpl.sparta.xpath.XPath get(java.lang.String) -> get
    com.hp.hpl.sparta.xpath.XPath get(boolean,com.hp.hpl.sparta.xpath.Step[]) -> get
    boolean isStringValue(java.lang.String) -> isStringValue
com.hp.hpl.sparta.xpath.XPathException -> com.hp.hpl.sparta.xpath.XPathException:
    java.lang.Throwable cause_ -> cause_
    java.lang.Throwable getCause() -> getCause
    java.lang.String toString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer) -> toString
    java.lang.String tokenToString(com.hp.hpl.sparta.xpath.SimpleStreamTokenizer) -> tokenToString
com.nostra13.universalimageloader.cache.disc.DiscCacheAware -> com.nostra13.universalimageloader.a.a.a:
    java.io.File get(java.lang.String) -> a
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> a
    boolean save(java.lang.String,android.graphics.Bitmap) -> a
    void close() -> a
    void clear() -> b
com.nostra13.universalimageloader.cache.disc.DiskCache -> com.nostra13.universalimageloader.a.a.b:
com.nostra13.universalimageloader.cache.disc.impl.BaseDiscCache -> com.nostra13.universalimageloader.a.a.a.a:
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> a
    java.io.File cacheDir -> b
    java.io.File reserveCacheDir -> c
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> d
    int bufferSize -> e
    android.graphics.Bitmap$CompressFormat compressFormat -> f
    int compressQuality -> g
    java.io.File get(java.lang.String) -> a
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> a
    boolean save(java.lang.String,android.graphics.Bitmap) -> a
    void close() -> a
    void clear() -> b
    java.io.File getFile(java.lang.String) -> b
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache -> com.nostra13.universalimageloader.a.a.a.b:
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache -> com.nostra13.universalimageloader.a.a.a.a.a:
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> a
    java.io.File directory -> c
    java.io.File journalFile -> d
    java.io.File journalFileTmp -> e
    java.io.File journalFileBackup -> f
    int appVersion -> g
    long maxSize -> h
    int maxFileCount -> i
    int valueCount -> j
    long size -> k
    int fileCount -> l
    java.io.Writer journalWriter -> m
    java.util.LinkedHashMap lruEntries -> n
    int redundantOpCount -> o
    long nextSequenceNumber -> p
    java.util.concurrent.ThreadPoolExecutor executorService -> b
    java.util.concurrent.Callable cleanupCallable -> q
    java.io.OutputStream NULL_OUTPUT_STREAM -> r
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache open(java.io.File,int,int,long,int) -> a
    void readJournal() -> f
    void readJournalLine(java.lang.String) -> d
    void processJournal() -> g
    void rebuildJournal() -> h
    void deleteIfExists(java.io.File) -> a
    void renameTo(java.io.File,java.io.File,boolean) -> a
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot get(java.lang.String) -> a
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String) -> b
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String,long) -> a
    java.io.File getDirectory() -> a
    long getMaxSize() -> b
    int getMaxFileCount() -> c
    void completeEdit(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> a
    boolean journalRebuildRequired() -> i
    boolean remove(java.lang.String) -> c
    void checkNotClosed() -> j
    void close() -> close
    void trimToSize() -> k
    void trimToFileCount() -> l
    void delete() -> d
    void validateKey(java.lang.String) -> e
    java.io.Writer access$000(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> a
    void access$100(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> b
    void access$200(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> c
    boolean access$300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> d
    void access$400(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> e
    int access$502(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,int) -> a
    int access$1900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> f
    java.io.File access$2000(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> g
    java.io.OutputStream access$2100() -> e
    void access$2300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> a
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1 -> com.nostra13.universalimageloader.a.a.a.a.b:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> a
    java.lang.Void call() -> a
    java.lang.Object call() -> call
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2 -> com.nostra13.universalimageloader.a.a.a.a.c:
    void write(int) -> write
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor -> com.nostra13.universalimageloader.a.a.a.a.d:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry entry -> b
    boolean[] written -> c
    boolean hasErrors -> d
    boolean committed -> e
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> a
    java.io.OutputStream newOutputStream(int) -> a
    void commit() -> a
    void abort() -> b
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry access$1500(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> a
    boolean[] access$1600(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> b
    boolean access$2402(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> a
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor$FaultHidingOutputStream -> com.nostra13.universalimageloader.a.a.a.a.e:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor this$1 -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry -> com.nostra13.universalimageloader.a.a.a.a.f:
    java.lang.String key -> b
    long[] lengths -> c
    boolean readable -> d
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor currentEditor -> e
    long sequenceNumber -> f
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> a
    java.lang.String getLengths() -> a
    void setLengths(java.lang.String[]) -> a
    java.io.IOException invalidLengths(java.lang.String[]) -> b
    java.io.File getCleanFile(int) -> a
    java.io.File getDirtyFile(int) -> b
    boolean access$702(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,boolean) -> a
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$802(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> a
    void access$900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,java.lang.String[]) -> a
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$800(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> a
    long[] access$1100(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> b
    java.lang.String access$1200(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> c
    boolean access$700(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> d
    long access$1300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> e
    long access$1302(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,long) -> a
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot -> com.nostra13.universalimageloader.a.a.a.a.g:
    java.lang.String key -> b
    long sequenceNumber -> c
    java.io.File[] files -> d
    java.io.InputStream[] ins -> e
    long[] lengths -> f
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> a
    java.io.File getFile(int) -> a
    void close() -> close
com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache -> com.nostra13.universalimageloader.a.a.a.a.h:
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> a
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache -> b
    java.io.File reserveCacheDir -> g
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> c
    int bufferSize -> d
    android.graphics.Bitmap$CompressFormat compressFormat -> e
    int compressQuality -> f
    void initCache(java.io.File,java.io.File,long,int) -> a
    java.io.File get(java.lang.String) -> a
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> a
    boolean save(java.lang.String,android.graphics.Bitmap) -> a
    void close() -> a
    void clear() -> b
    java.lang.String getKey(java.lang.String) -> b
    void setReserveCacheDir(java.io.File) -> a
com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader -> com.nostra13.universalimageloader.a.a.a.a.i:
    java.io.InputStream in -> a
    java.nio.charset.Charset charset -> b
    byte[] buf -> c
    int pos -> d
    int end -> e
    void close() -> close
    java.lang.String readLine() -> a
    void fillBuf() -> b
    java.nio.charset.Charset access$000(com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader) -> a
com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader$1 -> com.nostra13.universalimageloader.a.a.a.a.j:
    com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader this$0 -> a
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.cache.disc.impl.ext.Util -> com.nostra13.universalimageloader.a.a.a.a.k:
    java.nio.charset.Charset US_ASCII -> a
    java.nio.charset.Charset UTF_8 -> b
    void deleteContents(java.io.File) -> a
    void closeQuietly(java.io.Closeable) -> a
com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator -> com.nostra13.universalimageloader.a.a.b.a:
    java.lang.String generate(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.nostra13.universalimageloader.a.a.b.b:
    java.lang.String generate(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator -> com.nostra13.universalimageloader.a.a.b.c:
    java.lang.String generate(java.lang.String) -> a
    byte[] getMD5(byte[]) -> a
com.nostra13.universalimageloader.cache.memory.MemoryCache -> com.nostra13.universalimageloader.a.b.a:
com.nostra13.universalimageloader.cache.memory.MemoryCacheAware -> com.nostra13.universalimageloader.a.b.b:
    boolean put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    java.util.Collection keys() -> a
    void clear() -> b
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.nostra13.universalimageloader.a.b.a.a:
    com.nostra13.universalimageloader.cache.memory.MemoryCache cache -> a
    java.util.Comparator keyComparator -> b
    boolean put(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap get(java.lang.String) -> a
    void remove(java.lang.String) -> b
    void clear() -> b
    java.util.Collection keys() -> a
    void remove(java.lang.Object) -> b
    java.lang.Object get(java.lang.Object) -> a
    boolean put(java.lang.Object,java.lang.Object) -> a
com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache -> com.nostra13.universalimageloader.a.b.a.b:
    java.util.LinkedHashMap map -> a
    int maxSize -> b
    int size -> c
    android.graphics.Bitmap get(java.lang.String) -> a
    boolean put(java.lang.String,android.graphics.Bitmap) -> a
    void trimToSize(int) -> a
    void remove(java.lang.String) -> b
    java.util.Collection keys() -> a
    void clear() -> b
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> b
    java.lang.String toString() -> toString
    void remove(java.lang.Object) -> b
    java.lang.Object get(java.lang.Object) -> a
    boolean put(java.lang.Object,java.lang.Object) -> a
com.nostra13.universalimageloader.core.DefaultConfigurationFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory:
    java.util.concurrent.Executor createExecutor(int,int,com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> createExecutor
    java.util.concurrent.Executor createTaskDistributor() -> createTaskDistributor
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> createFileNameGenerator
    com.nostra13.universalimageloader.cache.disc.DiskCache createDiskCache(android.content.Context,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,long,int) -> createDiskCache
    java.io.File createReserveDiskCacheDir(android.content.Context) -> createReserveDiskCacheDir
    com.nostra13.universalimageloader.cache.memory.MemoryCache createMemoryCache(int) -> createMemoryCache
    com.nostra13.universalimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> createImageDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder createImageDecoder(boolean) -> createImageDecoder
    com.nostra13.universalimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> createBitmapDisplayer
    java.util.concurrent.ThreadFactory createThreadFactory(int,java.lang.String) -> createThreadFactory
com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> poolNumber
    java.lang.ThreadGroup group -> group
    java.util.concurrent.atomic.AtomicInteger threadNumber -> threadNumber
    java.lang.String namePrefix -> namePrefix
    int threadPriority -> threadPriority
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.DisplayBitmapTask -> com.nostra13.universalimageloader.core.DisplayBitmapTask:
    java.lang.String LOG_DISPLAY_IMAGE_IN_IMAGEAWARE -> LOG_DISPLAY_IMAGE_IN_IMAGEAWARE
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_REUSED -> LOG_TASK_CANCELLED_IMAGEAWARE_REUSED
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED -> LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED
    android.graphics.Bitmap bitmap -> bitmap
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> loadedFrom
    void run() -> run
    boolean isViewWasReused() -> isViewWasReused
com.nostra13.universalimageloader.core.DisplayImageOptions -> com.nostra13.universalimageloader.core.DisplayImageOptions:
    int imageResOnLoading -> imageResOnLoading
    int imageResForEmptyUri -> imageResForEmptyUri
    int imageResOnFail -> imageResOnFail
    android.graphics.drawable.Drawable imageOnLoading -> imageOnLoading
    android.graphics.drawable.Drawable imageForEmptyUri -> imageForEmptyUri
    android.graphics.drawable.Drawable imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisk -> cacheOnDisk
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    boolean considerExifParams -> considerExifParams
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean isSyncLoading -> isSyncLoading
    boolean shouldShowImageOnLoading() -> shouldShowImageOnLoading
    boolean shouldShowImageForEmptyUri() -> shouldShowImageForEmptyUri
    boolean shouldShowImageOnFail() -> shouldShowImageOnFail
    boolean shouldPreProcess() -> shouldPreProcess
    boolean shouldPostProcess() -> shouldPostProcess
    boolean shouldDelayBeforeLoading() -> shouldDelayBeforeLoading
    android.graphics.drawable.Drawable getImageOnLoading(android.content.res.Resources) -> getImageOnLoading
    android.graphics.drawable.Drawable getImageForEmptyUri(android.content.res.Resources) -> getImageForEmptyUri
    android.graphics.drawable.Drawable getImageOnFail(android.content.res.Resources) -> getImageOnFail
    boolean isResetViewBeforeLoading() -> isResetViewBeforeLoading
    boolean isCacheInMemory() -> isCacheInMemory
    boolean isCacheOnDisk() -> isCacheOnDisk
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
    int getDelayBeforeLoading() -> getDelayBeforeLoading
    boolean isConsiderExifParams() -> isConsiderExifParams
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor() -> getPreProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor() -> getPostProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer() -> getDisplayer
    android.os.Handler getHandler() -> getHandler
    boolean isSyncLoading() -> isSyncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions createSimple() -> createSimple
    int access$1900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1900
    int access$2000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2000
    int access$2100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2100
    android.graphics.drawable.Drawable access$2200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2200
    android.graphics.drawable.Drawable access$2300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2300
    android.graphics.drawable.Drawable access$2400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2400
    boolean access$2500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2500
    boolean access$2600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2600
    boolean access$2700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2700
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$2800(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2800
    android.graphics.BitmapFactory$Options access$2900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2900
    int access$3000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3000
    boolean access$3100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3100
    java.lang.Object access$3200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3200
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3300
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3400
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$3500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3500
    android.os.Handler access$3600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3600
    boolean access$3700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3700
com.nostra13.universalimageloader.core.DisplayImageOptions$1 -> com.nostra13.universalimageloader.core.DisplayImageOptions$1:
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> com.nostra13.universalimageloader.core.DisplayImageOptions$Builder:
    int imageResOnLoading -> imageResOnLoading
    int imageResForEmptyUri -> imageResForEmptyUri
    int imageResOnFail -> imageResOnFail
    android.graphics.drawable.Drawable imageOnLoading -> imageOnLoading
    android.graphics.drawable.Drawable imageForEmptyUri -> imageForEmptyUri
    android.graphics.drawable.Drawable imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisk -> cacheOnDisk
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    boolean considerExifParams -> considerExifParams
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean isSyncLoading -> isSyncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showStubImage(int) -> showStubImage
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(int) -> showImageOnLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(android.graphics.drawable.Drawable) -> showImageOnLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(int) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(android.graphics.drawable.Drawable) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(int) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(android.graphics.drawable.Drawable) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading() -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading(boolean) -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory() -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory(boolean) -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc() -> cacheOnDisc
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc(boolean) -> cacheOnDisc
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisk(boolean) -> cacheOnDisk
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.universalimageloader.core.assist.ImageScaleType) -> imageScaleType
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder bitmapConfig(android.graphics.Bitmap$Config) -> bitmapConfig
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder decodingOptions(android.graphics.BitmapFactory$Options) -> decodingOptions
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder delayBeforeLoading(int) -> delayBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder extraForDownloader(java.lang.Object) -> extraForDownloader
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder considerExifParams(boolean) -> considerExifParams
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder preProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> preProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder postProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> postProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.universalimageloader.core.display.BitmapDisplayer) -> displayer
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder syncLoading(boolean) -> syncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder handler(android.os.Handler) -> handler
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.universalimageloader.core.DisplayImageOptions) -> cloneFrom
    com.nostra13.universalimageloader.core.DisplayImageOptions build() -> build
    int access$000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$200
    android.graphics.drawable.Drawable access$300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$300
    android.graphics.drawable.Drawable access$400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$400
    android.graphics.drawable.Drawable access$500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$500
    boolean access$600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$600
    boolean access$700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$700
    boolean access$800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$800
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$900(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$900
    android.graphics.BitmapFactory$Options access$1000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1000
    int access$1100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1100
    boolean access$1200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1200
    java.lang.Object access$1300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1300
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1400
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1500
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$1600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1600
    android.os.Handler access$1700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1700
    boolean access$1800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1800
com.nostra13.universalimageloader.core.ImageLoader -> com.nostra13.universalimageloader.core.ImageLoader:
    java.lang.String TAG -> TAG
    java.lang.String LOG_INIT_CONFIG -> LOG_INIT_CONFIG
    java.lang.String LOG_DESTROY -> LOG_DESTROY
    java.lang.String LOG_LOAD_IMAGE_FROM_MEMORY_CACHE -> LOG_LOAD_IMAGE_FROM_MEMORY_CACHE
    java.lang.String WARNING_RE_INIT_CONFIG -> WARNING_RE_INIT_CONFIG
    java.lang.String ERROR_WRONG_ARGUMENTS -> ERROR_WRONG_ARGUMENTS
    java.lang.String ERROR_NOT_INIT -> ERROR_NOT_INIT
    java.lang.String ERROR_INIT_CONFIG_WITH_NULL -> ERROR_INIT_CONFIG_WITH_NULL
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener emptyListener -> emptyListener
    com.nostra13.universalimageloader.core.ImageLoader instance -> instance
    com.nostra13.universalimageloader.core.ImageLoader getInstance() -> getInstance
    void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> init
    boolean isInited() -> isInited
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> displayImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> loadImage
    android.graphics.Bitmap loadImageSync(java.lang.String) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    void checkConfiguration() -> checkConfiguration
    com.nostra13.universalimageloader.cache.memory.MemoryCache getMemoryCache() -> getMemoryCache
    void clearMemoryCache() -> clearMemoryCache
    com.nostra13.universalimageloader.cache.disc.DiskCache getDiscCache() -> getDiscCache
    com.nostra13.universalimageloader.cache.disc.DiskCache getDiskCache() -> getDiskCache
    void clearDiscCache() -> clearDiscCache
    void clearDiskCache() -> clearDiskCache
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    java.lang.String getLoadingUriForView(android.widget.ImageView) -> getLoadingUriForView
    void cancelDisplayTask(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTask
    void cancelDisplayTask(android.widget.ImageView) -> cancelDisplayTask
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void destroy() -> destroy
    android.os.Handler defineHandler(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defineHandler
com.nostra13.universalimageloader.core.ImageLoader$1 -> com.nostra13.universalimageloader.core.ImageLoader$1:
com.nostra13.universalimageloader.core.ImageLoader$SyncImageLoadingListener -> com.nostra13.universalimageloader.core.ImageLoader$SyncImageLoadingListener:
    android.graphics.Bitmap loadedImage -> loadedImage
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    android.graphics.Bitmap getLoadedBitmap() -> getLoadedBitmap
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration:
    android.content.res.Resources resources -> resources
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiskCache -> maxImageWidthForDiskCache
    int maxImageHeightForDiskCache -> maxImageHeightForDiskCache
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiskCache -> processorForDiskCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    com.nostra13.universalimageloader.cache.memory.MemoryCache memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiskCache diskCache -> diskCache
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration createDefault(android.content.Context) -> createDefault
    com.nostra13.universalimageloader.core.assist.ImageSize getMaxImageSize() -> getMaxImageSize
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1 -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder:
    java.lang.String WARNING_OVERLAP_DISK_CACHE_PARAMS -> WARNING_OVERLAP_DISK_CACHE_PARAMS
    java.lang.String WARNING_OVERLAP_DISK_CACHE_NAME_GENERATOR -> WARNING_OVERLAP_DISK_CACHE_NAME_GENERATOR
    java.lang.String WARNING_OVERLAP_MEMORY_CACHE -> WARNING_OVERLAP_MEMORY_CACHE
    java.lang.String WARNING_OVERLAP_EXECUTOR -> WARNING_OVERLAP_EXECUTOR
    int DEFAULT_THREAD_POOL_SIZE -> DEFAULT_THREAD_POOL_SIZE
    int DEFAULT_THREAD_PRIORITY -> DEFAULT_THREAD_PRIORITY
    com.nostra13.universalimageloader.core.assist.QueueProcessingType DEFAULT_TASK_PROCESSING_TYPE -> DEFAULT_TASK_PROCESSING_TYPE
    android.content.Context context -> context
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiskCache -> maxImageWidthForDiskCache
    int maxImageHeightForDiskCache -> maxImageHeightForDiskCache
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiskCache -> processorForDiskCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    boolean denyCacheImageMultipleSizesInMemory -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    int memoryCacheSize -> memoryCacheSize
    long diskCacheSize -> diskCacheSize
    int diskCacheFileCount -> diskCacheFileCount
    com.nostra13.universalimageloader.cache.memory.MemoryCache memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiskCache diskCache -> diskCache
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator diskCacheFileNameGenerator -> diskCacheFileNameGenerator
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    boolean writeLogs -> writeLogs
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheExtraOptions(int,int) -> memoryCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheExtraOptions(int,int,com.nostra13.universalimageloader.core.process.BitmapProcessor) -> discCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheExtraOptions(int,int,com.nostra13.universalimageloader.core.process.BitmapProcessor) -> diskCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutor(java.util.concurrent.Executor) -> taskExecutor
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutorForCachedImages(java.util.concurrent.Executor) -> taskExecutorForCachedImages
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPoolSize(int) -> threadPoolSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> threadPriority
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder denyCacheImageMultipleSizesInMemory() -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> tasksProcessingOrder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSize(int) -> memoryCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSizePercentage(int) -> memoryCacheSizePercentage
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCache(com.nostra13.universalimageloader.cache.memory.MemoryCache) -> memoryCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheSize(int) -> discCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheSize(int) -> diskCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileCount(int) -> discCacheFileCount
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheFileCount(int) -> diskCacheFileCount
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> discCacheFileNameGenerator
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> diskCacheFileNameGenerator
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCache(com.nostra13.universalimageloader.cache.disc.DiskCache) -> discCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCache(com.nostra13.universalimageloader.cache.disc.DiskCache) -> diskCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDownloader(com.nostra13.universalimageloader.core.download.ImageDownloader) -> imageDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDecoder(com.nostra13.universalimageloader.core.decode.ImageDecoder) -> imageDecoder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder defaultDisplayImageOptions(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defaultDisplayImageOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder writeDebugLogs() -> writeDebugLogs
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> build
    void initEmptyFieldsWithDefaultValues() -> initEmptyFieldsWithDefaultValues
    android.content.Context access$000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$200
    int access$300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$300
    int access$400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$400
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$500
    java.util.concurrent.Executor access$600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$600
    java.util.concurrent.Executor access$700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$700
    int access$800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$800
    int access$900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$900
    com.nostra13.universalimageloader.core.assist.QueueProcessingType access$1000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1000
    com.nostra13.universalimageloader.cache.disc.DiskCache access$1100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1100
    com.nostra13.universalimageloader.cache.memory.MemoryCache access$1200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1200
    com.nostra13.universalimageloader.core.DisplayImageOptions access$1300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1300
    com.nostra13.universalimageloader.core.download.ImageDownloader access$1400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1400
    com.nostra13.universalimageloader.core.decode.ImageDecoder access$1500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1500
    boolean access$1600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1600
    boolean access$1700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1700
    boolean access$1800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1800
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$NetworkDeniedImageDownloader -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$NetworkDeniedImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$SlowNetworkImageDownloader -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$SlowNetworkImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.ImageLoaderEngine -> com.nostra13.universalimageloader.core.ImageLoaderEngine:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    java.util.concurrent.Executor taskDistributor -> taskDistributor
    java.util.Map cacheKeysForImageAwares -> cacheKeysForImageAwares
    java.util.Map uriLocks -> uriLocks
    java.util.concurrent.atomic.AtomicBoolean paused -> paused
    java.util.concurrent.atomic.AtomicBoolean networkDenied -> networkDenied
    java.util.concurrent.atomic.AtomicBoolean slowNetwork -> slowNetwork
    java.lang.Object pauseLock -> pauseLock
    void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> submit
    void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask) -> submit
    void initExecutorsIfNeed() -> initExecutorsIfNeed
    java.util.concurrent.Executor createTaskExecutor() -> createTaskExecutor
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    void prepareDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware,java.lang.String) -> prepareDisplayTaskFor
    void cancelDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTaskFor
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void fireCallback(java.lang.Runnable) -> fireCallback
    java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> getLockForUri
    java.util.concurrent.atomic.AtomicBoolean getPause() -> getPause
    java.lang.Object getPauseLock() -> getPauseLock
    boolean isNetworkDenied() -> isNetworkDenied
    boolean isSlowNetwork() -> isSlowNetwork
    void access$000(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$000
    java.util.concurrent.Executor access$100(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$100
    java.util.concurrent.Executor access$200(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$200
com.nostra13.universalimageloader.core.ImageLoaderEngine$1 -> com.nostra13.universalimageloader.core.ImageLoaderEngine$1:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask val$task -> val$task
    com.nostra13.universalimageloader.core.ImageLoaderEngine this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.ImageLoadingInfo -> com.nostra13.universalimageloader.core.ImageLoadingInfo:
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener -> progressListener
    java.util.concurrent.locks.ReentrantLock loadFromUriLock -> loadFromUriLock
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask:
    java.lang.String LOG_WAITING_FOR_RESUME -> LOG_WAITING_FOR_RESUME
    java.lang.String LOG_RESUME_AFTER_PAUSE -> LOG_RESUME_AFTER_PAUSE
    java.lang.String LOG_DELAY_BEFORE_LOADING -> LOG_DELAY_BEFORE_LOADING
    java.lang.String LOG_START_DISPLAY_IMAGE_TASK -> LOG_START_DISPLAY_IMAGE_TASK
    java.lang.String LOG_WAITING_FOR_IMAGE_LOADED -> LOG_WAITING_FOR_IMAGE_LOADED
    java.lang.String LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING -> LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING
    java.lang.String LOG_LOAD_IMAGE_FROM_NETWORK -> LOG_LOAD_IMAGE_FROM_NETWORK
    java.lang.String LOG_LOAD_IMAGE_FROM_DISK_CACHE -> LOG_LOAD_IMAGE_FROM_DISK_CACHE
    java.lang.String LOG_RESIZE_CACHED_IMAGE_FILE -> LOG_RESIZE_CACHED_IMAGE_FILE
    java.lang.String LOG_PREPROCESS_IMAGE -> LOG_PREPROCESS_IMAGE
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    java.lang.String LOG_CACHE_IMAGE_IN_MEMORY -> LOG_CACHE_IMAGE_IN_MEMORY
    java.lang.String LOG_CACHE_IMAGE_ON_DISK -> LOG_CACHE_IMAGE_ON_DISK
    java.lang.String LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISK -> LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISK
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_REUSED -> LOG_TASK_CANCELLED_IMAGEAWARE_REUSED
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED -> LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED
    java.lang.String LOG_TASK_INTERRUPTED -> LOG_TASK_INTERRUPTED
    java.lang.String ERROR_PRE_PROCESSOR_NULL -> ERROR_PRE_PROCESSOR_NULL
    java.lang.String ERROR_POST_PROCESSOR_NULL -> ERROR_POST_PROCESSOR_NULL
    java.lang.String ERROR_PROCESSOR_FOR_DISK_CACHE_NULL -> ERROR_PROCESSOR_FOR_DISK_CACHE_NULL
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener -> progressListener
    boolean syncLoading -> syncLoading
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> loadedFrom
    void run() -> run
    boolean waitIfPaused() -> waitIfPaused
    boolean delayIfNeed() -> delayIfNeed
    android.graphics.Bitmap tryLoadBitmap() -> tryLoadBitmap
    android.graphics.Bitmap decodeImage(java.lang.String) -> decodeImage
    boolean tryCacheImageOnDisk() -> tryCacheImageOnDisk
    boolean downloadImage() -> downloadImage
    boolean resizeAndSaveImage(int,int) -> resizeAndSaveImage
    boolean onBytesCopied(int,int) -> onBytesCopied
    boolean fireProgressEvent(int,int) -> fireProgressEvent
    void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> fireFailEvent
    void fireCancelEvent() -> fireCancelEvent
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    void checkTaskNotActual() -> checkTaskNotActual
    boolean isTaskNotActual() -> isTaskNotActual
    void checkViewCollected() -> checkViewCollected
    boolean isViewCollected() -> isViewCollected
    void checkViewReused() -> checkViewReused
    boolean isViewReused() -> isViewReused
    void checkTaskInterrupted() -> checkTaskInterrupted
    boolean isTaskInterrupted() -> isTaskInterrupted
    java.lang.String getLoadingUri() -> getLoadingUri
    void runTask(java.lang.Runnable,boolean,android.os.Handler,com.nostra13.universalimageloader.core.ImageLoaderEngine) -> runTask
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration access$000(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> access$000
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1:
    int val$current -> val$current
    int val$total -> val$total
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType val$failType -> val$failType
    java.lang.Throwable val$failCause -> val$failCause
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask -> com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask:
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    android.graphics.Bitmap bitmap -> bitmap
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    void run() -> run
com.nostra13.universalimageloader.core.assist.ContentLengthInputStream -> com.nostra13.universalimageloader.core.assist.ContentLengthInputStream:
    java.io.InputStream stream -> stream
    int length -> length
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    boolean markSupported() -> markSupported
com.nostra13.universalimageloader.core.assist.FailReason -> com.nostra13.universalimageloader.core.assist.FailReason:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType type -> type
    java.lang.Throwable cause -> cause
    com.nostra13.universalimageloader.core.assist.FailReason$FailType getType() -> getType
    java.lang.Throwable getCause() -> getCause
com.nostra13.universalimageloader.core.assist.FailReason$FailType -> com.nostra13.universalimageloader.core.assist.FailReason$FailType:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType IO_ERROR -> IO_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType DECODING_ERROR -> DECODING_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType NETWORK_DENIED -> NETWORK_DENIED
    com.nostra13.universalimageloader.core.assist.FailReason$FailType OUT_OF_MEMORY -> OUT_OF_MEMORY
    com.nostra13.universalimageloader.core.assist.FailReason$FailType UNKNOWN -> UNKNOWN
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] values() -> values
    com.nostra13.universalimageloader.core.assist.FailReason$FailType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> com.nostra13.universalimageloader.core.assist.FlushedInputStream:
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageScaleType -> com.nostra13.universalimageloader.core.assist.ImageScaleType:
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE -> NONE
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_POWER_OF_2 -> IN_SAMPLE_POWER_OF_2
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT -> IN_SAMPLE_INT
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY -> EXACTLY
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY_STRETCHED -> EXACTLY_STRETCHED
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ImageSize -> com.nostra13.universalimageloader.core.assist.ImageSize:
    int TO_STRING_MAX_LENGHT -> TO_STRING_MAX_LENGHT
    java.lang.String SEPARATOR -> SEPARATOR
    int width -> width
    int height -> height
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ImageSize scaleDown(int) -> scaleDown
    com.nostra13.universalimageloader.core.assist.ImageSize scale(float) -> scale
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.LoadedFrom -> com.nostra13.universalimageloader.core.assist.LoadedFrom:
    com.nostra13.universalimageloader.core.assist.LoadedFrom NETWORK -> NETWORK
    com.nostra13.universalimageloader.core.assist.LoadedFrom DISC_CACHE -> DISC_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom MEMORY_CACHE -> MEMORY_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] values() -> values
    com.nostra13.universalimageloader.core.assist.LoadedFrom valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.QueueProcessingType -> com.nostra13.universalimageloader.core.assist.QueueProcessingType:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType FIFO -> FIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType LIFO -> LIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values() -> values
    com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ViewScaleType -> com.nostra13.universalimageloader.core.assist.ViewScaleType:
    com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE -> FIT_INSIDE
    com.nostra13.universalimageloader.core.assist.ViewScaleType CROP -> CROP
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> fromImageView
com.nostra13.universalimageloader.core.assist.ViewScaleType$1 -> com.nostra13.universalimageloader.core.assist.ViewScaleType$1:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> $SwitchMap$android$widget$ImageView$ScaleType
com.nostra13.universalimageloader.core.assist.deque.BlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.BlockingDeque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    void push(java.lang.Object) -> push
com.nostra13.universalimageloader.core.assist.deque.Deque -> com.nostra13.universalimageloader.core.assist.deque.Deque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node first -> first
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node last -> last
    int count -> count
    int capacity -> capacity
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.util.concurrent.locks.Condition notEmpty -> notEmpty
    java.util.concurrent.locks.Condition notFull -> notFull
    boolean linkFirst(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkFirst
    boolean linkLast(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkLast
    java.lang.Object unlinkFirst() -> unlinkFirst
    java.lang.Object unlinkLast() -> unlinkLast
    void unlink(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> unlink
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    int remainingCapacity() -> remainingCapacity
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1 -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1:
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
    java.lang.Object nextItem -> nextItem
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node lastRet -> lastRet
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> succ
    void advance() -> advance
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node:
    java.lang.Object item -> item
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node prev -> prev
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
com.nostra13.universalimageloader.core.decode.BaseImageDecoder -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder:
    java.lang.String LOG_SUBSAMPLE_IMAGE -> LOG_SUBSAMPLE_IMAGE
    java.lang.String LOG_SCALE_IMAGE -> LOG_SCALE_IMAGE
    java.lang.String LOG_ROTATE_IMAGE -> LOG_ROTATE_IMAGE
    java.lang.String LOG_FLIP_IMAGE -> LOG_FLIP_IMAGE
    java.lang.String ERROR_CANT_DECODE_IMAGE -> ERROR_CANT_DECODE_IMAGE
    boolean loggingEnabled -> loggingEnabled
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
    java.io.InputStream getImageStream(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> getImageStream
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo defineImageSizeAndRotation(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> defineImageSizeAndRotation
    boolean canDefineExifParams(java.lang.String,java.lang.String) -> canDefineExifParams
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo defineExifOrientation(java.lang.String) -> defineExifOrientation
    android.graphics.BitmapFactory$Options prepareDecodingOptions(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> prepareDecodingOptions
    java.io.InputStream resetStream(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> resetStream
    android.graphics.Bitmap considerExactScaleAndOrientatiton(android.graphics.Bitmap,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo,int,boolean) -> considerExactScaleAndOrientatiton
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo:
    int rotation -> rotation
    boolean flipHorizontal -> flipHorizontal
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo:
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo exif -> exif
com.nostra13.universalimageloader.core.decode.ImageDecoder -> com.nostra13.universalimageloader.core.decode.ImageDecoder:
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
com.nostra13.universalimageloader.core.decode.ImageDecodingInfo -> com.nostra13.universalimageloader.core.decode.ImageDecodingInfo:
    java.lang.String imageKey -> imageKey
    java.lang.String imageUri -> imageUri
    java.lang.String originalImageUri -> originalImageUri
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType viewScaleType -> viewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    java.lang.Object extraForDownloader -> extraForDownloader
    boolean considerExifParams -> considerExifParams
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    void copyOptions(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions
    void copyOptions10(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions10
    void copyOptions11(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions11
    java.lang.String getImageKey() -> getImageKey
    java.lang.String getImageUri() -> getImageUri
    java.lang.String getOriginalImageUri() -> getOriginalImageUri
    com.nostra13.universalimageloader.core.assist.ImageSize getTargetSize() -> getTargetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType getViewScaleType() -> getViewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    boolean shouldConsiderExifParams() -> shouldConsiderExifParams
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
com.nostra13.universalimageloader.core.display.BitmapDisplayer -> com.nostra13.universalimageloader.core.display.BitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer -> com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer:
    int durationMillis -> durationMillis
    boolean animateFromNetwork -> animateFromNetwork
    boolean animateFromDisk -> animateFromDisk
    boolean animateFromMemory -> animateFromMemory
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
    void animate(android.view.View,int) -> animate
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer:
    int cornerRadius -> cornerRadius
    int margin -> margin
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable:
    float cornerRadius -> cornerRadius
    int margin -> margin
    android.graphics.RectF mRect -> mRect
    android.graphics.RectF mBitmapRect -> mBitmapRect
    android.graphics.BitmapShader bitmapShader -> bitmapShader
    android.graphics.Paint paint -> paint
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer$RoundedVignetteDrawable -> com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer$RoundedVignetteDrawable:
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer -> com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.download.BaseImageDownloader -> com.nostra13.universalimageloader.core.download.BaseImageDownloader:
    int DEFAULT_HTTP_CONNECT_TIMEOUT -> DEFAULT_HTTP_CONNECT_TIMEOUT
    int DEFAULT_HTTP_READ_TIMEOUT -> DEFAULT_HTTP_READ_TIMEOUT
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String ALLOWED_URI_CHARS -> ALLOWED_URI_CHARS
    int MAX_REDIRECT_COUNT -> MAX_REDIRECT_COUNT
    java.lang.String CONTENT_CONTACTS_URI_PREFIX -> CONTENT_CONTACTS_URI_PREFIX
    java.lang.String ERROR_UNSUPPORTED_SCHEME -> ERROR_UNSUPPORTED_SCHEME
    android.content.Context context -> context
    int connectTimeout -> connectTimeout
    int readTimeout -> readTimeout
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
    java.net.HttpURLConnection createConnection(java.lang.String,java.lang.Object) -> createConnection
    java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object) -> getStreamFromFile
    java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object) -> getStreamFromContent
    java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object) -> getStreamFromAssets
    java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object) -> getStreamFromDrawable
    java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object) -> getStreamFromOtherSource
com.nostra13.universalimageloader.core.download.BaseImageDownloader$1 -> com.nostra13.universalimageloader.core.download.BaseImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.download.ImageDownloader -> com.nostra13.universalimageloader.core.download.ImageDownloader:
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme -> com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme:
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTP -> HTTP
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTPS -> HTTPS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE -> FILE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme CONTENT -> CONTENT
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ASSETS -> ASSETS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DRAWABLE -> DRAWABLE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme UNKNOWN -> UNKNOWN
    java.lang.String scheme -> scheme
    java.lang.String uriPrefix -> uriPrefix
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] values() -> values
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String) -> ofUri
    boolean belongsTo(java.lang.String) -> belongsTo
    java.lang.String wrap(java.lang.String) -> wrap
    java.lang.String crop(java.lang.String) -> crop
com.nostra13.universalimageloader.core.imageaware.ImageAware -> com.nostra13.universalimageloader.core.imageaware.ImageAware:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.nostra13.universalimageloader.core.imageaware.ImageViewAware -> com.nostra13.universalimageloader.core.imageaware.ImageViewAware:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.widget.ImageView getWrappedView() -> getWrappedView
    void setImageDrawableInto(android.graphics.drawable.Drawable,android.view.View) -> setImageDrawableInto
    void setImageBitmapInto(android.graphics.Bitmap,android.view.View) -> setImageBitmapInto
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
    android.view.View getWrappedView() -> getWrappedView
com.nostra13.universalimageloader.core.imageaware.NonViewAware -> com.nostra13.universalimageloader.core.imageaware.NonViewAware:
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.assist.ViewScaleType scaleType -> scaleType
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.nostra13.universalimageloader.core.imageaware.ViewAware -> com.nostra13.universalimageloader.core.imageaware.ViewAware:
    java.lang.String WARN_CANT_SET_DRAWABLE -> WARN_CANT_SET_DRAWABLE
    java.lang.String WARN_CANT_SET_BITMAP -> WARN_CANT_SET_BITMAP
    java.lang.ref.Reference viewRef -> viewRef
    boolean checkActualViewSize -> checkActualViewSize
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawableInto(android.graphics.drawable.Drawable,android.view.View) -> setImageDrawableInto
    void setImageBitmapInto(android.graphics.Bitmap,android.view.View) -> setImageBitmapInto
com.nostra13.universalimageloader.core.listener.ImageLoadingListener -> com.nostra13.universalimageloader.core.listener.ImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener -> com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener:
    void onProgressUpdate(java.lang.String,android.view.View,int,int) -> onProgressUpdate
com.nostra13.universalimageloader.core.listener.PauseOnScrollListener -> com.nostra13.universalimageloader.core.listener.PauseOnScrollListener:
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    boolean pauseOnScroll -> pauseOnScroll
    boolean pauseOnFling -> pauseOnFling
    android.widget.AbsListView$OnScrollListener externalListener -> externalListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener -> com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.process.BitmapProcessor -> com.nostra13.universalimageloader.core.process.BitmapProcessor:
    android.graphics.Bitmap process(android.graphics.Bitmap) -> process
com.nostra13.universalimageloader.utils.ImageSizeUtils -> com.nostra13.universalimageloader.b.a:
    com.nostra13.universalimageloader.core.assist.ImageSize maxBitmapSize -> a
    com.nostra13.universalimageloader.core.assist.ImageSize defineTargetSizeForView(com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    int computeImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> a
    int computeMinImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    float computeImageScale(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> b
com.nostra13.universalimageloader.utils.ImageSizeUtils$1 -> com.nostra13.universalimageloader.b.b:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType -> a
com.nostra13.universalimageloader.utils.IoUtils -> com.nostra13.universalimageloader.b.c:
    boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int) -> a
    boolean shouldStopLoading(com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int,int) -> a
    void readAndCloseStream(java.io.InputStream) -> a
    void closeSilently(java.io.Closeable) -> a
com.nostra13.universalimageloader.utils.IoUtils$CopyListener -> com.nostra13.universalimageloader.b.d:
    boolean onBytesCopied(int,int) -> onBytesCopied
com.nostra13.universalimageloader.utils.L -> com.nostra13.universalimageloader.b.e:
    boolean writeDebugLogs -> a
    boolean writeLogs -> b
    void writeDebugLogs(boolean) -> a
    void d(java.lang.String,java.lang.Object[]) -> a
    void i(java.lang.String,java.lang.Object[]) -> b
    void w(java.lang.String,java.lang.Object[]) -> c
    void e(java.lang.Throwable) -> a
    void e(java.lang.String,java.lang.Object[]) -> d
    void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
com.nostra13.universalimageloader.utils.MemoryCacheUtils -> com.nostra13.universalimageloader.b.f:
    java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    java.util.Comparator createFuzzyKeyComparator() -> a
com.nostra13.universalimageloader.utils.MemoryCacheUtils$1 -> com.nostra13.universalimageloader.b.g:
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nostra13.universalimageloader.utils.StorageUtils -> com.nostra13.universalimageloader.b.h:
    java.io.File getCacheDirectory(android.content.Context) -> a
    java.io.File getCacheDirectory(android.content.Context,boolean) -> a
    java.io.File getIndividualCacheDirectory(android.content.Context) -> b
    java.io.File getExternalCacheDir(android.content.Context) -> c
    boolean hasExternalStoragePermission(android.content.Context) -> d
com.ta.utdid2.android.utils.AESUtils -> com.ta.utdid2.android.utils.AESUtils:
    java.lang.String TAG -> TAG
    java.lang.String encrypt(java.lang.String,java.lang.String) -> encrypt
    java.lang.String decrypt(java.lang.String,java.lang.String) -> decrypt
    byte[] getRawKey(byte[]) -> getRawKey
    byte[] encrypt(byte[],byte[]) -> encrypt
    byte[] decrypt(byte[],byte[]) -> decrypt
    java.lang.String toHex(java.lang.String) -> toHex
    java.lang.String fromHex(java.lang.String) -> fromHex
    byte[] toByte(java.lang.String) -> toByte
    java.lang.String toHex(byte[]) -> toHex
    void appendHex(java.lang.StringBuffer,byte) -> appendHex
com.ta.utdid2.android.utils.Base64 -> com.ta.utdid2.android.utils.Base64:
    int DEFAULT -> DEFAULT
    int NO_PADDING -> NO_PADDING
    int NO_WRAP -> NO_WRAP
    int CRLF -> CRLF
    int URL_SAFE -> URL_SAFE
    int NO_CLOSE -> NO_CLOSE
    boolean $assertionsDisabled -> $assertionsDisabled
    byte[] decode(java.lang.String,int) -> decode
    byte[] decode(byte[],int) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    java.lang.String encodeToString(byte[],int) -> encodeToString
    java.lang.String encodeToString(byte[],int,int,int) -> encodeToString
    byte[] encode(byte[],int) -> encode
    byte[] encode(byte[],int,int,int) -> encode
com.ta.utdid2.android.utils.Base64$Coder -> com.ta.utdid2.android.utils.Base64$Coder:
    byte[] output -> output
    int op -> op
    boolean process(byte[],int,int,boolean) -> process
    int maxOutputSize(int) -> maxOutputSize
com.ta.utdid2.android.utils.Base64$Decoder -> com.ta.utdid2.android.utils.Base64$Decoder:
    int[] DECODE -> DECODE
    int[] DECODE_WEBSAFE -> DECODE_WEBSAFE
    int SKIP -> SKIP
    int EQUALS -> EQUALS
    int state -> state
    int value -> value
    int[] alphabet -> alphabet
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
com.ta.utdid2.android.utils.Base64$Encoder -> com.ta.utdid2.android.utils.Base64$Encoder:
    int LINE_GROUPS -> LINE_GROUPS
    byte[] ENCODE -> ENCODE
    byte[] ENCODE_WEBSAFE -> ENCODE_WEBSAFE
    byte[] tail -> tail
    int tailLen -> tailLen
    int count -> count
    boolean do_padding -> do_padding
    boolean do_newline -> do_newline
    boolean do_cr -> do_cr
    byte[] alphabet -> alphabet
    boolean $assertionsDisabled -> $assertionsDisabled
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
com.ta.utdid2.android.utils.IntUtils -> com.ta.utdid2.android.utils.IntUtils:
    byte[] getBytes(int) -> getBytes
    byte[] getBytes(byte[],int) -> getBytes
com.ta.utdid2.android.utils.NetworkUtils -> com.ta.utdid2.android.utils.NetworkUtils:
    java.lang.String WIFI -> WIFI
    java.lang.String DEFAULT_WIFI_ADDRESS -> DEFAULT_WIFI_ADDRESS
    boolean isConnectInternet(android.content.Context) -> isConnectInternet
    java.lang.String[] getNetworkState(android.content.Context) -> getNetworkState
    java.lang.String getWifiAddress(android.content.Context) -> getWifiAddress
    java.lang.String _convertIntToIp(int) -> _convertIntToIp
    java.lang.String getWifiIpAddress(android.content.Context) -> getWifiIpAddress
    boolean isWifi(android.content.Context) -> isWifi
com.ta.utdid2.android.utils.PhoneInfoUtils -> com.ta.utdid2.android.utils.PhoneInfoUtils:
    java.lang.String getUniqueID() -> getUniqueID
    java.lang.String getImei(android.content.Context) -> getImei
    java.lang.String getImsi(android.content.Context) -> getImsi
com.ta.utdid2.android.utils.StringUtils -> com.ta.utdid2.android.utils.StringUtils:
    boolean isEmpty(java.lang.String) -> isEmpty
    java.lang.String convertObjectToString(java.lang.Object) -> convertObjectToString
    int hashCode(java.lang.String) -> hashCode
com.ta.utdid2.android.utils.SystemUtils -> com.ta.utdid2.android.utils.SystemUtils:
    java.lang.String getCpuInfo() -> getCpuInfo
    int getSystemVersion() -> getSystemVersion
    java.io.File getRootFolder(java.lang.String) -> getRootFolder
    java.lang.String getAppLabel(android.content.Context) -> getAppLabel
com.ta.utdid2.core.persistent.FastXmlSerializer -> com.ta.utdid2.a.a.a:
    java.lang.String[] ESCAPE_TABLE -> a
    char[] mText -> b
    int mPos -> c
    java.io.Writer mWriter -> d
    java.io.OutputStream mOutputStream -> e
    java.nio.charset.CharsetEncoder mCharset -> f
    java.nio.ByteBuffer mBytes -> g
    boolean mInTag -> h
    void append(char) -> a
    void append(java.lang.String,int,int) -> a
    void append(char[],int,int) -> a
    void append(java.lang.String) -> a
    void escapeAndAppendString(java.lang.String) -> b
    void escapeAndAppendString(char[],int,int) -> b
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> attribute
    void cdsect(java.lang.String) -> cdsect
    void comment(java.lang.String) -> comment
    void docdecl(java.lang.String) -> docdecl
    void endDocument() -> endDocument
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> endTag
    void entityRef(java.lang.String) -> entityRef
    void flushBytes() -> a
    void flush() -> flush
    int getDepth() -> getDepth
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.String getName() -> getName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getPrefix(java.lang.String,boolean) -> getPrefix
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void ignorableWhitespace(java.lang.String) -> ignorableWhitespace
    void processingInstruction(java.lang.String) -> processingInstruction
    void setFeature(java.lang.String,boolean) -> setFeature
    void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    void setOutput(java.io.Writer) -> setOutput
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> startTag
    org.xmlpull.v1.XmlSerializer text(char[],int,int) -> text
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> text
com.ta.utdid2.core.persistent.MySharedPreferences -> com.ta.utdid2.a.a.b:
    boolean checkFile() -> a
    java.util.Map getAll() -> b
    java.lang.String getString(java.lang.String,java.lang.String) -> a
    long getLong(java.lang.String,long) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor edit() -> c
com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor -> com.ta.utdid2.a.a.c:
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putString(java.lang.String,java.lang.String) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putInt(java.lang.String,int) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putLong(java.lang.String,long) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putFloat(java.lang.String,float) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putBoolean(java.lang.String,boolean) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor clear() -> a
    boolean commit() -> b
com.ta.utdid2.core.persistent.MySharedPreferences$OnSharedPreferenceChangeListener -> com.ta.utdid2.a.a.d:
    void onSharedPreferenceChanged(com.ta.utdid2.core.persistent.MySharedPreferences,java.lang.String) -> a
com.ta.utdid2.core.persistent.PersistentConfiguration -> com.ta.utdid2.a.a.e:
    java.lang.String mConfigName -> a
    java.lang.String mFolderName -> b
    boolean mIsSafety -> c
    boolean mCanRead -> d
    boolean mCanWrite -> e
    android.content.SharedPreferences mSp -> f
    com.ta.utdid2.core.persistent.MySharedPreferences mMySP -> g
    android.content.SharedPreferences$Editor mEditor -> h
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor mMyEditor -> i
    android.content.Context mContext -> j
    com.ta.utdid2.core.persistent.TransactionXMLFile mTxf -> k
    boolean mIsLessMode -> l
    com.ta.utdid2.core.persistent.TransactionXMLFile getTransactionXMLFile(java.lang.String) -> b
    java.io.File getRootFolder(java.lang.String) -> c
    void copySPToMySP(android.content.SharedPreferences,com.ta.utdid2.core.persistent.MySharedPreferences) -> a
    void copyMySPToSP(com.ta.utdid2.core.persistent.MySharedPreferences,android.content.SharedPreferences) -> a
    boolean checkSDCardXMLFile() -> b
    void initEditor() -> c
    void putLong(java.lang.String,long) -> a
    void putString(java.lang.String,java.lang.String) -> a
    boolean commit() -> a
    java.lang.String getString(java.lang.String) -> a
com.ta.utdid2.core.persistent.TransactionXMLFile -> com.ta.utdid2.a.a.f:
    java.lang.Object mSync -> a
    java.io.File mPreferencesDir -> b
    java.lang.Object GLOBAL_COMMIT_LOCK -> c
    java.util.HashMap sSharedPrefs -> d
    java.io.File makeFilename(java.io.File,java.lang.String) -> a
    java.io.File getPreferencesDir() -> b
    java.io.File getSharedPrefsFile(java.lang.String) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences getMySharedPreferences(java.lang.String,int) -> a
    java.io.File makeBackupFile(java.io.File) -> b
    java.io.File access$000(java.io.File) -> a
    java.lang.Object access$100() -> a
com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl -> com.ta.utdid2.a.a.g:
    java.io.File mFile -> a
    java.io.File mBackupFile -> b
    int mMode -> c
    java.util.Map mMap -> d
    boolean hasChange -> e
    java.lang.Object mContent -> f
    java.util.WeakHashMap mListeners -> g
    boolean checkFile() -> a
    void setHasChange(boolean) -> a
    boolean hasFileChanged() -> d
    void replace(java.util.Map) -> a
    java.util.Map getAll() -> b
    java.lang.String getString(java.lang.String,java.lang.String) -> a
    long getLong(java.lang.String,long) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor edit() -> c
    java.io.FileOutputStream createFileOutputStream(java.io.File) -> a
    boolean writeFileLocked() -> e
    java.util.WeakHashMap access$200(com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl) -> a
    java.util.Map access$300(com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl) -> b
    boolean access$400(com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl) -> c
com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl$EditorImpl -> com.ta.utdid2.a.a.h:
    java.util.Map mModified -> b
    boolean mClear -> c
    com.ta.utdid2.core.persistent.TransactionXMLFile$MySharedPreferencesImpl this$0 -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putString(java.lang.String,java.lang.String) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putInt(java.lang.String,int) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putLong(java.lang.String,long) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putFloat(java.lang.String,float) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor putBoolean(java.lang.String,boolean) -> a
    com.ta.utdid2.core.persistent.MySharedPreferences$MyEditor clear() -> a
    boolean commit() -> b
com.ta.utdid2.core.persistent.XmlUtils -> com.ta.utdid2.a.a.i:
    void writeMapXml(java.util.Map,java.io.OutputStream) -> a
    void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void writeListXml(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void writeByteArrayXml(byte[],java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void writeIntArrayXml(int[],java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    java.util.HashMap readMapXml(java.io.InputStream) -> a
    java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> b
    int[] readThisIntArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> c
    java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[]) -> a
    java.lang.Object readThisValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[]) -> b
com.ta.utdid2.device.Device -> com.ta.utdid2.b.a:
    java.lang.String imei -> a
    java.lang.String imsi -> b
    java.lang.String deviceId -> c
    java.lang.String utdid -> d
    long mCreateTimestamp -> e
    long mCheckSum -> f
    void setCheckSum(long) -> a
    long getCreateTimestamp() -> a
    void setCreateTimestamp(long) -> b
    java.lang.String getImei() -> b
    void setImei(java.lang.String) -> a
    java.lang.String getImsi() -> c
    void setImsi(java.lang.String) -> b
    java.lang.String getDeviceId() -> d
    void setDeviceId(java.lang.String) -> c
    java.lang.String getUtdid() -> e
    void setUtdid(java.lang.String) -> d
com.ta.utdid2.device.DeviceInfo -> com.ta.utdid2.b.b:
    com.ta.utdid2.device.Device mDevice -> c
    java.lang.String HMAC_KEY -> a
    java.lang.Object CREATE_DEVICE_METADATA_LOCK -> b
    long getMetadataCheckSum(com.ta.utdid2.device.Device) -> a
    com.ta.utdid2.device.Device _initDeviceMetadata(android.content.Context) -> b
    com.ta.utdid2.device.Device getDevice(android.content.Context) -> a
com.ta.utdid2.device.UTDevice -> com.ta.utdid2.b.c:
    java.lang.String getUtdid(android.content.Context) -> a
com.ta.utdid2.device.UTUtdid -> com.ta.utdid2.b.d:
    android.content.Context mContext -> a
    java.lang.Object CREATE_LOCK -> b
    com.ta.utdid2.device.UTUtdid s_umutdid -> c
    java.lang.String mUtdid -> d
    com.ta.utdid2.device.UTUtdidHelper mUtdidHelper -> e
    java.lang.String mCBKey -> f
    java.lang.String mCBDomain -> g
    com.ta.utdid2.core.persistent.PersistentConfiguration mPC -> h
    com.ta.utdid2.core.persistent.PersistentConfiguration mTaoPC -> i
    java.lang.String S_GLOBAL_PERSISTENT_CONFIG_DIR -> j
    java.util.regex.Pattern mPattern -> k
    com.ta.utdid2.device.UTUtdid instance(android.content.Context) -> a
    long getMetadataCheckSum(com.ta.utdid2.device.Device) -> a
    void saveUtdidToTaoPPC(java.lang.String) -> a
    void saveUtdidToLocalStorage(java.lang.String) -> b
    void saveUtdidToNewSettings(java.lang.String) -> c
    void syncUTDIDToSettings(java.lang.String) -> d
    void saveUtdidToSettings(java.lang.String) -> e
    java.lang.String getUtdidFromTaoPPC() -> b
    boolean isValidUTDID(java.lang.String) -> f
    java.lang.String getValue() -> a
    byte[] _generateUtdid() -> c
    java.lang.String _calcHmac(byte[]) -> a
com.ta.utdid2.device.UTUtdidHelper -> com.ta.utdid2.b.e:
    java.lang.String mAESKey -> a
    java.util.Random random -> b
    java.lang.String pack(byte[]) -> a
    java.lang.String packUtdidStr(java.lang.String) -> a
    java.lang.String dePack(java.lang.String) -> b
com.ta.utdid2.device.UTUtdidHelper2 -> com.ta.utdid2.b.f:
    java.lang.String mAESKey -> a
    java.lang.String dePack(java.lang.String) -> a
    java.lang.String dePackWithBase64(java.lang.String) -> b
com.tencent.a.a.a.a.a -> com.tencent.a.a.a.a.a:
    java.util.List a(java.io.File) -> a
    java.io.File a(java.lang.String) -> a
com.tencent.a.a.a.a.b -> com.tencent.a.a.a.a.b:
    boolean a() -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> a
com.tencent.a.a.a.a.c -> com.tencent.a.a.a.a.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long d -> d
    java.lang.String c() -> a
    com.tencent.a.a.a.a.c c(java.lang.String) -> a
    java.lang.String toString() -> toString
    org.json.JSONObject d() -> b
com.tencent.a.a.a.a.d -> com.tencent.a.a.a.a.d:
    java.lang.String b() -> b
    void b(java.lang.String) -> a
    boolean a() -> a
com.tencent.a.a.a.a.e -> com.tencent.a.a.a.a.e:
    boolean a() -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> a
com.tencent.a.a.a.a.f -> com.tencent.a.a.a.a.f:
    android.content.Context e -> a
    com.tencent.a.a.a.a.c e() -> c
    void a(com.tencent.a.a.a.a.c) -> a
    boolean a() -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> a
com.tencent.a.a.a.a.g -> com.tencent.a.a.a.a.g:
    java.util.Map f -> a
    int g -> b
    android.content.Context h -> c
    com.tencent.a.a.a.a.g i -> d
    com.tencent.a.a.a.a.g a(android.content.Context) -> a
    com.tencent.a.a.a.a.c f() -> a
    com.tencent.a.a.a.a.c a(java.util.List) -> a
    void b(java.lang.String) -> a
com.tencent.a.a.a.a.h -> com.tencent.a.a.a.a.h:
    void a(java.lang.String,java.lang.Throwable) -> a
    boolean d(java.lang.String) -> a
    boolean e(java.lang.String) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    java.lang.String f(java.lang.String) -> c
    java.lang.String g(java.lang.String) -> d
    java.lang.String b(android.content.Context) -> a
    java.lang.String c(android.content.Context) -> b
com.tencent.wxop.stat.EasyActivity -> com.tencent.wxop.stat.EasyActivity:
    void onResume() -> onResume
    void onPause() -> onPause
com.tencent.wxop.stat.EasyListActivity -> com.tencent.wxop.stat.EasyListActivity:
    void onResume() -> onResume
    void onPause() -> onPause
com.tencent.wxop.stat.a.c -> com.tencent.wxop.stat.a.a:
    java.lang.String a -> l
    int ay -> m
    int bn -> n
    java.lang.Thread bo -> o
    void a(int,java.lang.Throwable) -> a
    com.tencent.wxop.stat.a.e ac() -> a
    boolean b(org.json.JSONObject) -> a
com.tencent.wxop.stat.a.d -> com.tencent.wxop.stat.a.b:
    java.lang.String b -> a
    long aZ -> b
    int L -> c
    com.tencent.wxop.stat.b.c bp -> d
    int bf -> e
    java.lang.String bq -> f
    java.lang.String br -> g
    java.lang.String bs -> h
    java.lang.String bt -> i
    boolean bu -> j
    android.content.Context bv -> k
    com.tencent.wxop.stat.f bw -> l
    long ad() -> b
    com.tencent.wxop.stat.f ae() -> c
    android.content.Context J() -> d
    com.tencent.wxop.stat.a.e ac() -> a
    boolean X() -> e
    boolean b(org.json.JSONObject) -> a
    boolean c(org.json.JSONObject) -> b
    java.lang.String af() -> f
com.tencent.wxop.stat.a.e -> com.tencent.wxop.stat.a.c:
    com.tencent.wxop.stat.a.e bx -> a
    com.tencent.wxop.stat.a.e by -> b
    com.tencent.wxop.stat.a.e bz -> c
    com.tencent.wxop.stat.a.e bA -> d
    com.tencent.wxop.stat.a.e bB -> e
    com.tencent.wxop.stat.a.e bC -> f
    com.tencent.wxop.stat.a.e bD -> g
    com.tencent.wxop.stat.a.e bE -> h
    com.tencent.wxop.stat.a.e bF -> i
    int bG -> j
    com.tencent.wxop.stat.a.e[] bH -> k
    int r() -> a
com.tencent.wxop.stat.a.f -> com.tencent.wxop.stat.a.d:
    com.tencent.wxop.stat.f bw -> l
    com.tencent.wxop.stat.a.e ac() -> a
    boolean b(org.json.JSONObject) -> a
com.tencent.wxop.stat.a.g -> com.tencent.wxop.stat.a.e:
    java.lang.String a -> l
    java.lang.String aR -> m
    java.lang.String aS -> n
    void b(java.lang.String) -> a
    com.tencent.wxop.stat.a.e ac() -> a
    boolean b(org.json.JSONObject) -> a
com.tencent.wxop.stat.a.h -> com.tencent.wxop.stat.a.f:
    java.lang.Long bI -> l
    java.lang.String aR -> m
    java.lang.String aS -> n
    com.tencent.wxop.stat.a.e ac() -> a
    boolean b(org.json.JSONObject) -> a
com.tencent.wxop.stat.a.i -> com.tencent.wxop.stat.a.g:
    com.tencent.wxop.stat.b.d bJ -> l
    org.json.JSONObject bK -> m
    com.tencent.wxop.stat.a.e ac() -> a
    boolean b(org.json.JSONObject) -> a
com.tencent.wxop.stat.aa -> com.tencent.wxop.stat.a:
    java.util.List bc -> a
    boolean ch -> b
    com.tencent.wxop.stat.t cn -> c
    void ah() -> a
    void B() -> b
com.tencent.wxop.stat.ab -> com.tencent.wxop.stat.b:
    int aI -> a
    com.tencent.wxop.stat.t cl -> b
    void run() -> run
com.tencent.wxop.stat.ac -> com.tencent.wxop.stat.c:
    java.lang.String a -> a
    android.content.Context co -> b
    void close() -> close
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void b(android.database.sqlite.SQLiteDatabase) -> b
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.tencent.wxop.stat.ad -> com.tencent.wxop.stat.d:
    long K -> a
    java.lang.String b -> b
    int cp -> c
    int L -> d
    java.lang.String toString() -> toString
com.tencent.wxop.stat.ae -> com.tencent.wxop.stat.e:
    com.tencent.wxop.stat.z cq -> a
    void run() -> run
com.tencent.wxop.stat.af -> com.tencent.wxop.stat.f:
    java.util.Timer dc -> a
    com.tencent.wxop.stat.af dd -> b
    android.content.Context h -> c
    void ah() -> a
    com.tencent.wxop.stat.af Y(android.content.Context) -> a
    android.content.Context a(com.tencent.wxop.stat.af) -> a
com.tencent.wxop.stat.ag -> com.tencent.wxop.stat.g:
    com.tencent.wxop.stat.af de -> a
    void run() -> run
com.tencent.wxop.stat.ah -> com.tencent.wxop.stat.h:
    int aI -> a
    org.json.JSONObject df -> b
    java.lang.String c -> c
    int L -> d
com.tencent.wxop.stat.ai -> com.tencent.wxop.stat.i:
com.tencent.wxop.stat.aj -> com.tencent.wxop.stat.j:
    void ah() -> a
    void B() -> b
com.tencent.wxop.stat.ak -> com.tencent.wxop.stat.k:
    com.tencent.wxop.stat.b.b cx -> d
    org.apache.http.impl.client.DefaultHttpClient dg -> a
    com.tencent.wxop.stat.b.f dh -> b
    java.lang.StringBuilder di -> c
    com.tencent.wxop.stat.ak dj -> e
    android.content.Context dk -> f
    long cv -> g
    void j(android.content.Context) -> a
    android.content.Context aB() -> a
    com.tencent.wxop.stat.ak Z(android.content.Context) -> b
    void a(java.util.List,com.tencent.wxop.stat.aj) -> a
    void b(java.util.List,com.tencent.wxop.stat.aj) -> b
    void a(com.tencent.wxop.stat.a.d,com.tencent.wxop.stat.aj) -> a
com.tencent.wxop.stat.al -> com.tencent.wxop.stat.l:
    com.tencent.wxop.stat.ak dl -> a
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
com.tencent.wxop.stat.am -> com.tencent.wxop.stat.m:
    java.util.List bc -> a
    com.tencent.wxop.stat.aj ck -> b
    com.tencent.wxop.stat.ak dm -> c
    void run() -> run
com.tencent.wxop.stat.an -> com.tencent.wxop.stat.n:
    android.content.Context e -> a
    void run() -> run
com.tencent.wxop.stat.ao -> com.tencent.wxop.stat.o:
    android.content.Context e -> a
    com.tencent.wxop.stat.f bN -> b
    void run() -> run
com.tencent.wxop.stat.ap -> com.tencent.wxop.stat.p:
    android.content.Context e -> a
    java.lang.Throwable dn -> b
    void run() -> run
com.tencent.wxop.stat.aq -> com.tencent.wxop.stat.q:
    void ah() -> a
    void B() -> b
com.tencent.wxop.stat.as -> com.tencent.wxop.stat.r:
    java.lang.String a -> a
    android.content.Context co -> b
    com.tencent.wxop.stat.f bM -> c
    void run() -> run
com.tencent.wxop.stat.b -> com.tencent.wxop.stat.s:
    long K -> a
    int g -> b
    java.lang.String c -> c
    int L -> d
    java.lang.String M -> e
    void a(long) -> a
    void setStatusCode(int) -> a
    void setDomain(java.lang.String) -> a
    void setPort(int) -> b
    void k(java.lang.String) -> b
    org.json.JSONObject i() -> a
com.tencent.wxop.stat.b.a -> com.tencent.wxop.stat.b.a:
    java.lang.String cs -> a
    java.lang.String ct -> b
com.tencent.wxop.stat.b.b -> com.tencent.wxop.stat.b.b:
    java.lang.String a -> a
    boolean ch -> b
    int cp -> c
    void ap() -> a
    java.lang.String c() -> b
    void b(java.lang.Object) -> a
    void warn(java.lang.Object) -> b
    void c(java.lang.Object) -> c
    void error(java.lang.Object) -> d
    void a(java.lang.Throwable) -> a
    void d(java.lang.Object) -> e
    void b(java.lang.Throwable) -> b
    void debug(java.lang.Object) -> f
    void e(java.lang.Object) -> g
com.tencent.wxop.stat.b.c -> com.tencent.wxop.stat.b.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String W -> d
    int cu -> e
    int bf -> f
    long cv -> g
    java.lang.String toString() -> toString
    org.json.JSONObject aq() -> e
    java.lang.String b() -> a
    java.lang.String ar() -> b
    void z() -> c
    int as() -> d
com.tencent.wxop.stat.b.d -> com.tencent.wxop.stat.b.d:
    com.tencent.wxop.stat.b.e cw -> a
    com.tencent.wxop.stat.b.b cx -> d
    java.lang.Integer cy -> b
    java.lang.String c -> c
    org.json.JSONObject cz -> e
    com.tencent.wxop.stat.b.e u(android.content.Context) -> a
    void a(org.json.JSONObject,java.lang.Thread) -> a
com.tencent.wxop.stat.b.e -> com.tencent.wxop.stat.b.e:
    java.lang.String a -> a
    java.lang.String b -> b
    android.util.DisplayMetrics cA -> c
    int L -> d
    java.lang.String M -> e
    java.lang.String ab -> f
    java.lang.String bq -> g
    java.lang.String br -> h
    java.lang.String bs -> i
    java.lang.String bt -> j
    java.lang.String al -> k
    int aQ -> l
    java.lang.String aR -> m
    java.lang.String aS -> n
    android.content.Context cB -> o
    java.lang.String cC -> p
    java.lang.String cD -> q
    java.lang.String cE -> r
    java.lang.String cF -> s
    void a(org.json.JSONObject,java.lang.Thread) -> a
com.tencent.wxop.stat.b.f -> com.tencent.wxop.stat.b.f:
    java.util.concurrent.ExecutorService cG -> a
    void a(java.lang.Runnable) -> a
com.tencent.wxop.stat.b.g -> com.tencent.wxop.stat.b.g:
    byte[] b(byte[]) -> a
    byte[] c(byte[]) -> b
    byte[] a(byte[],byte[]) -> a
com.tencent.wxop.stat.b.h -> com.tencent.wxop.stat.b.h:
    boolean cH -> a
    byte[] d(byte[]) -> a
    byte[] e(byte[]) -> b
com.tencent.wxop.stat.b.i -> com.tencent.wxop.stat.b.i:
    byte[] cI -> a
    int g -> b
com.tencent.wxop.stat.b.j -> com.tencent.wxop.stat.b.j:
    int[] cJ -> c
    int[] cK -> d
    int cu -> e
    int bf -> f
    int[] cL -> g
    boolean a(byte[],int) -> a
com.tencent.wxop.stat.b.k -> com.tencent.wxop.stat.b.k:
    byte[] cM -> h
    byte[] cN -> i
    byte[] cO -> j
    int cp -> c
    int cc -> k
    boolean ba -> d
    boolean bb -> e
    boolean cP -> f
    byte[] cQ -> l
    boolean ad -> g
    boolean a(byte[],int) -> a
com.tencent.wxop.stat.b.l -> com.tencent.wxop.stat.b.l:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String W -> d
    java.util.Random cR -> e
    android.util.DisplayMetrics cS -> f
    java.lang.String bq -> g
    java.lang.String br -> h
    java.lang.String bs -> i
    int bG -> j
    com.tencent.wxop.stat.b.b cT -> k
    java.lang.String cU -> l
    java.lang.String aR -> m
    int bn -> n
    java.lang.String cV -> o
    java.lang.String cC -> p
    long cW -> q
    java.lang.String cE -> r
    com.tencent.wxop.stat.b.o cX -> s
    java.lang.String cY -> t
    int U -> u
    long cZ -> v
    int w -> w
    java.lang.String da -> x
    java.util.Random at() -> i
    int r() -> a
    byte[] b(byte[]) -> a
    java.lang.String t(java.lang.String) -> a
    org.apache.http.HttpHost v(android.content.Context) -> a
    java.lang.String c(android.content.Context) -> b
    java.lang.String w(android.content.Context) -> c
    android.util.DisplayMetrics x(android.content.Context) -> d
    boolean y(android.content.Context) -> e
    java.lang.String z(android.content.Context) -> f
    java.lang.String A(android.content.Context) -> g
    java.lang.String B(android.content.Context) -> h
    java.lang.String C(android.content.Context) -> i
    java.lang.String D(android.content.Context) -> j
    java.lang.String E(android.content.Context) -> k
    java.lang.Integer F(android.content.Context) -> l
    java.lang.String G(android.content.Context) -> m
    int au() -> b
    com.tencent.wxop.stat.b.b av() -> c
    long ad() -> d
    java.lang.String aw() -> e
    java.lang.Long a(java.lang.String,java.lang.String,java.lang.Long) -> a
    long u(java.lang.String) -> b
    boolean e(java.lang.String) -> c
    java.lang.String H(android.content.Context) -> n
    java.lang.String d(long) -> a
    java.lang.String I(android.content.Context) -> o
    java.lang.String e(android.content.Context,java.lang.String) -> a
    java.lang.String J(android.content.Context) -> p
    java.lang.Integer K(android.content.Context) -> q
    java.lang.String ax() -> f
    java.lang.String L(android.content.Context) -> r
    long ay() -> j
    org.json.JSONObject az() -> g
    java.lang.String M(android.content.Context) -> s
    int N(android.content.Context) -> t
    void O(android.content.Context) -> u
    boolean a(com.tencent.wxop.stat.f) -> a
    boolean P(android.content.Context) -> v
    void Q(android.content.Context) -> w
    int a(android.content.Context,boolean) -> a
    void a(android.content.Context,int) -> a
    java.lang.String R(android.content.Context) -> x
    com.tencent.wxop.stat.b.b K() -> h
com.tencent.wxop.stat.b.m -> com.tencent.wxop.stat.b.m:
    int r() -> a
    int aA() -> b
    int D() -> c
    java.lang.String ax() -> d
com.tencent.wxop.stat.b.n -> com.tencent.wxop.stat.b.n:
    boolean accept(java.io.File) -> accept
com.tencent.wxop.stat.b.o -> com.tencent.wxop.stat.b.o:
com.tencent.wxop.stat.b.p -> com.tencent.wxop.stat.b.p:
    int aI -> a
    boolean a() -> a
com.tencent.wxop.stat.b.q -> com.tencent.wxop.stat.b.q:
    android.content.SharedPreferences db -> a
    android.content.SharedPreferences S(android.content.Context) -> a
    long f(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,long) -> a
    int a(android.content.Context,java.lang.String,int) -> a
    void b(android.content.Context,java.lang.String,int) -> b
    java.lang.String b(android.content.Context,java.lang.String,java.lang.String) -> a
com.tencent.wxop.stat.b.r -> com.tencent.wxop.stat.b.r:
    java.lang.String a -> a
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.content.Context) -> a
    java.lang.String c(android.content.Context) -> b
    java.lang.String t(java.lang.String) -> a
    java.lang.String q(java.lang.String) -> b
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    android.net.wifi.WifiInfo T(android.content.Context) -> g
    java.lang.String U(android.content.Context) -> c
    java.lang.String V(android.content.Context) -> d
    boolean W(android.content.Context) -> e
    org.json.JSONArray X(android.content.Context) -> f
com.tencent.wxop.stat.b.s -> com.tencent.wxop.stat.b.s:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.tencent.wxop.stat.c -> com.tencent.wxop.stat.t:
    com.tencent.wxop.stat.b.b N -> q
    com.tencent.wxop.stat.ah O -> a
    com.tencent.wxop.stat.ah P -> b
    com.tencent.wxop.stat.d Q -> r
    boolean R -> s
    boolean S -> t
    int T -> u
    int U -> v
    int V -> w
    int w -> x
    int x -> y
    int y -> z
    int z -> A
    java.lang.String c -> c
    java.lang.String W -> d
    java.lang.String M -> e
    java.lang.String X -> B
    java.lang.String Y -> C
    java.lang.String Z -> D
    java.lang.String aa -> E
    java.lang.String ab -> f
    int ac -> F
    boolean ad -> g
    int ae -> h
    long af -> i
    int ag -> G
    boolean ah -> j
    long ai -> H
    long aj -> I
    boolean ak -> k
    java.lang.String al -> l
    java.lang.String am -> J
    int an -> K
    int ao -> L
    int ap -> M
    int aq -> N
    boolean ar -> O
    int as -> P
    boolean at -> Q
    java.lang.String au -> R
    boolean av -> S
    com.tencent.wxop.stat.ai aw -> T
    boolean ax -> m
    int ay -> n
    long az -> o
    int aA -> p
    com.tencent.wxop.stat.d j() -> a
    void a(com.tencent.wxop.stat.d) -> a
    boolean k() -> b
    boolean l() -> c
    void a(boolean) -> a
    int m() -> d
    int n() -> e
    int o() -> f
    int p() -> g
    int q() -> h
    int r() -> i
    int s() -> j
    java.lang.String l(java.lang.String) -> a
    void a(android.content.Context,org.json.JSONObject) -> a
    void a(android.content.Context,com.tencent.wxop.stat.ah,org.json.JSONObject) -> a
    void a(org.json.JSONObject) -> a
    void a(android.content.Context,com.tencent.wxop.stat.ah) -> a
    boolean b(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    void b(long) -> a
    java.lang.String d(android.content.Context) -> a
    java.lang.String e(android.content.Context) -> b
    java.lang.String f(android.content.Context) -> c
    int u() -> k
    int v() -> l
    boolean x() -> m
    java.lang.String y() -> n
    void o(java.lang.String) -> b
    void z() -> o
    int A() -> p
    void B() -> q
    void C() -> r
    int D() -> s
    boolean E() -> t
    java.lang.String g(android.content.Context) -> d
    java.lang.String h(android.content.Context) -> e
    com.tencent.wxop.stat.ai F() -> u
com.tencent.wxop.stat.d -> com.tencent.wxop.stat.u:
    com.tencent.wxop.stat.d aB -> a
    com.tencent.wxop.stat.d aC -> b
    com.tencent.wxop.stat.d aD -> c
    com.tencent.wxop.stat.d aE -> d
    com.tencent.wxop.stat.d aF -> e
    com.tencent.wxop.stat.d aG -> f
    com.tencent.wxop.stat.d aH -> g
    int aI -> h
    com.tencent.wxop.stat.d[] aJ -> i
    com.tencent.wxop.stat.d[] values() -> values
    com.tencent.wxop.stat.d valueOf(java.lang.String) -> valueOf
    com.tencent.wxop.stat.d a(int) -> a
com.tencent.wxop.stat.e -> com.tencent.wxop.stat.v:
    com.tencent.wxop.stat.b.f aK -> d
    java.util.Map aL -> e
    java.util.Map aM -> f
    java.util.Map aN -> g
    long aO -> h
    long af -> i
    long aP -> j
    java.lang.String al -> k
    int aQ -> l
    java.lang.String aR -> m
    java.lang.String aS -> n
    java.util.Map aT -> o
    java.util.Map aU -> p
    com.tencent.wxop.stat.b.b aV -> q
    java.lang.Thread$UncaughtExceptionHandler aW -> r
    boolean S -> s
    int aI -> a
    long aX -> b
    android.content.Context aY -> t
    long aZ -> c
    boolean a() -> a
    android.content.Context i(android.content.Context) -> g
    void j(android.content.Context) -> h
    com.tencent.wxop.stat.b.f k(android.content.Context) -> i
    org.json.JSONObject G() -> l
    void a(android.content.Context,com.tencent.wxop.stat.f) -> a
    int a(android.content.Context,boolean,com.tencent.wxop.stat.f) -> a
    void a(android.content.Context,java.lang.String,com.tencent.wxop.stat.f) -> a
    void b(android.content.Context,java.lang.String,com.tencent.wxop.stat.f) -> b
    void l(android.content.Context) -> a
    void m(android.content.Context) -> b
    void a(android.content.Context,java.lang.Throwable) -> a
    void n(android.content.Context) -> c
    void o(android.content.Context) -> d
    void p(android.content.Context) -> e
    void H() -> b
    void I() -> c
    void q(android.content.Context) -> f
    android.content.Context J() -> d
    com.tencent.wxop.stat.b.b K() -> e
    java.lang.Thread$UncaughtExceptionHandler L() -> f
    java.lang.Thread$UncaughtExceptionHandler a(java.lang.Thread$UncaughtExceptionHandler) -> a
    java.util.Map M() -> g
    java.lang.String q(java.lang.String) -> a
    java.lang.String N() -> h
    java.lang.String O() -> i
    java.lang.String r(java.lang.String) -> b
    long P() -> j
    java.util.Map Q() -> k
    long c(long) -> a
com.tencent.wxop.stat.f -> com.tencent.wxop.stat.w:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean ba -> d
    boolean bb -> e
    boolean R() -> a
    java.lang.String getVersion() -> b
    java.lang.String S() -> c
    void s(java.lang.String) -> a
    java.lang.String T() -> d
    boolean U() -> e
    java.lang.String toString() -> toString
com.tencent.wxop.stat.g -> com.tencent.wxop.stat.x:
    java.util.List bc -> a
    int g -> b
    java.lang.String c -> c
    org.apache.http.HttpHost bd -> d
    com.tencent.wxop.stat.b.f be -> e
    int bf -> f
    com.tencent.wxop.stat.g bg -> g
    android.content.Context bh -> h
    com.tencent.wxop.stat.b.b bi -> i
    org.apache.http.HttpHost V() -> a
    java.lang.String b() -> b
    int D() -> c
    boolean d(java.lang.String) -> b
    void I() -> d
    void b(java.lang.String) -> a
    java.lang.String O() -> i
    boolean W() -> e
    boolean X() -> f
    com.tencent.wxop.stat.g r(android.content.Context) -> a
    void Y() -> j
    void Z() -> g
    void aa() -> h
    com.tencent.wxop.stat.b.f a(com.tencent.wxop.stat.g) -> a
com.tencent.wxop.stat.h -> com.tencent.wxop.stat.y:
    android.content.Context e -> a
    int g -> b
    void run() -> run
com.tencent.wxop.stat.i -> com.tencent.wxop.stat.z:
    android.content.Context e -> a
    void run() -> run
com.tencent.wxop.stat.j -> com.tencent.wxop.stat.aa:
    int[] bL -> a
com.tencent.wxop.stat.k -> com.tencent.wxop.stat.ab:
    android.content.Context e -> a
    java.lang.String b -> b
    com.tencent.wxop.stat.f bM -> c
    void run() -> run
com.tencent.wxop.stat.l -> com.tencent.wxop.stat.ac:
    android.content.Context e -> a
    com.tencent.wxop.stat.f bN -> b
    void run() -> run
com.tencent.wxop.stat.n -> com.tencent.wxop.stat.ad:
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.tencent.wxop.stat.o -> com.tencent.wxop.stat.ae:
    android.content.Context e -> a
    java.util.Map bO -> b
    com.tencent.wxop.stat.f bM -> c
    java.util.Map ag() -> a
    void run() -> run
    com.tencent.wxop.stat.b a(java.lang.String,int) -> a
com.tencent.wxop.stat.p -> com.tencent.wxop.stat.af:
    com.tencent.wxop.stat.a.d bP -> a
    com.tencent.wxop.stat.d bQ -> b
    boolean bR -> c
    android.content.Context bS -> d
    long bT -> e
    long bU -> f
    void H() -> b
    void a(com.tencent.wxop.stat.aj) -> a
    void ah() -> a
    android.content.Context a(com.tencent.wxop.stat.p) -> a
    com.tencent.wxop.stat.a.d b(com.tencent.wxop.stat.p) -> b
    boolean c(com.tencent.wxop.stat.p) -> c
com.tencent.wxop.stat.q -> com.tencent.wxop.stat.ag:
    com.tencent.wxop.stat.p bV -> a
    void ah() -> a
    void B() -> b
com.tencent.wxop.stat.r -> com.tencent.wxop.stat.ah:
    com.tencent.wxop.stat.p bV -> a
    void ah() -> a
    void B() -> b
com.tencent.wxop.stat.s -> com.tencent.wxop.stat.ai:
    com.tencent.wxop.stat.p bV -> a
    void ah() -> a
    void B() -> b
com.tencent.wxop.stat.t -> com.tencent.wxop.stat.aj:
    com.tencent.wxop.stat.ac bW -> c
    com.tencent.wxop.stat.ac bX -> d
    com.tencent.wxop.stat.b.f be -> e
    java.lang.String ab -> f
    java.lang.String bq -> g
    int aI -> a
    com.tencent.wxop.stat.b.c bY -> b
    com.tencent.wxop.stat.b.b bZ -> h
    android.content.Context ca -> i
    com.tencent.wxop.stat.t cb -> j
    int cc -> k
    java.util.concurrent.ConcurrentHashMap cd -> l
    boolean ce -> m
    java.util.HashMap cf -> n
    int r() -> a
    void b(boolean) -> a
    com.tencent.wxop.stat.t s(android.content.Context) -> a
    com.tencent.wxop.stat.t ai() -> b
    com.tencent.wxop.stat.b.c t(android.content.Context) -> b
    java.lang.String b(java.util.List) -> a
    void a(java.util.List,boolean) -> c
    void a(java.util.List,int,boolean) -> a
    void b(java.util.List,boolean) -> a
    void c(java.util.List,boolean) -> b
    void b(java.util.List,int,boolean) -> b
    void aj() -> e
    int ak() -> f
    int al() -> g
    void am() -> h
    void H() -> c
    android.database.sqlite.SQLiteDatabase c(boolean) -> b
    void a(com.tencent.wxop.stat.a.d,com.tencent.wxop.stat.aj,boolean,boolean) -> b
    void b(com.tencent.wxop.stat.a.d,com.tencent.wxop.stat.aj,boolean,boolean) -> a
    void a(com.tencent.wxop.stat.ah) -> b
    void b(com.tencent.wxop.stat.ah) -> a
    void I() -> i
    void a(int,boolean) -> a
    void b(int) -> a
    void an() -> j
    void a(com.tencent.wxop.stat.t,java.util.List,int,boolean) -> a
    void a(com.tencent.wxop.stat.t,java.util.List,boolean) -> a
    void a(com.tencent.wxop.stat.t) -> a
    void a(com.tencent.wxop.stat.t,com.tencent.wxop.stat.a.d,com.tencent.wxop.stat.aj,boolean,boolean) -> a
    void a(com.tencent.wxop.stat.t,com.tencent.wxop.stat.ah) -> a
    void a(com.tencent.wxop.stat.t,int,boolean) -> a
    com.tencent.wxop.stat.b.b ao() -> d
com.tencent.wxop.stat.u -> com.tencent.wxop.stat.ak:
    java.util.List bc -> a
    int g -> b
    boolean bR -> c
    boolean ba -> d
    com.tencent.wxop.stat.t cg -> e
    void run() -> run
com.tencent.wxop.stat.v -> com.tencent.wxop.stat.al:
    java.util.List bc -> a
    boolean ch -> b
    boolean bR -> c
    com.tencent.wxop.stat.t ci -> d
    void run() -> run
com.tencent.wxop.stat.w -> com.tencent.wxop.stat.am:
    com.tencent.wxop.stat.t cj -> a
    void run() -> run
com.tencent.wxop.stat.x -> com.tencent.wxop.stat.an:
    com.tencent.wxop.stat.a.d bP -> a
    com.tencent.wxop.stat.aj ck -> b
    boolean bR -> c
    boolean ba -> d
    com.tencent.wxop.stat.t cg -> e
    void run() -> run
com.tencent.wxop.stat.y -> com.tencent.wxop.stat.ao:
    com.tencent.wxop.stat.ah O -> a
    com.tencent.wxop.stat.t cl -> b
    void run() -> run
com.tencent.wxop.stat.z -> com.tencent.wxop.stat.ap:
    com.tencent.wxop.stat.g cm -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.ut.device.UTDevice -> com.ut.device.UTDevice:
    java.lang.String getUtdid(android.content.Context) -> getUtdid
demo.Pinyin4jAppletDemo -> demo.Pinyin4jAppletDemo:
    java.awt.Dimension APP_SIZE -> APP_SIZE
    long serialVersionUID -> serialVersionUID
    javax.swing.JPanel jContentPane -> jContentPane
    javax.swing.JTabbedPane jTabbedPane -> jTabbedPane
    javax.swing.JPanel formattedCharPanel -> formattedCharPanel
    javax.swing.JPanel optionPanel -> optionPanel
    javax.swing.JButton convertButton -> convertButton
    javax.swing.JPanel buttonPanel -> buttonPanel
    javax.swing.JTextArea formattedOutputField -> formattedOutputField
    javax.swing.JComboBox toneTypesComboBox -> toneTypesComboBox
    javax.swing.JComboBox vCharTypesComboBox -> vCharTypesComboBox
    javax.swing.JComboBox caseTypesComboBox -> caseTypesComboBox
    java.lang.String appName -> appName
    java.lang.String[] caseTypes -> caseTypes
    java.lang.String[] vCharTypes -> vCharTypes
    java.lang.String[] toneTypes -> toneTypes
    javax.swing.JLabel toneLabel -> toneLabel
    javax.swing.JLabel charLabel -> charLabel
    javax.swing.JTextField charTextField -> charTextField
    javax.swing.JPanel unformattedCharPanel -> unformattedCharPanel
    javax.swing.JLabel unformattedHanyuPinyinLabel -> unformattedHanyuPinyinLabel
    javax.swing.JTextArea unformattedHanyuPinyinTextArea -> unformattedHanyuPinyinTextArea
    javax.swing.JPanel unformattedHanyuPinyinPanel -> unformattedHanyuPinyinPanel
    javax.swing.JPanel unformattedTongyongPinyinPanel -> unformattedTongyongPinyinPanel
    javax.swing.JLabel unformattedTongyongPinyinLabel -> unformattedTongyongPinyinLabel
    javax.swing.JTextArea unformattedTongyongPinyinTextArea -> unformattedTongyongPinyinTextArea
    javax.swing.JPanel unformattedWadePinyinPanel -> unformattedWadePinyinPanel
    javax.swing.JLabel unformattedWadePinyinLabel -> unformattedWadePinyinLabel
    javax.swing.JTextArea unformattedWadePinyinTextArea -> unformattedWadePinyinTextArea
    javax.swing.JPanel unformattedMPS2PinyinPanel -> unformattedMPS2PinyinPanel
    javax.swing.JLabel unformattedMPS2PinyinLabel -> unformattedMPS2PinyinLabel
    javax.swing.JTextArea unformattedMPS2PinyinTextArea -> unformattedMPS2PinyinTextArea
    javax.swing.JPanel unformattedYalePinyinPanel -> unformattedYalePinyinPanel
    javax.swing.JLabel unformattedYalePinyinLabel -> unformattedYalePinyinLabel
    javax.swing.JTextArea unformattedYalePinyinTextArea -> unformattedYalePinyinTextArea
    javax.swing.JPanel unformattedGwoyeuRomatzyhPanel -> unformattedGwoyeuRomatzyhPanel
    javax.swing.JLabel unformattedGwoyeuRomatzyhLabel -> unformattedGwoyeuRomatzyhLabel
    javax.swing.JTextArea unformattedGwoyeuRomatzyhTextArea -> unformattedGwoyeuRomatzyhTextArea
    javax.swing.JScrollPane unformattedMPS2PinyinScrollPane -> unformattedMPS2PinyinScrollPane
    javax.swing.JScrollPane unformattedHanyuPinyinScrollPane -> unformattedHanyuPinyinScrollPane
    javax.swing.JScrollPane unformattedTongyongPinyinScrollPane -> unformattedTongyongPinyinScrollPane
    javax.swing.JScrollPane unformattedWadePinyinScrollPane -> unformattedWadePinyinScrollPane
    javax.swing.JScrollPane unformattedYalePinyinScrollPane -> unformattedYalePinyinScrollPane
    javax.swing.JScrollPane unformattedGwoyeuRomatzyhScrollPane -> unformattedGwoyeuRomatzyhScrollPane
    javax.swing.JTextField getCharTextField() -> getCharTextField
    javax.swing.JPanel getUnformattedCharPanel() -> getUnformattedCharPanel
    javax.swing.JTextArea getUnformattedHanyuPinyinTextArea() -> getUnformattedHanyuPinyinTextArea
    javax.swing.JPanel getUnformattedHanyuPinyinPanel() -> getUnformattedHanyuPinyinPanel
    javax.swing.JPanel getUnformattedTongyongPinyinPanel() -> getUnformattedTongyongPinyinPanel
    javax.swing.JTextArea getUnformattedTongyongPinyinTextArea() -> getUnformattedTongyongPinyinTextArea
    javax.swing.JPanel getUnformattedWadePinyinPanel() -> getUnformattedWadePinyinPanel
    javax.swing.JTextArea getUnformattedWadePinyinTextArea() -> getUnformattedWadePinyinTextArea
    javax.swing.JPanel getUnformattedMPS2PinyinPanel() -> getUnformattedMPS2PinyinPanel
    javax.swing.JTextArea getUnformattedMPS2PinyinTextArea() -> getUnformattedMPS2PinyinTextArea
    javax.swing.JPanel getUnformattedYalePinyinPanel() -> getUnformattedYalePinyinPanel
    javax.swing.JTextArea getUnformattedYalePinyinTextArea() -> getUnformattedYalePinyinTextArea
    javax.swing.JPanel getUnformattedGwoyeuRomatzyhPanel() -> getUnformattedGwoyeuRomatzyhPanel
    javax.swing.JTextArea getUnformattedGwoyeuRomatzyhTextArea() -> getUnformattedGwoyeuRomatzyhTextArea
    javax.swing.JScrollPane getUnformattedMPS2PinyinScrollPane() -> getUnformattedMPS2PinyinScrollPane
    javax.swing.JScrollPane getUnformattedHanyuPinyinScrollPane() -> getUnformattedHanyuPinyinScrollPane
    javax.swing.JScrollPane getUnformattedTongyongPinyinScrollPane() -> getUnformattedTongyongPinyinScrollPane
    javax.swing.JScrollPane getUnformattedWadePinyinScrollPane() -> getUnformattedWadePinyinScrollPane
    javax.swing.JScrollPane getUnformattedYalePinyinScrollPane() -> getUnformattedYalePinyinScrollPane
    javax.swing.JScrollPane getUnformattedGwoyeuRomatzyhScrollPane() -> getUnformattedGwoyeuRomatzyhScrollPane
    void main(java.lang.String[]) -> main
    void init() -> init
    javax.swing.JPanel getJContentPane() -> getJContentPane
    javax.swing.JTabbedPane getJTabbedPane() -> getJTabbedPane
    javax.swing.JPanel getFormattedCharPanel() -> getFormattedCharPanel
    javax.swing.JPanel getOptionPanel() -> getOptionPanel
    javax.swing.JButton getConvertButton() -> getConvertButton
    javax.swing.JPanel getButtonPanel() -> getButtonPanel
    javax.swing.JTextArea getFormattedOutputField() -> getFormattedOutputField
    javax.swing.JComboBox getToneTypesComboBox() -> getToneTypesComboBox
    javax.swing.JComboBox getVCharTypesComboBox() -> getVCharTypesComboBox
    javax.swing.JComboBox getCaseTypesComboBox() -> getCaseTypesComboBox
    java.lang.String getChineseCharText() -> getChineseCharText
    java.lang.String access$000(demo.Pinyin4jAppletDemo) -> access$000
    javax.swing.JComboBox access$100(demo.Pinyin4jAppletDemo) -> access$100
    javax.swing.JComboBox access$200(demo.Pinyin4jAppletDemo) -> access$200
    javax.swing.JComboBox access$300(demo.Pinyin4jAppletDemo) -> access$300
    javax.swing.JTextArea access$400(demo.Pinyin4jAppletDemo) -> access$400
    javax.swing.JTextArea access$500(demo.Pinyin4jAppletDemo) -> access$500
    javax.swing.JTextArea access$600(demo.Pinyin4jAppletDemo) -> access$600
    javax.swing.JTextArea access$700(demo.Pinyin4jAppletDemo) -> access$700
    javax.swing.JTextArea access$800(demo.Pinyin4jAppletDemo) -> access$800
    javax.swing.JTextArea access$900(demo.Pinyin4jAppletDemo) -> access$900
    javax.swing.JTextArea access$1000(demo.Pinyin4jAppletDemo) -> access$1000
demo.Pinyin4jAppletDemo$1 -> demo.Pinyin4jAppletDemo$1:
    demo.Pinyin4jAppletDemo val$appletDemo -> val$appletDemo
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
demo.Pinyin4jAppletDemo$2 -> demo.Pinyin4jAppletDemo$2:
    demo.Pinyin4jAppletDemo this$0 -> this$0
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void updateUnformattedTextField(char) -> updateUnformattedTextField
    void updateFormattedTextField(char,java.lang.String,java.lang.String,java.lang.String) -> updateFormattedTextField
    java.lang.String concatPinyinStringArray(java.lang.String[]) -> concatPinyinStringArray
demo.Pinyin4jAppletDemo$3 -> demo.Pinyin4jAppletDemo$3:
    demo.Pinyin4jAppletDemo this$0 -> this$0
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
kankan.wheel.widget.ItemsRange -> kankan.wheel.widget.a:
    int first -> a
    int count -> b
    int getFirst() -> a
    int getLast() -> b
    int getCount() -> c
    boolean contains(int) -> a
kankan.wheel.widget.OnWheelChangedListener -> kankan.wheel.widget.b:
    void onChanged(kankan.wheel.widget.WheelView,int,int) -> a
kankan.wheel.widget.OnWheelClickedListener -> kankan.wheel.widget.c:
    void onItemClicked(kankan.wheel.widget.WheelView,int) -> a
kankan.wheel.widget.OnWheelScrollListener -> kankan.wheel.widget.d:
    void onScrollingStarted(kankan.wheel.widget.WheelView) -> a
    void onScrollingFinished(kankan.wheel.widget.WheelView) -> b
kankan.wheel.widget.WheelRecycle -> kankan.wheel.widget.e:
    java.util.List items -> a
    java.util.List emptyItems -> b
    kankan.wheel.widget.WheelView wheel -> c
    int recycleItems(android.widget.LinearLayout,int,kankan.wheel.widget.ItemsRange) -> a
    android.view.View getItem() -> a
    android.view.View getEmptyItem() -> b
    void clearAll() -> c
    java.util.List addView(android.view.View,java.util.List) -> a
    void recycleView(android.view.View,int) -> a
    android.view.View getCachedView(java.util.List) -> a
kankan.wheel.widget.WheelScroller -> kankan.wheel.widget.f:
    kankan.wheel.widget.WheelScroller$ScrollingListener listener -> a
    android.content.Context context -> b
    android.view.GestureDetector gestureDetector -> c
    android.widget.Scroller scroller -> d
    int lastScrollY -> e
    float lastTouchedY -> f
    boolean isScrollingPerformed -> g
    android.view.GestureDetector$SimpleOnGestureListener gestureListener -> h
    int MESSAGE_SCROLL -> i
    int MESSAGE_JUSTIFY -> j
    android.os.Handler animationHandler -> k
    void setInterpolator(android.view.animation.Interpolator) -> a
    void scroll(int,int) -> a
    void stopScrolling() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void setNextMessage(int) -> a
    void clearMessages() -> c
    void justify() -> d
    void startScrolling() -> e
    void finishScrolling() -> b
    void access$0(kankan.wheel.widget.WheelScroller,int) -> a
    android.widget.Scroller access$1(kankan.wheel.widget.WheelScroller) -> a
    int access$2(kankan.wheel.widget.WheelScroller) -> b
    void access$3(kankan.wheel.widget.WheelScroller,int) -> b
    kankan.wheel.widget.WheelScroller$ScrollingListener access$4(kankan.wheel.widget.WheelScroller) -> c
    android.os.Handler access$5(kankan.wheel.widget.WheelScroller) -> d
    void access$6(kankan.wheel.widget.WheelScroller) -> e
kankan.wheel.widget.WheelScroller$1 -> kankan.wheel.widget.g:
    kankan.wheel.widget.WheelScroller this$0 -> a
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
kankan.wheel.widget.WheelScroller$2 -> kankan.wheel.widget.h:
    kankan.wheel.widget.WheelScroller this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
kankan.wheel.widget.WheelScroller$ScrollingListener -> kankan.wheel.widget.i:
    void onScroll(int) -> a
    void onStarted() -> a
    void onFinished() -> b
    void onJustify() -> c
kankan.wheel.widget.WheelView -> kankan.wheel.widget.WheelView:
    int[] SHADOWS_COLORS -> c
    int currentItem -> d
    int visibleItems -> e
    int itemHeight -> f
    android.graphics.drawable.Drawable centerDrawable -> g
    int wheelBackground -> h
    int wheelForeground -> i
    android.graphics.drawable.GradientDrawable topShadow -> j
    android.graphics.drawable.GradientDrawable bottomShadow -> k
    boolean drawShadows -> l
    kankan.wheel.widget.WheelScroller scroller -> m
    boolean isScrollingPerformed -> n
    int scrollingOffset -> o
    boolean isCyclic -> a
    android.widget.LinearLayout itemsLayout -> p
    int firstItem -> q
    kankan.wheel.widget.adapters.WheelViewAdapter viewAdapter -> r
    kankan.wheel.widget.WheelRecycle recycle -> s
    java.util.List changingListeners -> t
    java.util.List scrollingListeners -> u
    java.util.List clickingListeners -> v
    kankan.wheel.widget.WheelScroller$ScrollingListener scrollingListener -> b
    android.database.DataSetObserver dataObserver -> w
    void initData(android.content.Context) -> a
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    int getVisibleItems() -> getVisibleItems
    void setVisibleItems(int) -> setVisibleItems
    kankan.wheel.widget.adapters.WheelViewAdapter getViewAdapter() -> getViewAdapter
    void setViewAdapter(kankan.wheel.widget.adapters.WheelViewAdapter) -> setViewAdapter
    void addChangingListener(kankan.wheel.widget.OnWheelChangedListener) -> a
    void notifyChangingListeners(int,int) -> a
    void notifyScrollingListenersAboutStart() -> a
    void notifyScrollingListenersAboutEnd() -> b
    void notifyClickListenersAboutClick(int) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItem(int,boolean) -> a
    void setCurrentItem(int) -> setCurrentItem
    boolean isCyclic() -> c
    void setCyclic(boolean) -> setCyclic
    void setDrawShadows(boolean) -> setDrawShadows
    void setWheelBackground(int) -> setWheelBackground
    void setWheelForeground(int) -> setWheelForeground
    void invalidateWheel(boolean) -> a
    void initResourcesIfNecessary() -> d
    int getDesiredHeight(android.widget.LinearLayout) -> a
    int getItemHeight() -> getItemHeight
    int calculateLayoutWidth(int,int) -> c
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,int) -> d
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawShadows(android.graphics.Canvas) -> a
    void drawItems(android.graphics.Canvas) -> b
    void drawCenterRect(android.graphics.Canvas) -> c
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void doScroll(int) -> b
    void scroll(int,int) -> b
    kankan.wheel.widget.ItemsRange getItemsRange() -> getItemsRange
    boolean rebuildItems() -> e
    void updateView() -> f
    void createItemsLayout() -> g
    void buildViewForMeasuring() -> h
    boolean addViewItem(int,boolean) -> b
    boolean isValidItemIndex(int) -> c
    android.view.View getItemView(int) -> d
    void access$0(kankan.wheel.widget.WheelView,boolean) -> a
    void access$1(kankan.wheel.widget.WheelView,int) -> a
    int access$2(kankan.wheel.widget.WheelView) -> a
    void access$3(kankan.wheel.widget.WheelView,int) -> b
    kankan.wheel.widget.WheelScroller access$4(kankan.wheel.widget.WheelView) -> b
    boolean access$5(kankan.wheel.widget.WheelView) -> c
kankan.wheel.widget.WheelView$1 -> kankan.wheel.widget.j:
    kankan.wheel.widget.WheelView this$0 -> a
    void onStarted() -> a
    void onScroll(int) -> a
    void onFinished() -> b
    void onJustify() -> c
kankan.wheel.widget.WheelView$2 -> kankan.wheel.widget.k:
    kankan.wheel.widget.WheelView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
kankan.wheel.widget.adapters.AbstractWheelAdapter -> kankan.wheel.widget.a.a:
    java.util.List datasetObservers -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
kankan.wheel.widget.adapters.AbstractWheelTextAdapter -> kankan.wheel.widget.a.b:
    int textColor -> f
    int textSize -> g
    android.content.Context context -> a
    android.view.LayoutInflater inflater -> b
    int itemResourceId -> c
    int itemTextResourceId -> d
    int emptyItemResourceId -> e
    java.lang.CharSequence getItemText(int) -> a
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void configureTextView(android.widget.TextView) -> a
    android.widget.TextView getTextView(android.view.View,int) -> a
    android.view.View getView(int,android.view.ViewGroup) -> a
kankan.wheel.widget.adapters.ArrayWheelAdapter -> kankan.wheel.widget.a.c:
    java.lang.Object[] items -> f
    java.lang.CharSequence getItemText(int) -> a
    int getItemsCount() -> a
kankan.wheel.widget.adapters.WheelViewAdapter -> kankan.wheel.widget.a.d:
    int getItemsCount() -> a
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
net.sourceforge.pinyin4j.ChineseToPinyinResource -> b.a.a.a:
    java.util.Properties unicodeToHanyuPinyinTable -> a
    void setUnicodeToHanyuPinyinTable(java.util.Properties) -> a
    java.util.Properties getUnicodeToHanyuPinyinTable() -> b
    void initializeResource() -> c
    java.lang.String[] getHanyuPinyinStringArray(char) -> a
    boolean isValidRecord(java.lang.String) -> a
    java.lang.String getHanyuPinyinRecordFromChar(char) -> b
    net.sourceforge.pinyin4j.ChineseToPinyinResource getInstance() -> a
net.sourceforge.pinyin4j.ChineseToPinyinResource$1 -> b.a.a.b:
net.sourceforge.pinyin4j.ChineseToPinyinResource$ChineseToPinyinResourceHolder -> b.a.a.c:
    net.sourceforge.pinyin4j.ChineseToPinyinResource theInstance -> a
net.sourceforge.pinyin4j.GwoyeuRomatzyhResource -> b.a.a.d:
    com.hp.hpl.sparta.Document pinyinToGwoyeuMappingDoc -> a
    void setPinyinToGwoyeuMappingDoc(com.hp.hpl.sparta.Document) -> a
    com.hp.hpl.sparta.Document getPinyinToGwoyeuMappingDoc() -> a
    void initializeResource() -> c
    net.sourceforge.pinyin4j.GwoyeuRomatzyhResource getInstance() -> b
net.sourceforge.pinyin4j.GwoyeuRomatzyhResource$1 -> b.a.a.e:
net.sourceforge.pinyin4j.GwoyeuRomatzyhResource$GwoyeuRomatzyhSystemResourceHolder -> b.a.a.f:
    net.sourceforge.pinyin4j.GwoyeuRomatzyhResource theInstance -> a
net.sourceforge.pinyin4j.GwoyeuRomatzyhTranslator -> b.a.a.g:
    java.lang.String[] tones -> a
    java.lang.String convertHanyuPinyinToGwoyeuRomatzyh(java.lang.String) -> a
net.sourceforge.pinyin4j.PinyinFormatter -> b.a.a.h:
    java.lang.String formatHanyuPinyin(java.lang.String,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat) -> a
    java.lang.String convertToneNumber2ToneMark(java.lang.String) -> a
net.sourceforge.pinyin4j.PinyinHelper -> b.a.a.i:
    java.lang.String[] toHanyuPinyinStringArray(char) -> a
    java.lang.String[] toHanyuPinyinStringArray(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat) -> a
    java.lang.String[] getFormattedHanyuPinyinStringArray(char,net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat) -> b
    java.lang.String[] getUnformattedHanyuPinyinStringArray(char) -> g
    java.lang.String[] toTongyongPinyinStringArray(char) -> b
    java.lang.String[] toWadeGilesPinyinStringArray(char) -> c
    java.lang.String[] toMPS2PinyinStringArray(char) -> d
    java.lang.String[] toYalePinyinStringArray(char) -> e
    java.lang.String[] convertToTargetPinyinStringArray(char,net.sourceforge.pinyin4j.PinyinRomanizationType) -> a
    java.lang.String[] toGwoyeuRomatzyhStringArray(char) -> f
    java.lang.String[] convertToGwoyeuRomatzyhStringArray(char) -> h
net.sourceforge.pinyin4j.PinyinRomanizationResource -> b.a.a.j:
    com.hp.hpl.sparta.Document pinyinMappingDoc -> a
    void setPinyinMappingDoc(com.hp.hpl.sparta.Document) -> a
    com.hp.hpl.sparta.Document getPinyinMappingDoc() -> a
    void initializeResource() -> c
    net.sourceforge.pinyin4j.PinyinRomanizationResource getInstance() -> b
net.sourceforge.pinyin4j.PinyinRomanizationResource$1 -> b.a.a.k:
net.sourceforge.pinyin4j.PinyinRomanizationResource$PinyinRomanizationSystemResourceHolder -> b.a.a.l:
    net.sourceforge.pinyin4j.PinyinRomanizationResource theInstance -> a
net.sourceforge.pinyin4j.PinyinRomanizationTranslator -> b.a.a.m:
    java.lang.String convertRomanizationSystem(java.lang.String,net.sourceforge.pinyin4j.PinyinRomanizationType,net.sourceforge.pinyin4j.PinyinRomanizationType) -> a
net.sourceforge.pinyin4j.PinyinRomanizationType -> b.a.a.n:
    net.sourceforge.pinyin4j.PinyinRomanizationType HANYU_PINYIN -> a
    net.sourceforge.pinyin4j.PinyinRomanizationType WADEGILES_PINYIN -> b
    net.sourceforge.pinyin4j.PinyinRomanizationType MPS2_PINYIN -> c
    net.sourceforge.pinyin4j.PinyinRomanizationType YALE_PINYIN -> d
    net.sourceforge.pinyin4j.PinyinRomanizationType TONGYONG_PINYIN -> e
    net.sourceforge.pinyin4j.PinyinRomanizationType GWOYEU_ROMATZYH -> f
    java.lang.String tagName -> g
    java.lang.String getTagName() -> a
    void setTagName(java.lang.String) -> a
net.sourceforge.pinyin4j.ResourceHelper -> b.a.a.o:
    java.lang.Class class$net$sourceforge$pinyin4j$ResourceHelper -> a
    java.io.BufferedInputStream getResourceInputStream(java.lang.String) -> a
    java.lang.Class class$(java.lang.String) -> b
net.sourceforge.pinyin4j.TextHelper -> b.a.a.p:
    java.lang.String extractToneNumber(java.lang.String) -> a
    java.lang.String extractPinyinString(java.lang.String) -> b
net.sourceforge.pinyin4j.format.HanyuPinyinCaseType -> b.a.a.a.a:
    net.sourceforge.pinyin4j.format.HanyuPinyinCaseType UPPERCASE -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinCaseType LOWERCASE -> b
    java.lang.String name -> c
    void setName(java.lang.String) -> a
net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat -> b.a.a.a.b:
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType vCharType -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinCaseType caseType -> b
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType toneType -> c
    void restoreDefault() -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinCaseType getCaseType() -> b
    void setCaseType(net.sourceforge.pinyin4j.format.HanyuPinyinCaseType) -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType getToneType() -> c
    void setToneType(net.sourceforge.pinyin4j.format.HanyuPinyinToneType) -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType getVCharType() -> d
    void setVCharType(net.sourceforge.pinyin4j.format.HanyuPinyinVCharType) -> a
net.sourceforge.pinyin4j.format.HanyuPinyinToneType -> b.a.a.a.c:
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType WITH_TONE_NUMBER -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType WITHOUT_TONE -> b
    net.sourceforge.pinyin4j.format.HanyuPinyinToneType WITH_TONE_MARK -> c
    java.lang.String name -> d
    void setName(java.lang.String) -> a
net.sourceforge.pinyin4j.format.HanyuPinyinVCharType -> b.a.a.a.d:
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType WITH_U_AND_COLON -> a
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType WITH_V -> b
    net.sourceforge.pinyin4j.format.HanyuPinyinVCharType WITH_U_UNICODE -> c
    java.lang.String name -> d
    void setName(java.lang.String) -> a
net.sourceforge.pinyin4j.format.exception.BadHanyuPinyinOutputFormatCombination -> b.a.a.a.a.a:
org.apache.http.ConnectionClosedException -> org.apache.http.ConnectionClosedException:
    long serialVersionUID -> serialVersionUID
org.apache.http.ConnectionReuseStrategy -> org.apache.http.ConnectionReuseStrategy:
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
org.apache.http.Consts -> org.apache.http.Consts:
    int CR -> CR
    int LF -> LF
    int SP -> SP
    int HT -> HT
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset ASCII -> ASCII
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
org.apache.http.ContentTooLongException -> org.apache.http.ContentTooLongException:
    long serialVersionUID -> serialVersionUID
org.apache.http.FormattedHeader -> org.apache.http.FormattedHeader:
    org.apache.http.util.CharArrayBuffer getBuffer() -> getBuffer
    int getValuePos() -> getValuePos
org.apache.http.Header -> org.apache.http.Header:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.HeaderElement[] getElements() -> getElements
org.apache.http.HeaderElement -> org.apache.http.HeaderElement:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.NameValuePair[] getParameters() -> getParameters
    org.apache.http.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    int getParameterCount() -> getParameterCount
    org.apache.http.NameValuePair getParameter(int) -> getParameter
org.apache.http.HeaderElementIterator -> org.apache.http.HeaderElementIterator:
    boolean hasNext() -> hasNext
    org.apache.http.HeaderElement nextElement() -> nextElement
org.apache.http.HeaderIterator -> org.apache.http.HeaderIterator:
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
org.apache.http.HttpClientConnection -> org.apache.http.HttpClientConnection:
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    void flush() -> flush
org.apache.http.HttpConnection -> org.apache.http.HttpConnection:
    void close() -> close
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.HttpConnectionFactory -> org.apache.http.HttpConnectionFactory:
    org.apache.http.HttpConnection createConnection(java.net.Socket) -> createConnection
org.apache.http.HttpConnectionMetrics -> org.apache.http.HttpConnectionMetrics:
    long getRequestCount() -> getRequestCount
    long getResponseCount() -> getResponseCount
    long getSentBytesCount() -> getSentBytesCount
    long getReceivedBytesCount() -> getReceivedBytesCount
    java.lang.Object getMetric(java.lang.String) -> getMetric
    void reset() -> reset
org.apache.http.HttpEntity -> org.apache.http.HttpEntity:
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.HttpEntityEnclosingRequest -> org.apache.http.HttpEntityEnclosingRequest:
    boolean expectContinue() -> expectContinue
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    org.apache.http.HttpEntity getEntity() -> getEntity
org.apache.http.HttpException -> org.apache.http.HttpException:
    long serialVersionUID -> serialVersionUID
org.apache.http.HttpHeaders -> org.apache.http.HttpHeaders:
    java.lang.String ACCEPT -> ACCEPT
    java.lang.String ACCEPT_CHARSET -> ACCEPT_CHARSET
    java.lang.String ACCEPT_ENCODING -> ACCEPT_ENCODING
    java.lang.String ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    java.lang.String ACCEPT_RANGES -> ACCEPT_RANGES
    java.lang.String AGE -> AGE
    java.lang.String ALLOW -> ALLOW
    java.lang.String AUTHORIZATION -> AUTHORIZATION
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    java.lang.String CONNECTION -> CONNECTION
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    java.lang.String CONTENT_LENGTH -> CONTENT_LENGTH
    java.lang.String CONTENT_LOCATION -> CONTENT_LOCATION
    java.lang.String CONTENT_MD5 -> CONTENT_MD5
    java.lang.String CONTENT_RANGE -> CONTENT_RANGE
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String DATE -> DATE
    java.lang.String DAV -> DAV
    java.lang.String DEPTH -> DEPTH
    java.lang.String DESTINATION -> DESTINATION
    java.lang.String ETAG -> ETAG
    java.lang.String EXPECT -> EXPECT
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String FROM -> FROM
    java.lang.String HOST -> HOST
    java.lang.String IF -> IF
    java.lang.String IF_MATCH -> IF_MATCH
    java.lang.String IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    java.lang.String IF_NONE_MATCH -> IF_NONE_MATCH
    java.lang.String IF_RANGE -> IF_RANGE
    java.lang.String IF_UNMODIFIED_SINCE -> IF_UNMODIFIED_SINCE
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String LOCATION -> LOCATION
    java.lang.String LOCK_TOKEN -> LOCK_TOKEN
    java.lang.String MAX_FORWARDS -> MAX_FORWARDS
    java.lang.String OVERWRITE -> OVERWRITE
    java.lang.String PRAGMA -> PRAGMA
    java.lang.String PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.String PROXY_AUTHORIZATION -> PROXY_AUTHORIZATION
    java.lang.String RANGE -> RANGE
    java.lang.String REFERER -> REFERER
    java.lang.String RETRY_AFTER -> RETRY_AFTER
    java.lang.String SERVER -> SERVER
    java.lang.String STATUS_URI -> STATUS_URI
    java.lang.String TE -> TE
    java.lang.String TIMEOUT -> TIMEOUT
    java.lang.String TRAILER -> TRAILER
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String UPGRADE -> UPGRADE
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String VARY -> VARY
    java.lang.String VIA -> VIA
    java.lang.String WARNING -> WARNING
    java.lang.String WWW_AUTHENTICATE -> WWW_AUTHENTICATE
org.apache.http.HttpHost -> org.apache.http.HttpHost:
    long serialVersionUID -> serialVersionUID
    java.lang.String DEFAULT_SCHEME_NAME -> DEFAULT_SCHEME_NAME
    java.lang.String hostname -> hostname
    java.lang.String lcHostname -> lcHostname
    int port -> port
    java.lang.String schemeName -> schemeName
    java.net.InetAddress address -> address
    java.lang.String getHostName() -> getHostName
    int getPort() -> getPort
    java.lang.String getSchemeName() -> getSchemeName
    java.net.InetAddress getAddress() -> getAddress
    java.lang.String toURI() -> toURI
    java.lang.String toHostString() -> toHostString
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object clone() -> clone
org.apache.http.HttpInetConnection -> org.apache.http.HttpInetConnection:
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
org.apache.http.HttpMessage -> org.apache.http.HttpMessage:
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    void removeHeader(org.apache.http.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    org.apache.http.HeaderIterator headerIterator() -> headerIterator
    org.apache.http.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
org.apache.http.HttpRequest -> org.apache.http.HttpRequest:
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
org.apache.http.HttpRequestFactory -> org.apache.http.HttpRequestFactory:
    org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) -> newHttpRequest
    org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
org.apache.http.HttpRequestInterceptor -> org.apache.http.HttpRequestInterceptor:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.HttpResponse -> org.apache.http.HttpResponse:
    org.apache.http.StatusLine getStatusLine() -> getStatusLine
    void setStatusLine(org.apache.http.StatusLine) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
org.apache.http.HttpResponseFactory -> org.apache.http.HttpResponseFactory:
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext) -> newHttpResponse
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext) -> newHttpResponse
org.apache.http.HttpResponseInterceptor -> org.apache.http.HttpResponseInterceptor:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.HttpServerConnection -> org.apache.http.HttpServerConnection:
    org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    void flush() -> flush
org.apache.http.HttpStatus -> org.apache.http.HttpStatus:
    int SC_CONTINUE -> SC_CONTINUE
    int SC_SWITCHING_PROTOCOLS -> SC_SWITCHING_PROTOCOLS
    int SC_PROCESSING -> SC_PROCESSING
    int SC_OK -> SC_OK
    int SC_CREATED -> SC_CREATED
    int SC_ACCEPTED -> SC_ACCEPTED
    int SC_NON_AUTHORITATIVE_INFORMATION -> SC_NON_AUTHORITATIVE_INFORMATION
    int SC_NO_CONTENT -> SC_NO_CONTENT
    int SC_RESET_CONTENT -> SC_RESET_CONTENT
    int SC_PARTIAL_CONTENT -> SC_PARTIAL_CONTENT
    int SC_MULTI_STATUS -> SC_MULTI_STATUS
    int SC_MULTIPLE_CHOICES -> SC_MULTIPLE_CHOICES
    int SC_MOVED_PERMANENTLY -> SC_MOVED_PERMANENTLY
    int SC_MOVED_TEMPORARILY -> SC_MOVED_TEMPORARILY
    int SC_SEE_OTHER -> SC_SEE_OTHER
    int SC_NOT_MODIFIED -> SC_NOT_MODIFIED
    int SC_USE_PROXY -> SC_USE_PROXY
    int SC_TEMPORARY_REDIRECT -> SC_TEMPORARY_REDIRECT
    int SC_BAD_REQUEST -> SC_BAD_REQUEST
    int SC_UNAUTHORIZED -> SC_UNAUTHORIZED
    int SC_PAYMENT_REQUIRED -> SC_PAYMENT_REQUIRED
    int SC_FORBIDDEN -> SC_FORBIDDEN
    int SC_NOT_FOUND -> SC_NOT_FOUND
    int SC_METHOD_NOT_ALLOWED -> SC_METHOD_NOT_ALLOWED
    int SC_NOT_ACCEPTABLE -> SC_NOT_ACCEPTABLE
    int SC_PROXY_AUTHENTICATION_REQUIRED -> SC_PROXY_AUTHENTICATION_REQUIRED
    int SC_REQUEST_TIMEOUT -> SC_REQUEST_TIMEOUT
    int SC_CONFLICT -> SC_CONFLICT
    int SC_GONE -> SC_GONE
    int SC_LENGTH_REQUIRED -> SC_LENGTH_REQUIRED
    int SC_PRECONDITION_FAILED -> SC_PRECONDITION_FAILED
    int SC_REQUEST_TOO_LONG -> SC_REQUEST_TOO_LONG
    int SC_REQUEST_URI_TOO_LONG -> SC_REQUEST_URI_TOO_LONG
    int SC_UNSUPPORTED_MEDIA_TYPE -> SC_UNSUPPORTED_MEDIA_TYPE
    int SC_REQUESTED_RANGE_NOT_SATISFIABLE -> SC_REQUESTED_RANGE_NOT_SATISFIABLE
    int SC_EXPECTATION_FAILED -> SC_EXPECTATION_FAILED
    int SC_INSUFFICIENT_SPACE_ON_RESOURCE -> SC_INSUFFICIENT_SPACE_ON_RESOURCE
    int SC_METHOD_FAILURE -> SC_METHOD_FAILURE
    int SC_UNPROCESSABLE_ENTITY -> SC_UNPROCESSABLE_ENTITY
    int SC_LOCKED -> SC_LOCKED
    int SC_FAILED_DEPENDENCY -> SC_FAILED_DEPENDENCY
    int SC_INTERNAL_SERVER_ERROR -> SC_INTERNAL_SERVER_ERROR
    int SC_NOT_IMPLEMENTED -> SC_NOT_IMPLEMENTED
    int SC_BAD_GATEWAY -> SC_BAD_GATEWAY
    int SC_SERVICE_UNAVAILABLE -> SC_SERVICE_UNAVAILABLE
    int SC_GATEWAY_TIMEOUT -> SC_GATEWAY_TIMEOUT
    int SC_HTTP_VERSION_NOT_SUPPORTED -> SC_HTTP_VERSION_NOT_SUPPORTED
    int SC_INSUFFICIENT_STORAGE -> SC_INSUFFICIENT_STORAGE
org.apache.http.HttpVersion -> org.apache.http.HttpVersion:
    long serialVersionUID -> serialVersionUID
    java.lang.String HTTP -> HTTP
    org.apache.http.HttpVersion HTTP_0_9 -> HTTP_0_9
    org.apache.http.HttpVersion HTTP_1_0 -> HTTP_1_0
    org.apache.http.HttpVersion HTTP_1_1 -> HTTP_1_1
    org.apache.http.ProtocolVersion forVersion(int,int) -> forVersion
org.apache.http.MalformedChunkCodingException -> org.apache.http.MalformedChunkCodingException:
    long serialVersionUID -> serialVersionUID
org.apache.http.MessageConstraintException -> org.apache.http.MessageConstraintException:
    long serialVersionUID -> serialVersionUID
org.apache.http.MethodNotSupportedException -> org.apache.http.MethodNotSupportedException:
    long serialVersionUID -> serialVersionUID
org.apache.http.NameValuePair -> org.apache.http.NameValuePair:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
org.apache.http.NoHttpResponseException -> org.apache.http.NoHttpResponseException:
    long serialVersionUID -> serialVersionUID
org.apache.http.ParseException -> org.apache.http.ParseException:
    long serialVersionUID -> serialVersionUID
org.apache.http.ProtocolException -> org.apache.http.ProtocolException:
    long serialVersionUID -> serialVersionUID
org.apache.http.ProtocolVersion -> org.apache.http.ProtocolVersion:
    long serialVersionUID -> serialVersionUID
    java.lang.String protocol -> protocol
    int major -> major
    int minor -> minor
    java.lang.String getProtocol() -> getProtocol
    int getMajor() -> getMajor
    int getMinor() -> getMinor
    org.apache.http.ProtocolVersion forVersion(int,int) -> forVersion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isComparable(org.apache.http.ProtocolVersion) -> isComparable
    int compareToVersion(org.apache.http.ProtocolVersion) -> compareToVersion
    boolean greaterEquals(org.apache.http.ProtocolVersion) -> greaterEquals
    boolean lessEquals(org.apache.http.ProtocolVersion) -> lessEquals
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.ReasonPhraseCatalog -> org.apache.http.ReasonPhraseCatalog:
    java.lang.String getReason(int,java.util.Locale) -> getReason
org.apache.http.RequestLine -> org.apache.http.RequestLine:
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getUri() -> getUri
org.apache.http.StatusLine -> org.apache.http.StatusLine:
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
org.apache.http.TokenIterator -> org.apache.http.TokenIterator:
    boolean hasNext() -> hasNext
    java.lang.String nextToken() -> nextToken
org.apache.http.TruncatedChunkException -> org.apache.http.TruncatedChunkException:
    long serialVersionUID -> serialVersionUID
org.apache.http.UnsupportedHttpVersionException -> org.apache.http.UnsupportedHttpVersionException:
    long serialVersionUID -> serialVersionUID
org.apache.http.annotation.GuardedBy -> org.apache.http.annotation.GuardedBy:
    java.lang.String value() -> value
org.apache.http.annotation.Immutable -> org.apache.http.annotation.Immutable:
org.apache.http.annotation.NotThreadSafe -> org.apache.http.annotation.NotThreadSafe:
org.apache.http.annotation.ThreadSafe -> org.apache.http.annotation.ThreadSafe:
org.apache.http.concurrent.BasicFuture -> org.apache.http.concurrent.BasicFuture:
    org.apache.http.concurrent.FutureCallback callback -> callback
    boolean completed -> completed
    boolean cancelled -> cancelled
    java.lang.Object result -> result
    java.lang.Exception ex -> ex
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object getResult() -> getResult
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    boolean completed(java.lang.Object) -> completed
    boolean failed(java.lang.Exception) -> failed
    boolean cancel(boolean) -> cancel
    boolean cancel() -> cancel
org.apache.http.concurrent.Cancellable -> org.apache.http.concurrent.Cancellable:
    boolean cancel() -> cancel
org.apache.http.concurrent.FutureCallback -> org.apache.http.concurrent.FutureCallback:
    void completed(java.lang.Object) -> completed
    void failed(java.lang.Exception) -> failed
    void cancelled() -> cancelled
org.apache.http.config.ConnectionConfig -> org.apache.http.config.ConnectionConfig:
    org.apache.http.config.ConnectionConfig DEFAULT -> DEFAULT
    int bufferSize -> bufferSize
    int fragmentSizeHint -> fragmentSizeHint
    java.nio.charset.Charset charset -> charset
    java.nio.charset.CodingErrorAction malformedInputAction -> malformedInputAction
    java.nio.charset.CodingErrorAction unmappableInputAction -> unmappableInputAction
    org.apache.http.config.MessageConstraints messageConstraints -> messageConstraints
    int getBufferSize() -> getBufferSize
    int getFragmentSizeHint() -> getFragmentSizeHint
    java.nio.charset.Charset getCharset() -> getCharset
    java.nio.charset.CodingErrorAction getMalformedInputAction() -> getMalformedInputAction
    java.nio.charset.CodingErrorAction getUnmappableInputAction() -> getUnmappableInputAction
    org.apache.http.config.MessageConstraints getMessageConstraints() -> getMessageConstraints
    org.apache.http.config.ConnectionConfig clone() -> clone
    java.lang.String toString() -> toString
    org.apache.http.config.ConnectionConfig$Builder custom() -> custom
    org.apache.http.config.ConnectionConfig$Builder copy(org.apache.http.config.ConnectionConfig) -> copy
    java.lang.Object clone() -> clone
org.apache.http.config.ConnectionConfig$Builder -> org.apache.http.config.ConnectionConfig$Builder:
    int bufferSize -> bufferSize
    int fragmentSizeHint -> fragmentSizeHint
    java.nio.charset.Charset charset -> charset
    java.nio.charset.CodingErrorAction malformedInputAction -> malformedInputAction
    java.nio.charset.CodingErrorAction unmappableInputAction -> unmappableInputAction
    org.apache.http.config.MessageConstraints messageConstraints -> messageConstraints
    org.apache.http.config.ConnectionConfig$Builder setBufferSize(int) -> setBufferSize
    org.apache.http.config.ConnectionConfig$Builder setFragmentSizeHint(int) -> setFragmentSizeHint
    org.apache.http.config.ConnectionConfig$Builder setCharset(java.nio.charset.Charset) -> setCharset
    org.apache.http.config.ConnectionConfig$Builder setMalformedInputAction(java.nio.charset.CodingErrorAction) -> setMalformedInputAction
    org.apache.http.config.ConnectionConfig$Builder setUnmappableInputAction(java.nio.charset.CodingErrorAction) -> setUnmappableInputAction
    org.apache.http.config.ConnectionConfig$Builder setMessageConstraints(org.apache.http.config.MessageConstraints) -> setMessageConstraints
    org.apache.http.config.ConnectionConfig build() -> build
org.apache.http.config.Lookup -> org.apache.http.config.Lookup:
    java.lang.Object lookup(java.lang.String) -> lookup
org.apache.http.config.MessageConstraints -> org.apache.http.config.MessageConstraints:
    org.apache.http.config.MessageConstraints DEFAULT -> DEFAULT
    int maxLineLength -> maxLineLength
    int maxHeaderCount -> maxHeaderCount
    int getMaxLineLength() -> getMaxLineLength
    int getMaxHeaderCount() -> getMaxHeaderCount
    org.apache.http.config.MessageConstraints clone() -> clone
    java.lang.String toString() -> toString
    org.apache.http.config.MessageConstraints lineLen(int) -> lineLen
    org.apache.http.config.MessageConstraints$Builder custom() -> custom
    org.apache.http.config.MessageConstraints$Builder copy(org.apache.http.config.MessageConstraints) -> copy
    java.lang.Object clone() -> clone
org.apache.http.config.MessageConstraints$Builder -> org.apache.http.config.MessageConstraints$Builder:
    int maxLineLength -> maxLineLength
    int maxHeaderCount -> maxHeaderCount
    org.apache.http.config.MessageConstraints$Builder setMaxLineLength(int) -> setMaxLineLength
    org.apache.http.config.MessageConstraints$Builder setMaxHeaderCount(int) -> setMaxHeaderCount
    org.apache.http.config.MessageConstraints build() -> build
org.apache.http.config.Registry -> org.apache.http.config.Registry:
    java.util.Map map -> map
    java.lang.Object lookup(java.lang.String) -> lookup
    java.lang.String toString() -> toString
org.apache.http.config.RegistryBuilder -> org.apache.http.config.RegistryBuilder:
    java.util.Map items -> items
    org.apache.http.config.RegistryBuilder create() -> create
    org.apache.http.config.RegistryBuilder register(java.lang.String,java.lang.Object) -> register
    org.apache.http.config.Registry build() -> build
    java.lang.String toString() -> toString
org.apache.http.config.SocketConfig -> org.apache.http.config.SocketConfig:
    org.apache.http.config.SocketConfig DEFAULT -> DEFAULT
    int soTimeout -> soTimeout
    boolean soReuseAddress -> soReuseAddress
    int soLinger -> soLinger
    boolean soKeepAlive -> soKeepAlive
    boolean tcpNoDelay -> tcpNoDelay
    int getSoTimeout() -> getSoTimeout
    boolean isSoReuseAddress() -> isSoReuseAddress
    int getSoLinger() -> getSoLinger
    boolean isSoKeepAlive() -> isSoKeepAlive
    boolean isTcpNoDelay() -> isTcpNoDelay
    org.apache.http.config.SocketConfig clone() -> clone
    java.lang.String toString() -> toString
    org.apache.http.config.SocketConfig$Builder custom() -> custom
    org.apache.http.config.SocketConfig$Builder copy(org.apache.http.config.SocketConfig) -> copy
    java.lang.Object clone() -> clone
org.apache.http.config.SocketConfig$Builder -> org.apache.http.config.SocketConfig$Builder:
    int soTimeout -> soTimeout
    boolean soReuseAddress -> soReuseAddress
    int soLinger -> soLinger
    boolean soKeepAlive -> soKeepAlive
    boolean tcpNoDelay -> tcpNoDelay
    org.apache.http.config.SocketConfig$Builder setSoTimeout(int) -> setSoTimeout
    org.apache.http.config.SocketConfig$Builder setSoReuseAddress(boolean) -> setSoReuseAddress
    org.apache.http.config.SocketConfig$Builder setSoLinger(int) -> setSoLinger
    org.apache.http.config.SocketConfig$Builder setSoKeepAlive(boolean) -> setSoKeepAlive
    org.apache.http.config.SocketConfig$Builder setTcpNoDelay(boolean) -> setTcpNoDelay
    org.apache.http.config.SocketConfig build() -> build
org.apache.http.entity.AbstractHttpEntity -> org.apache.http.entity.AbstractHttpEntity:
    int OUTPUT_BUFFER_SIZE -> OUTPUT_BUFFER_SIZE
    org.apache.http.Header contentType -> contentType
    org.apache.http.Header contentEncoding -> contentEncoding
    boolean chunked -> chunked
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    boolean isChunked() -> isChunked
    void setContentType(org.apache.http.Header) -> setContentType
    void setContentType(java.lang.String) -> setContentType
    void setContentEncoding(org.apache.http.Header) -> setContentEncoding
    void setContentEncoding(java.lang.String) -> setContentEncoding
    void setChunked(boolean) -> setChunked
    void consumeContent() -> consumeContent
org.apache.http.entity.BasicHttpEntity -> org.apache.http.entity.BasicHttpEntity:
    java.io.InputStream content -> content
    long length -> length
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isRepeatable() -> isRepeatable
    void setContentLength(long) -> setContentLength
    void setContent(java.io.InputStream) -> setContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
org.apache.http.entity.BufferedHttpEntity -> org.apache.http.entity.BufferedHttpEntity:
    byte[] buffer -> buffer
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isChunked() -> isChunked
    boolean isRepeatable() -> isRepeatable
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
org.apache.http.entity.ByteArrayEntity -> org.apache.http.entity.ByteArrayEntity:
    byte[] content -> content
    byte[] b -> b
    int off -> off
    int len -> len
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
org.apache.http.entity.ContentLengthStrategy -> org.apache.http.entity.ContentLengthStrategy:
    int IDENTITY -> IDENTITY
    int CHUNKED -> CHUNKED
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.entity.ContentProducer -> org.apache.http.entity.ContentProducer:
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.ContentType -> org.apache.http.entity.ContentType:
    long serialVersionUID -> serialVersionUID
    org.apache.http.entity.ContentType APPLICATION_ATOM_XML -> APPLICATION_ATOM_XML
    org.apache.http.entity.ContentType APPLICATION_FORM_URLENCODED -> APPLICATION_FORM_URLENCODED
    org.apache.http.entity.ContentType APPLICATION_JSON -> APPLICATION_JSON
    org.apache.http.entity.ContentType APPLICATION_OCTET_STREAM -> APPLICATION_OCTET_STREAM
    org.apache.http.entity.ContentType APPLICATION_SVG_XML -> APPLICATION_SVG_XML
    org.apache.http.entity.ContentType APPLICATION_XHTML_XML -> APPLICATION_XHTML_XML
    org.apache.http.entity.ContentType APPLICATION_XML -> APPLICATION_XML
    org.apache.http.entity.ContentType MULTIPART_FORM_DATA -> MULTIPART_FORM_DATA
    org.apache.http.entity.ContentType TEXT_HTML -> TEXT_HTML
    org.apache.http.entity.ContentType TEXT_PLAIN -> TEXT_PLAIN
    org.apache.http.entity.ContentType TEXT_XML -> TEXT_XML
    org.apache.http.entity.ContentType WILDCARD -> WILDCARD
    org.apache.http.entity.ContentType DEFAULT_TEXT -> DEFAULT_TEXT
    org.apache.http.entity.ContentType DEFAULT_BINARY -> DEFAULT_BINARY
    java.lang.String mimeType -> mimeType
    java.nio.charset.Charset charset -> charset
    org.apache.http.NameValuePair[] params -> params
    java.lang.String getMimeType() -> getMimeType
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String toString() -> toString
    boolean valid(java.lang.String) -> valid
    org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.ContentType create(java.lang.String) -> create
    org.apache.http.entity.ContentType create(java.lang.String,java.lang.String) -> create
    org.apache.http.entity.ContentType create(org.apache.http.HeaderElement) -> create
    org.apache.http.entity.ContentType parse(java.lang.String) -> parse
    org.apache.http.entity.ContentType get(org.apache.http.HttpEntity) -> get
    org.apache.http.entity.ContentType getOrDefault(org.apache.http.HttpEntity) -> getOrDefault
    org.apache.http.entity.ContentType withCharset(java.nio.charset.Charset) -> withCharset
    org.apache.http.entity.ContentType withCharset(java.lang.String) -> withCharset
org.apache.http.entity.EntityTemplate -> org.apache.http.entity.EntityTemplate:
    org.apache.http.entity.ContentProducer contentproducer -> contentproducer
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isRepeatable() -> isRepeatable
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
org.apache.http.entity.FileEntity -> org.apache.http.entity.FileEntity:
    java.io.File file -> file
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
org.apache.http.entity.HttpEntityWrapper -> org.apache.http.entity.HttpEntityWrapper:
    org.apache.http.HttpEntity wrappedEntity -> wrappedEntity
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.entity.InputStreamEntity -> org.apache.http.entity.InputStreamEntity:
    java.io.InputStream content -> content
    long length -> length
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
org.apache.http.entity.SerializableEntity -> org.apache.http.entity.SerializableEntity:
    byte[] objSer -> objSer
    java.io.Serializable objRef -> objRef
    void createBytes(java.io.Serializable) -> createBytes
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.StringEntity -> org.apache.http.entity.StringEntity:
    byte[] content -> content
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
org.apache.http.entity.mime.AbstractMultipartForm -> org.apache.http.entity.mime.AbstractMultipartForm:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(org.apache.http.entity.mime.MinimalField,java.io.OutputStream) -> writeField
    void writeField(org.apache.http.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    java.util.List getBodyParts() -> getBodyParts
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(java.io.OutputStream,boolean) -> doWriteTo
    void formatMultipartHeader(org.apache.http.entity.mime.FormBodyPart,java.io.OutputStream) -> formatMultipartHeader
    void writeTo(java.io.OutputStream) -> writeTo
    long getTotalLength() -> getTotalLength
org.apache.http.entity.mime.FormBodyPart -> org.apache.http.entity.mime.FormBodyPart:
    java.lang.String name -> name
    org.apache.http.entity.mime.Header header -> header
    org.apache.http.entity.mime.content.ContentBody body -> body
    java.lang.String getName() -> getName
    org.apache.http.entity.mime.content.ContentBody getBody() -> getBody
    org.apache.http.entity.mime.Header getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisp(org.apache.http.entity.mime.content.ContentBody) -> generateContentDisp
    void generateContentType(org.apache.http.entity.mime.content.ContentBody) -> generateContentType
    void generateTransferEncoding(org.apache.http.entity.mime.content.ContentBody) -> generateTransferEncoding
org.apache.http.entity.mime.Header -> org.apache.http.entity.mime.Header:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(org.apache.http.entity.mime.MinimalField) -> addField
    java.util.List getFields() -> getFields
    org.apache.http.entity.mime.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(org.apache.http.entity.mime.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
org.apache.http.entity.mime.HttpBrowserCompatibleMultipart -> org.apache.http.entity.mime.HttpBrowserCompatibleMultipart:
    java.util.List parts -> parts
    java.util.List getBodyParts() -> getBodyParts
    void formatMultipartHeader(org.apache.http.entity.mime.FormBodyPart,java.io.OutputStream) -> formatMultipartHeader
org.apache.http.entity.mime.HttpMultipart -> org.apache.http.entity.mime.HttpMultipart:
    org.apache.http.entity.mime.HttpMultipartMode mode -> mode
    java.util.List parts -> parts
    org.apache.http.entity.mime.HttpMultipartMode getMode() -> getMode
    void formatMultipartHeader(org.apache.http.entity.mime.FormBodyPart,java.io.OutputStream) -> formatMultipartHeader
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(org.apache.http.entity.mime.FormBodyPart) -> addBodyPart
    long getTotalLength() -> getTotalLength
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getBoundary() -> getBoundary
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getSubType() -> getSubType
org.apache.http.entity.mime.HttpMultipart$1 -> org.apache.http.entity.mime.HttpMultipart$1:
    int[] $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode -> $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode
org.apache.http.entity.mime.HttpMultipartMode -> org.apache.http.entity.mime.HttpMultipartMode:
    org.apache.http.entity.mime.HttpMultipartMode STRICT -> STRICT
    org.apache.http.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    org.apache.http.entity.mime.HttpMultipartMode RFC6532 -> RFC6532
    org.apache.http.entity.mime.HttpMultipartMode[] $VALUES -> $VALUES
    org.apache.http.entity.mime.HttpMultipartMode[] values() -> values
    org.apache.http.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
org.apache.http.entity.mime.HttpRFC6532Multipart -> org.apache.http.entity.mime.HttpRFC6532Multipart:
    java.util.List parts -> parts
    java.util.List getBodyParts() -> getBodyParts
    void formatMultipartHeader(org.apache.http.entity.mime.FormBodyPart,java.io.OutputStream) -> formatMultipartHeader
org.apache.http.entity.mime.HttpStrictMultipart -> org.apache.http.entity.mime.HttpStrictMultipart:
    java.util.List parts -> parts
    java.util.List getBodyParts() -> getBodyParts
    void formatMultipartHeader(org.apache.http.entity.mime.FormBodyPart,java.io.OutputStream) -> formatMultipartHeader
org.apache.http.entity.mime.MIME -> org.apache.http.entity.mime.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.nio.charset.Charset UTF8_CHARSET -> UTF8_CHARSET
org.apache.http.entity.mime.MinimalField -> org.apache.http.entity.mime.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
org.apache.http.entity.mime.MultipartEntity -> org.apache.http.entity.mime.MultipartEntity:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    org.apache.http.entity.mime.MultipartEntityBuilder builder -> builder
    org.apache.http.entity.mime.MultipartFormEntity entity -> entity
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    org.apache.http.entity.mime.MultipartFormEntity getEntity() -> getEntity
    void addPart(org.apache.http.entity.mime.FormBodyPart) -> addPart
    void addPart(java.lang.String,org.apache.http.entity.mime.content.ContentBody) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.MultipartEntityBuilder -> org.apache.http.entity.mime.MultipartEntityBuilder:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    java.lang.String DEFAULT_SUBTYPE -> DEFAULT_SUBTYPE
    java.lang.String subType -> subType
    org.apache.http.entity.mime.HttpMultipartMode mode -> mode
    java.lang.String boundary -> boundary
    java.nio.charset.Charset charset -> charset
    java.util.List bodyParts -> bodyParts
    org.apache.http.entity.mime.MultipartEntityBuilder create() -> create
    org.apache.http.entity.mime.MultipartEntityBuilder setMode(org.apache.http.entity.mime.HttpMultipartMode) -> setMode
    org.apache.http.entity.mime.MultipartEntityBuilder setLaxMode() -> setLaxMode
    org.apache.http.entity.mime.MultipartEntityBuilder setStrictMode() -> setStrictMode
    org.apache.http.entity.mime.MultipartEntityBuilder setBoundary(java.lang.String) -> setBoundary
    org.apache.http.entity.mime.MultipartEntityBuilder setCharset(java.nio.charset.Charset) -> setCharset
    org.apache.http.entity.mime.MultipartEntityBuilder addPart(org.apache.http.entity.mime.FormBodyPart) -> addPart
    org.apache.http.entity.mime.MultipartEntityBuilder addPart(java.lang.String,org.apache.http.entity.mime.content.ContentBody) -> addPart
    org.apache.http.entity.mime.MultipartEntityBuilder addTextBody(java.lang.String,java.lang.String,org.apache.http.entity.ContentType) -> addTextBody
    org.apache.http.entity.mime.MultipartEntityBuilder addTextBody(java.lang.String,java.lang.String) -> addTextBody
    org.apache.http.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,byte[],org.apache.http.entity.ContentType,java.lang.String) -> addBinaryBody
    org.apache.http.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,byte[]) -> addBinaryBody
    org.apache.http.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,java.io.File,org.apache.http.entity.ContentType,java.lang.String) -> addBinaryBody
    org.apache.http.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,java.io.File) -> addBinaryBody
    org.apache.http.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,java.io.InputStream,org.apache.http.entity.ContentType,java.lang.String) -> addBinaryBody
    org.apache.http.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,java.io.InputStream) -> addBinaryBody
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    org.apache.http.entity.mime.MultipartFormEntity buildEntity() -> buildEntity
    org.apache.http.HttpEntity build() -> build
org.apache.http.entity.mime.MultipartEntityBuilder$1 -> org.apache.http.entity.mime.MultipartEntityBuilder$1:
    int[] $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode -> $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode
org.apache.http.entity.mime.MultipartFormEntity -> org.apache.http.entity.mime.MultipartFormEntity:
    org.apache.http.entity.mime.AbstractMultipartForm multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long contentLength -> contentLength
    org.apache.http.entity.mime.AbstractMultipartForm getMultipart() -> getMultipart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.AbstractContentBody -> org.apache.http.entity.mime.content.AbstractContentBody:
    org.apache.http.entity.ContentType contentType -> contentType
    org.apache.http.entity.ContentType getContentType() -> getContentType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
org.apache.http.entity.mime.content.ByteArrayBody -> org.apache.http.entity.mime.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.ContentBody -> org.apache.http.entity.mime.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.ContentDescriptor -> org.apache.http.entity.mime.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.FileBody -> org.apache.http.entity.mime.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
org.apache.http.entity.mime.content.InputStreamBody -> org.apache.http.entity.mime.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.apache.http.entity.mime.content.StringBody -> org.apache.http.entity.mime.content.StringBody:
    byte[] content -> content
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.apache.http.impl.AbstractHttpClientConnection -> org.apache.http.impl.AbstractHttpClientConnection:
    org.apache.http.impl.entity.EntitySerializer entityserializer -> entityserializer
    org.apache.http.impl.entity.EntityDeserializer entitydeserializer -> entitydeserializer
    org.apache.http.io.SessionInputBuffer inbuffer -> inbuffer
    org.apache.http.io.SessionOutputBuffer outbuffer -> outbuffer
    org.apache.http.io.EofSensor eofSensor -> eofSensor
    org.apache.http.io.HttpMessageParser responseParser -> responseParser
    org.apache.http.io.HttpMessageWriter requestWriter -> requestWriter
    org.apache.http.impl.HttpConnectionMetricsImpl metrics -> metrics
    void assertOpen() -> assertOpen
    org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    org.apache.http.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    org.apache.http.HttpResponseFactory createHttpResponseFactory() -> createHttpResponseFactory
    org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> createResponseParser
    org.apache.http.io.HttpMessageWriter createRequestWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> createRequestWriter
    org.apache.http.impl.HttpConnectionMetricsImpl createConnectionMetrics(org.apache.http.io.HttpTransportMetrics,org.apache.http.io.HttpTransportMetrics) -> createConnectionMetrics
    void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> init
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    void doFlush() -> doFlush
    void flush() -> flush
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    boolean isEof() -> isEof
    boolean isStale() -> isStale
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.impl.AbstractHttpServerConnection -> org.apache.http.impl.AbstractHttpServerConnection:
    org.apache.http.impl.entity.EntitySerializer entityserializer -> entityserializer
    org.apache.http.impl.entity.EntityDeserializer entitydeserializer -> entitydeserializer
    org.apache.http.io.SessionInputBuffer inbuffer -> inbuffer
    org.apache.http.io.SessionOutputBuffer outbuffer -> outbuffer
    org.apache.http.io.EofSensor eofSensor -> eofSensor
    org.apache.http.io.HttpMessageParser requestParser -> requestParser
    org.apache.http.io.HttpMessageWriter responseWriter -> responseWriter
    org.apache.http.impl.HttpConnectionMetricsImpl metrics -> metrics
    void assertOpen() -> assertOpen
    org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    org.apache.http.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    org.apache.http.HttpRequestFactory createHttpRequestFactory() -> createHttpRequestFactory
    org.apache.http.io.HttpMessageParser createRequestParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams) -> createRequestParser
    org.apache.http.io.HttpMessageWriter createResponseWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> createResponseWriter
    org.apache.http.impl.HttpConnectionMetricsImpl createConnectionMetrics(org.apache.http.io.HttpTransportMetrics,org.apache.http.io.HttpTransportMetrics) -> createConnectionMetrics
    void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> init
    org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void doFlush() -> doFlush
    void flush() -> flush
    void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    boolean isEof() -> isEof
    boolean isStale() -> isStale
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.impl.BHttpConnectionBase -> org.apache.http.impl.BHttpConnectionBase:
    org.apache.http.impl.io.SessionInputBufferImpl inbuffer -> inbuffer
    org.apache.http.impl.io.SessionOutputBufferImpl outbuffer -> outbuffer
    org.apache.http.impl.HttpConnectionMetricsImpl connMetrics -> connMetrics
    org.apache.http.entity.ContentLengthStrategy incomingContentStrategy -> incomingContentStrategy
    org.apache.http.entity.ContentLengthStrategy outgoingContentStrategy -> outgoingContentStrategy
    boolean open -> open
    java.net.Socket socket -> socket
    void ensureOpen() -> ensureOpen
    java.io.InputStream getSocketInputStream(java.net.Socket) -> getSocketInputStream
    java.io.OutputStream getSocketOutputStream(java.net.Socket) -> getSocketOutputStream
    void bind(java.net.Socket) -> bind
    org.apache.http.io.SessionInputBuffer getSessionInputBuffer() -> getSessionInputBuffer
    org.apache.http.io.SessionOutputBuffer getSessionOutputBuffer() -> getSessionOutputBuffer
    void doFlush() -> doFlush
    boolean isOpen() -> isOpen
    java.net.Socket getSocket() -> getSocket
    java.io.OutputStream createOutputStream(long,org.apache.http.io.SessionOutputBuffer) -> createOutputStream
    java.io.OutputStream prepareOutput(org.apache.http.HttpMessage) -> prepareOutput
    java.io.InputStream createInputStream(long,org.apache.http.io.SessionInputBuffer) -> createInputStream
    org.apache.http.HttpEntity prepareInput(org.apache.http.HttpMessage) -> prepareInput
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    void close() -> close
    int fillInputBuffer(int) -> fillInputBuffer
    boolean awaitInput(int) -> awaitInput
    boolean isStale() -> isStale
    void incrementRequestCount() -> incrementRequestCount
    void incrementResponseCount() -> incrementResponseCount
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
    java.lang.String toString() -> toString
org.apache.http.impl.ConnSupport -> org.apache.http.impl.ConnSupport:
    java.nio.charset.CharsetDecoder createDecoder(org.apache.http.config.ConnectionConfig) -> createDecoder
    java.nio.charset.CharsetEncoder createEncoder(org.apache.http.config.ConnectionConfig) -> createEncoder
org.apache.http.impl.DefaultBHttpClientConnection -> org.apache.http.impl.DefaultBHttpClientConnection:
    org.apache.http.io.HttpMessageParser responseParser -> responseParser
    org.apache.http.io.HttpMessageWriter requestWriter -> requestWriter
    void onResponseReceived(org.apache.http.HttpResponse) -> onResponseReceived
    void onRequestSubmitted(org.apache.http.HttpRequest) -> onRequestSubmitted
    void bind(java.net.Socket) -> bind
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    void flush() -> flush
org.apache.http.impl.DefaultBHttpClientConnectionFactory -> org.apache.http.impl.DefaultBHttpClientConnectionFactory:
    org.apache.http.impl.DefaultBHttpClientConnectionFactory INSTANCE -> INSTANCE
    org.apache.http.config.ConnectionConfig cconfig -> cconfig
    org.apache.http.entity.ContentLengthStrategy incomingContentStrategy -> incomingContentStrategy
    org.apache.http.entity.ContentLengthStrategy outgoingContentStrategy -> outgoingContentStrategy
    org.apache.http.io.HttpMessageWriterFactory requestWriterFactory -> requestWriterFactory
    org.apache.http.io.HttpMessageParserFactory responseParserFactory -> responseParserFactory
    org.apache.http.impl.DefaultBHttpClientConnection createConnection(java.net.Socket) -> createConnection
    org.apache.http.HttpConnection createConnection(java.net.Socket) -> createConnection
org.apache.http.impl.DefaultBHttpServerConnection -> org.apache.http.impl.DefaultBHttpServerConnection:
    org.apache.http.io.HttpMessageParser requestParser -> requestParser
    org.apache.http.io.HttpMessageWriter responseWriter -> responseWriter
    void onRequestReceived(org.apache.http.HttpRequest) -> onRequestReceived
    void onResponseSubmitted(org.apache.http.HttpResponse) -> onResponseSubmitted
    void bind(java.net.Socket) -> bind
    org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    void flush() -> flush
org.apache.http.impl.DefaultBHttpServerConnectionFactory -> org.apache.http.impl.DefaultBHttpServerConnectionFactory:
    org.apache.http.impl.DefaultBHttpServerConnectionFactory INSTANCE -> INSTANCE
    org.apache.http.config.ConnectionConfig cconfig -> cconfig
    org.apache.http.entity.ContentLengthStrategy incomingContentStrategy -> incomingContentStrategy
    org.apache.http.entity.ContentLengthStrategy outgoingContentStrategy -> outgoingContentStrategy
    org.apache.http.io.HttpMessageParserFactory requestParserFactory -> requestParserFactory
    org.apache.http.io.HttpMessageWriterFactory responseWriterFactory -> responseWriterFactory
    org.apache.http.impl.DefaultBHttpServerConnection createConnection(java.net.Socket) -> createConnection
    org.apache.http.HttpConnection createConnection(java.net.Socket) -> createConnection
org.apache.http.impl.DefaultConnectionReuseStrategy -> org.apache.http.impl.DefaultConnectionReuseStrategy:
    org.apache.http.impl.DefaultConnectionReuseStrategy INSTANCE -> INSTANCE
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
    org.apache.http.TokenIterator createTokenIterator(org.apache.http.HeaderIterator) -> createTokenIterator
    boolean canResponseHaveBody(org.apache.http.HttpResponse) -> canResponseHaveBody
org.apache.http.impl.DefaultHttpClientConnection -> org.apache.http.impl.DefaultHttpClientConnection:
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
org.apache.http.impl.DefaultHttpRequestFactory -> org.apache.http.impl.DefaultHttpRequestFactory:
    org.apache.http.impl.DefaultHttpRequestFactory INSTANCE -> INSTANCE
    java.lang.String[] RFC2616_COMMON_METHODS -> RFC2616_COMMON_METHODS
    java.lang.String[] RFC2616_ENTITY_ENC_METHODS -> RFC2616_ENTITY_ENC_METHODS
    java.lang.String[] RFC2616_SPECIAL_METHODS -> RFC2616_SPECIAL_METHODS
    boolean isOneOf(java.lang.String[],java.lang.String) -> isOneOf
    org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) -> newHttpRequest
    org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
org.apache.http.impl.DefaultHttpResponseFactory -> org.apache.http.impl.DefaultHttpResponseFactory:
    org.apache.http.impl.DefaultHttpResponseFactory INSTANCE -> INSTANCE
    org.apache.http.ReasonPhraseCatalog reasonCatalog -> reasonCatalog
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext) -> newHttpResponse
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext) -> newHttpResponse
    java.util.Locale determineLocale(org.apache.http.protocol.HttpContext) -> determineLocale
org.apache.http.impl.DefaultHttpServerConnection -> org.apache.http.impl.DefaultHttpServerConnection:
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
org.apache.http.impl.EnglishReasonPhraseCatalog -> org.apache.http.impl.EnglishReasonPhraseCatalog:
    org.apache.http.impl.EnglishReasonPhraseCatalog INSTANCE -> INSTANCE
    java.lang.String[][] REASON_PHRASES -> REASON_PHRASES
    java.lang.String getReason(int,java.util.Locale) -> getReason
    void setReason(int,java.lang.String) -> setReason
org.apache.http.impl.HttpConnectionMetricsImpl -> org.apache.http.impl.HttpConnectionMetricsImpl:
    java.lang.String REQUEST_COUNT -> REQUEST_COUNT
    java.lang.String RESPONSE_COUNT -> RESPONSE_COUNT
    java.lang.String SENT_BYTES_COUNT -> SENT_BYTES_COUNT
    java.lang.String RECEIVED_BYTES_COUNT -> RECEIVED_BYTES_COUNT
    org.apache.http.io.HttpTransportMetrics inTransportMetric -> inTransportMetric
    org.apache.http.io.HttpTransportMetrics outTransportMetric -> outTransportMetric
    long requestCount -> requestCount
    long responseCount -> responseCount
    java.util.Map metricsCache -> metricsCache
    long getReceivedBytesCount() -> getReceivedBytesCount
    long getSentBytesCount() -> getSentBytesCount
    long getRequestCount() -> getRequestCount
    void incrementRequestCount() -> incrementRequestCount
    long getResponseCount() -> getResponseCount
    void incrementResponseCount() -> incrementResponseCount
    java.lang.Object getMetric(java.lang.String) -> getMetric
    void setMetric(java.lang.String,java.lang.Object) -> setMetric
    void reset() -> reset
org.apache.http.impl.NoConnectionReuseStrategy -> org.apache.http.impl.NoConnectionReuseStrategy:
    org.apache.http.impl.NoConnectionReuseStrategy INSTANCE -> INSTANCE
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
org.apache.http.impl.SocketHttpClientConnection -> org.apache.http.impl.SocketHttpClientConnection:
    boolean open -> open
    java.net.Socket socket -> socket
    void assertNotOpen() -> assertNotOpen
    void assertOpen() -> assertOpen
    org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    boolean isOpen() -> isOpen
    java.net.Socket getSocket() -> getSocket
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    void close() -> close
    void formatAddress(java.lang.StringBuilder,java.net.SocketAddress) -> formatAddress
    java.lang.String toString() -> toString
org.apache.http.impl.SocketHttpServerConnection -> org.apache.http.impl.SocketHttpServerConnection:
    boolean open -> open
    java.net.Socket socket -> socket
    void assertNotOpen() -> assertNotOpen
    void assertOpen() -> assertOpen
    org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    java.net.Socket getSocket() -> getSocket
    boolean isOpen() -> isOpen
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    void close() -> close
    void formatAddress(java.lang.StringBuilder,java.net.SocketAddress) -> formatAddress
    java.lang.String toString() -> toString
org.apache.http.impl.entity.DisallowIdentityContentLengthStrategy -> org.apache.http.impl.entity.DisallowIdentityContentLengthStrategy:
    org.apache.http.impl.entity.DisallowIdentityContentLengthStrategy INSTANCE -> INSTANCE
    org.apache.http.entity.ContentLengthStrategy contentLengthStrategy -> contentLengthStrategy
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.impl.entity.EntityDeserializer -> org.apache.http.impl.entity.EntityDeserializer:
    org.apache.http.entity.ContentLengthStrategy lenStrategy -> lenStrategy
    org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage) -> doDeserialize
    org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage) -> deserialize
org.apache.http.impl.entity.EntitySerializer -> org.apache.http.impl.entity.EntitySerializer:
    org.apache.http.entity.ContentLengthStrategy lenStrategy -> lenStrategy
    java.io.OutputStream doSerialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage) -> doSerialize
    void serialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage,org.apache.http.HttpEntity) -> serialize
org.apache.http.impl.entity.LaxContentLengthStrategy -> org.apache.http.impl.entity.LaxContentLengthStrategy:
    org.apache.http.impl.entity.LaxContentLengthStrategy INSTANCE -> INSTANCE
    int implicitLen -> implicitLen
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.impl.entity.StrictContentLengthStrategy -> org.apache.http.impl.entity.StrictContentLengthStrategy:
    org.apache.http.impl.entity.StrictContentLengthStrategy INSTANCE -> INSTANCE
    int implicitLen -> implicitLen
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.impl.io.AbstractMessageParser -> org.apache.http.impl.io.AbstractMessageParser:
    int HEAD_LINE -> HEAD_LINE
    int HEADERS -> HEADERS
    org.apache.http.io.SessionInputBuffer sessionBuffer -> sessionBuffer
    org.apache.http.config.MessageConstraints messageConstraints -> messageConstraints
    java.util.List headerLines -> headerLines
    org.apache.http.message.LineParser lineParser -> lineParser
    int state -> state
    org.apache.http.HttpMessage message -> message
    org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser) -> parseHeaders
    org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser,java.util.List) -> parseHeaders
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    org.apache.http.HttpMessage parse() -> parse
org.apache.http.impl.io.AbstractMessageWriter -> org.apache.http.impl.io.AbstractMessageWriter:
    org.apache.http.io.SessionOutputBuffer sessionBuffer -> sessionBuffer
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.message.LineFormatter lineFormatter -> lineFormatter
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
    void write(org.apache.http.HttpMessage) -> write
org.apache.http.impl.io.AbstractSessionInputBuffer -> org.apache.http.impl.io.AbstractSessionInputBuffer:
    java.io.InputStream instream -> instream
    byte[] buffer -> buffer
    org.apache.http.util.ByteArrayBuffer linebuffer -> linebuffer
    java.nio.charset.Charset charset -> charset
    boolean ascii -> ascii
    int maxLineLen -> maxLineLen
    int minChunkLimit -> minChunkLimit
    org.apache.http.impl.io.HttpTransportMetricsImpl metrics -> metrics
    java.nio.charset.CodingErrorAction onMalformedCharAction -> onMalformedCharAction
    java.nio.charset.CodingErrorAction onUnmappableCharAction -> onUnmappableCharAction
    int bufferpos -> bufferpos
    int bufferlen -> bufferlen
    java.nio.charset.CharsetDecoder decoder -> decoder
    java.nio.CharBuffer cbuf -> cbuf
    void init(java.io.InputStream,int,org.apache.http.params.HttpParams) -> init
    org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics() -> createTransportMetrics
    int capacity() -> capacity
    int length() -> length
    int available() -> available
    int fillBuffer() -> fillBuffer
    boolean hasBufferedData() -> hasBufferedData
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int locateLF() -> locateLF
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    int lineFromLineBuffer(org.apache.http.util.CharArrayBuffer) -> lineFromLineBuffer
    int lineFromReadBuffer(org.apache.http.util.CharArrayBuffer,int) -> lineFromReadBuffer
    int appendDecoded(org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer) -> appendDecoded
    int handleDecodingResult(java.nio.charset.CoderResult,org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer) -> handleDecodingResult
    java.lang.String readLine() -> readLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.AbstractSessionOutputBuffer -> org.apache.http.impl.io.AbstractSessionOutputBuffer:
    byte[] CRLF -> CRLF
    java.io.OutputStream outstream -> outstream
    org.apache.http.util.ByteArrayBuffer buffer -> buffer
    java.nio.charset.Charset charset -> charset
    boolean ascii -> ascii
    int minChunkLimit -> minChunkLimit
    org.apache.http.impl.io.HttpTransportMetricsImpl metrics -> metrics
    java.nio.charset.CodingErrorAction onMalformedCharAction -> onMalformedCharAction
    java.nio.charset.CodingErrorAction onUnmappableCharAction -> onUnmappableCharAction
    java.nio.charset.CharsetEncoder encoder -> encoder
    java.nio.ByteBuffer bbuf -> bbuf
    void init(java.io.OutputStream,int,org.apache.http.params.HttpParams) -> init
    org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics() -> createTransportMetrics
    int capacity() -> capacity
    int length() -> length
    int available() -> available
    void flushBuffer() -> flushBuffer
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void writeEncoded(java.nio.CharBuffer) -> writeEncoded
    void handleEncodingResult(java.nio.charset.CoderResult) -> handleEncodingResult
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.ChunkedInputStream -> org.apache.http.impl.io.ChunkedInputStream:
    int CHUNK_LEN -> CHUNK_LEN
    int CHUNK_DATA -> CHUNK_DATA
    int CHUNK_CRLF -> CHUNK_CRLF
    int BUFFER_SIZE -> BUFFER_SIZE
    org.apache.http.io.SessionInputBuffer in -> in
    org.apache.http.util.CharArrayBuffer buffer -> buffer
    int state -> state
    int chunkSize -> chunkSize
    int pos -> pos
    boolean eof -> eof
    boolean closed -> closed
    org.apache.http.Header[] footers -> footers
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    void nextChunk() -> nextChunk
    int getChunkSize() -> getChunkSize
    void parseTrailerHeaders() -> parseTrailerHeaders
    void close() -> close
    org.apache.http.Header[] getFooters() -> getFooters
org.apache.http.impl.io.ChunkedOutputStream -> org.apache.http.impl.io.ChunkedOutputStream:
    org.apache.http.io.SessionOutputBuffer out -> out
    byte[] cache -> cache
    int cachePosition -> cachePosition
    boolean wroteLastChunk -> wroteLastChunk
    boolean closed -> closed
    void flushCache() -> flushCache
    void flushCacheWithAppend(byte[],int,int) -> flushCacheWithAppend
    void writeClosingChunk() -> writeClosingChunk
    void finish() -> finish
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
org.apache.http.impl.io.ContentLengthInputStream -> org.apache.http.impl.io.ContentLengthInputStream:
    int BUFFER_SIZE -> BUFFER_SIZE
    long contentLength -> contentLength
    long pos -> pos
    boolean closed -> closed
    org.apache.http.io.SessionInputBuffer in -> in
    void close() -> close
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    long skip(long) -> skip
org.apache.http.impl.io.ContentLengthOutputStream -> org.apache.http.impl.io.ContentLengthOutputStream:
    org.apache.http.io.SessionOutputBuffer out -> out
    long contentLength -> contentLength
    long total -> total
    boolean closed -> closed
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
org.apache.http.impl.io.DefaultHttpRequestParser -> org.apache.http.impl.io.DefaultHttpRequestParser:
    org.apache.http.HttpRequestFactory requestFactory -> requestFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpRequest parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.DefaultHttpRequestParserFactory -> org.apache.http.impl.io.DefaultHttpRequestParserFactory:
    org.apache.http.impl.io.DefaultHttpRequestParserFactory INSTANCE -> INSTANCE
    org.apache.http.message.LineParser lineParser -> lineParser
    org.apache.http.HttpRequestFactory requestFactory -> requestFactory
    org.apache.http.io.HttpMessageParser create(org.apache.http.io.SessionInputBuffer,org.apache.http.config.MessageConstraints) -> create
org.apache.http.impl.io.DefaultHttpRequestWriter -> org.apache.http.impl.io.DefaultHttpRequestWriter:
    void writeHeadLine(org.apache.http.HttpRequest) -> writeHeadLine
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.DefaultHttpRequestWriterFactory -> org.apache.http.impl.io.DefaultHttpRequestWriterFactory:
    org.apache.http.impl.io.DefaultHttpRequestWriterFactory INSTANCE -> INSTANCE
    org.apache.http.message.LineFormatter lineFormatter -> lineFormatter
    org.apache.http.io.HttpMessageWriter create(org.apache.http.io.SessionOutputBuffer) -> create
org.apache.http.impl.io.DefaultHttpResponseParser -> org.apache.http.impl.io.DefaultHttpResponseParser:
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpResponse parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.DefaultHttpResponseParserFactory -> org.apache.http.impl.io.DefaultHttpResponseParserFactory:
    org.apache.http.impl.io.DefaultHttpResponseParserFactory INSTANCE -> INSTANCE
    org.apache.http.message.LineParser lineParser -> lineParser
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.io.HttpMessageParser create(org.apache.http.io.SessionInputBuffer,org.apache.http.config.MessageConstraints) -> create
org.apache.http.impl.io.DefaultHttpResponseWriter -> org.apache.http.impl.io.DefaultHttpResponseWriter:
    void writeHeadLine(org.apache.http.HttpResponse) -> writeHeadLine
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.DefaultHttpResponseWriterFactory -> org.apache.http.impl.io.DefaultHttpResponseWriterFactory:
    org.apache.http.impl.io.DefaultHttpResponseWriterFactory INSTANCE -> INSTANCE
    org.apache.http.message.LineFormatter lineFormatter -> lineFormatter
    org.apache.http.io.HttpMessageWriter create(org.apache.http.io.SessionOutputBuffer) -> create
org.apache.http.impl.io.HttpRequestParser -> org.apache.http.impl.io.HttpRequestParser:
    org.apache.http.HttpRequestFactory requestFactory -> requestFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.HttpRequestWriter -> org.apache.http.impl.io.HttpRequestWriter:
    void writeHeadLine(org.apache.http.HttpRequest) -> writeHeadLine
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.HttpResponseParser -> org.apache.http.impl.io.HttpResponseParser:
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.HttpResponseWriter -> org.apache.http.impl.io.HttpResponseWriter:
    void writeHeadLine(org.apache.http.HttpResponse) -> writeHeadLine
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.HttpTransportMetricsImpl -> org.apache.http.impl.io.HttpTransportMetricsImpl:
    long bytesTransferred -> bytesTransferred
    long getBytesTransferred() -> getBytesTransferred
    void setBytesTransferred(long) -> setBytesTransferred
    void incrementBytesTransferred(long) -> incrementBytesTransferred
    void reset() -> reset
org.apache.http.impl.io.IdentityInputStream -> org.apache.http.impl.io.IdentityInputStream:
    org.apache.http.io.SessionInputBuffer in -> in
    boolean closed -> closed
    int available() -> available
    void close() -> close
    int read() -> read
    int read(byte[],int,int) -> read
org.apache.http.impl.io.IdentityOutputStream -> org.apache.http.impl.io.IdentityOutputStream:
    org.apache.http.io.SessionOutputBuffer out -> out
    boolean closed -> closed
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
org.apache.http.impl.io.SessionInputBufferImpl -> org.apache.http.impl.io.SessionInputBufferImpl:
    org.apache.http.impl.io.HttpTransportMetricsImpl metrics -> metrics
    byte[] buffer -> buffer
    org.apache.http.util.ByteArrayBuffer linebuffer -> linebuffer
    int minChunkLimit -> minChunkLimit
    org.apache.http.config.MessageConstraints constraints -> constraints
    java.nio.charset.CharsetDecoder decoder -> decoder
    java.io.InputStream instream -> instream
    int bufferpos -> bufferpos
    int bufferlen -> bufferlen
    java.nio.CharBuffer cbuf -> cbuf
    void bind(java.io.InputStream) -> bind
    boolean isBound() -> isBound
    int capacity() -> capacity
    int length() -> length
    int available() -> available
    int streamRead(byte[],int,int) -> streamRead
    int fillBuffer() -> fillBuffer
    boolean hasBufferedData() -> hasBufferedData
    void clear() -> clear
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int locateLF() -> locateLF
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    int lineFromLineBuffer(org.apache.http.util.CharArrayBuffer) -> lineFromLineBuffer
    int lineFromReadBuffer(org.apache.http.util.CharArrayBuffer,int) -> lineFromReadBuffer
    int appendDecoded(org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer) -> appendDecoded
    int handleDecodingResult(java.nio.charset.CoderResult,org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer) -> handleDecodingResult
    java.lang.String readLine() -> readLine
    boolean isDataAvailable(int) -> isDataAvailable
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.SessionOutputBufferImpl -> org.apache.http.impl.io.SessionOutputBufferImpl:
    byte[] CRLF -> CRLF
    org.apache.http.impl.io.HttpTransportMetricsImpl metrics -> metrics
    org.apache.http.util.ByteArrayBuffer buffer -> buffer
    int fragementSizeHint -> fragementSizeHint
    java.nio.charset.CharsetEncoder encoder -> encoder
    java.io.OutputStream outstream -> outstream
    java.nio.ByteBuffer bbuf -> bbuf
    void bind(java.io.OutputStream) -> bind
    boolean isBound() -> isBound
    int capacity() -> capacity
    int length() -> length
    int available() -> available
    void streamWrite(byte[],int,int) -> streamWrite
    void flushStream() -> flushStream
    void flushBuffer() -> flushBuffer
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void writeEncoded(java.nio.CharBuffer) -> writeEncoded
    void handleEncodingResult(java.nio.charset.CoderResult) -> handleEncodingResult
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.SocketInputBuffer -> org.apache.http.impl.io.SocketInputBuffer:
    java.net.Socket socket -> socket
    boolean eof -> eof
    int fillBuffer() -> fillBuffer
    boolean isDataAvailable(int) -> isDataAvailable
    boolean isEof() -> isEof
org.apache.http.impl.io.SocketOutputBuffer -> org.apache.http.impl.io.SocketOutputBuffer:
org.apache.http.impl.pool.BasicConnFactory -> org.apache.http.impl.pool.BasicConnFactory:
    javax.net.SocketFactory plainfactory -> plainfactory
    javax.net.ssl.SSLSocketFactory sslfactory -> sslfactory
    int connectTimeout -> connectTimeout
    org.apache.http.config.SocketConfig sconfig -> sconfig
    org.apache.http.HttpConnectionFactory connFactory -> connFactory
    org.apache.http.HttpClientConnection create(java.net.Socket,org.apache.http.params.HttpParams) -> create
    org.apache.http.HttpClientConnection create(org.apache.http.HttpHost) -> create
    java.lang.Object create(java.lang.Object) -> create
org.apache.http.impl.pool.BasicConnPool -> org.apache.http.impl.pool.BasicConnPool:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    org.apache.http.impl.pool.BasicPoolEntry createEntry(org.apache.http.HttpHost,org.apache.http.HttpClientConnection) -> createEntry
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
org.apache.http.impl.pool.BasicPoolEntry -> org.apache.http.impl.pool.BasicPoolEntry:
    void close() -> close
    boolean isClosed() -> isClosed
org.apache.http.io.BufferInfo -> org.apache.http.io.BufferInfo:
    int length() -> length
    int capacity() -> capacity
    int available() -> available
org.apache.http.io.EofSensor -> org.apache.http.io.EofSensor:
    boolean isEof() -> isEof
org.apache.http.io.HttpMessageParser -> org.apache.http.io.HttpMessageParser:
    org.apache.http.HttpMessage parse() -> parse
org.apache.http.io.HttpMessageParserFactory -> org.apache.http.io.HttpMessageParserFactory:
    org.apache.http.io.HttpMessageParser create(org.apache.http.io.SessionInputBuffer,org.apache.http.config.MessageConstraints) -> create
org.apache.http.io.HttpMessageWriter -> org.apache.http.io.HttpMessageWriter:
    void write(org.apache.http.HttpMessage) -> write
org.apache.http.io.HttpMessageWriterFactory -> org.apache.http.io.HttpMessageWriterFactory:
    org.apache.http.io.HttpMessageWriter create(org.apache.http.io.SessionOutputBuffer) -> create
org.apache.http.io.HttpTransportMetrics -> org.apache.http.io.HttpTransportMetrics:
    long getBytesTransferred() -> getBytesTransferred
    void reset() -> reset
org.apache.http.io.SessionInputBuffer -> org.apache.http.io.SessionInputBuffer:
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int read() -> read
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    java.lang.String readLine() -> readLine
    boolean isDataAvailable(int) -> isDataAvailable
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.io.SessionOutputBuffer -> org.apache.http.io.SessionOutputBuffer:
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void flush() -> flush
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.message.AbstractHttpMessage -> org.apache.http.message.AbstractHttpMessage:
    org.apache.http.message.HeaderGroup headergroup -> headergroup
    org.apache.http.params.HttpParams params -> params
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    void removeHeader(org.apache.http.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    org.apache.http.HeaderIterator headerIterator() -> headerIterator
    org.apache.http.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
org.apache.http.message.BasicHeader -> org.apache.http.message.BasicHeader:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    org.apache.http.HeaderElement[] getElements() -> getElements
    java.lang.Object clone() -> clone
org.apache.http.message.BasicHeaderElement -> org.apache.http.message.BasicHeaderElement:
    java.lang.String name -> name
    java.lang.String value -> value
    org.apache.http.NameValuePair[] parameters -> parameters
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.NameValuePair[] getParameters() -> getParameters
    int getParameterCount() -> getParameterCount
    org.apache.http.NameValuePair getParameter(int) -> getParameter
    org.apache.http.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.BasicHeaderElementIterator -> org.apache.http.message.BasicHeaderElementIterator:
    org.apache.http.HeaderIterator headerIt -> headerIt
    org.apache.http.message.HeaderValueParser parser -> parser
    org.apache.http.HeaderElement currentElement -> currentElement
    org.apache.http.util.CharArrayBuffer buffer -> buffer
    org.apache.http.message.ParserCursor cursor -> cursor
    void bufferHeaderValue() -> bufferHeaderValue
    void parseNextElement() -> parseNextElement
    boolean hasNext() -> hasNext
    org.apache.http.HeaderElement nextElement() -> nextElement
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.http.message.BasicHeaderIterator -> org.apache.http.message.BasicHeaderIterator:
    org.apache.http.Header[] allHeaders -> allHeaders
    int currentIndex -> currentIndex
    java.lang.String headerName -> headerName
    int findNext(int) -> findNext
    boolean filterHeader(int) -> filterHeader
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.http.message.BasicHeaderValueFormatter -> org.apache.http.message.BasicHeaderValueFormatter:
    org.apache.http.message.BasicHeaderValueFormatter DEFAULT -> DEFAULT
    org.apache.http.message.BasicHeaderValueFormatter INSTANCE -> INSTANCE
    java.lang.String SEPARATORS -> SEPARATORS
    java.lang.String UNSAFE_CHARS -> UNSAFE_CHARS
    java.lang.String formatElements(org.apache.http.HeaderElement[],boolean,org.apache.http.message.HeaderValueFormatter) -> formatElements
    org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement[],boolean) -> formatElements
    int estimateElementsLen(org.apache.http.HeaderElement[]) -> estimateElementsLen
    java.lang.String formatHeaderElement(org.apache.http.HeaderElement,boolean,org.apache.http.message.HeaderValueFormatter) -> formatHeaderElement
    org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean) -> formatHeaderElement
    int estimateHeaderElementLen(org.apache.http.HeaderElement) -> estimateHeaderElementLen
    java.lang.String formatParameters(org.apache.http.NameValuePair[],boolean,org.apache.http.message.HeaderValueFormatter) -> formatParameters
    org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair[],boolean) -> formatParameters
    int estimateParametersLen(org.apache.http.NameValuePair[]) -> estimateParametersLen
    java.lang.String formatNameValuePair(org.apache.http.NameValuePair,boolean,org.apache.http.message.HeaderValueFormatter) -> formatNameValuePair
    org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean) -> formatNameValuePair
    int estimateNameValuePairLen(org.apache.http.NameValuePair) -> estimateNameValuePairLen
    void doFormatValue(org.apache.http.util.CharArrayBuffer,java.lang.String,boolean) -> doFormatValue
    boolean isSeparator(char) -> isSeparator
    boolean isUnsafe(char) -> isUnsafe
org.apache.http.message.BasicHeaderValueParser -> org.apache.http.message.BasicHeaderValueParser:
    org.apache.http.message.BasicHeaderValueParser DEFAULT -> DEFAULT
    org.apache.http.message.BasicHeaderValueParser INSTANCE -> INSTANCE
    char PARAM_DELIMITER -> PARAM_DELIMITER
    char ELEM_DELIMITER -> ELEM_DELIMITER
    char[] ALL_DELIMITERS -> ALL_DELIMITERS
    org.apache.http.HeaderElement[] parseElements(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseElements
    org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseElements
    org.apache.http.HeaderElement parseHeaderElement(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseHeaderElement
    org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeaderElement
    org.apache.http.HeaderElement createHeaderElement(java.lang.String,java.lang.String,org.apache.http.NameValuePair[]) -> createHeaderElement
    org.apache.http.NameValuePair[] parseParameters(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseParameters
    org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseParameters
    org.apache.http.NameValuePair parseNameValuePair(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseNameValuePair
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
    boolean isOneOf(char,char[]) -> isOneOf
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[]) -> parseNameValuePair
    org.apache.http.NameValuePair createNameValuePair(java.lang.String,java.lang.String) -> createNameValuePair
org.apache.http.message.BasicHttpEntityEnclosingRequest -> org.apache.http.message.BasicHttpEntityEnclosingRequest:
    org.apache.http.HttpEntity entity -> entity
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
org.apache.http.message.BasicHttpRequest -> org.apache.http.message.BasicHttpRequest:
    java.lang.String method -> method
    java.lang.String uri -> uri
    org.apache.http.RequestLine requestline -> requestline
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
    java.lang.String toString() -> toString
org.apache.http.message.BasicHttpResponse -> org.apache.http.message.BasicHttpResponse:
    org.apache.http.StatusLine statusline -> statusline
    org.apache.http.ProtocolVersion ver -> ver
    int code -> code
    java.lang.String reasonPhrase -> reasonPhrase
    org.apache.http.HttpEntity entity -> entity
    org.apache.http.ReasonPhraseCatalog reasonCatalog -> reasonCatalog
    java.util.Locale locale -> locale
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    org.apache.http.StatusLine getStatusLine() -> getStatusLine
    org.apache.http.HttpEntity getEntity() -> getEntity
    java.util.Locale getLocale() -> getLocale
    void setStatusLine(org.apache.http.StatusLine) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    void setLocale(java.util.Locale) -> setLocale
    java.lang.String getReason(int) -> getReason
    java.lang.String toString() -> toString
org.apache.http.message.BasicLineFormatter -> org.apache.http.message.BasicLineFormatter:
    org.apache.http.message.BasicLineFormatter DEFAULT -> DEFAULT
    org.apache.http.message.BasicLineFormatter INSTANCE -> INSTANCE
    org.apache.http.util.CharArrayBuffer initBuffer(org.apache.http.util.CharArrayBuffer) -> initBuffer
    java.lang.String formatProtocolVersion(org.apache.http.ProtocolVersion,org.apache.http.message.LineFormatter) -> formatProtocolVersion
    org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion) -> appendProtocolVersion
    int estimateProtocolVersionLen(org.apache.http.ProtocolVersion) -> estimateProtocolVersionLen
    java.lang.String formatRequestLine(org.apache.http.RequestLine,org.apache.http.message.LineFormatter) -> formatRequestLine
    org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> formatRequestLine
    void doFormatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> doFormatRequestLine
    java.lang.String formatStatusLine(org.apache.http.StatusLine,org.apache.http.message.LineFormatter) -> formatStatusLine
    org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> formatStatusLine
    void doFormatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> doFormatStatusLine
    java.lang.String formatHeader(org.apache.http.Header,org.apache.http.message.LineFormatter) -> formatHeader
    org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> formatHeader
    void doFormatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> doFormatHeader
org.apache.http.message.BasicLineParser -> org.apache.http.message.BasicLineParser:
    org.apache.http.message.BasicLineParser DEFAULT -> DEFAULT
    org.apache.http.message.BasicLineParser INSTANCE -> INSTANCE
    org.apache.http.ProtocolVersion protocol -> protocol
    org.apache.http.ProtocolVersion parseProtocolVersion(java.lang.String,org.apache.http.message.LineParser) -> parseProtocolVersion
    org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseProtocolVersion
    org.apache.http.ProtocolVersion createProtocolVersion(int,int) -> createProtocolVersion
    boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> hasProtocolVersion
    org.apache.http.RequestLine parseRequestLine(java.lang.String,org.apache.http.message.LineParser) -> parseRequestLine
    org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseRequestLine
    org.apache.http.RequestLine createRequestLine(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion) -> createRequestLine
    org.apache.http.StatusLine parseStatusLine(java.lang.String,org.apache.http.message.LineParser) -> parseStatusLine
    org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseStatusLine
    org.apache.http.StatusLine createStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> createStatusLine
    org.apache.http.Header parseHeader(java.lang.String,org.apache.http.message.LineParser) -> parseHeader
    org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer) -> parseHeader
    void skipWhitespace(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> skipWhitespace
org.apache.http.message.BasicListHeaderIterator -> org.apache.http.message.BasicListHeaderIterator:
    java.util.List allHeaders -> allHeaders
    int currentIndex -> currentIndex
    int lastIndex -> lastIndex
    java.lang.String headerName -> headerName
    int findNext(int) -> findNext
    boolean filterHeader(int) -> filterHeader
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.http.message.BasicNameValuePair -> org.apache.http.message.BasicNameValuePair:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object clone() -> clone
org.apache.http.message.BasicRequestLine -> org.apache.http.message.BasicRequestLine:
    long serialVersionUID -> serialVersionUID
    org.apache.http.ProtocolVersion protoversion -> protoversion
    java.lang.String method -> method
    java.lang.String uri -> uri
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getUri() -> getUri
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.BasicStatusLine -> org.apache.http.message.BasicStatusLine:
    long serialVersionUID -> serialVersionUID
    org.apache.http.ProtocolVersion protoVersion -> protoVersion
    int statusCode -> statusCode
    java.lang.String reasonPhrase -> reasonPhrase
    int getStatusCode() -> getStatusCode
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.BasicTokenIterator -> org.apache.http.message.BasicTokenIterator:
    java.lang.String HTTP_SEPARATORS -> HTTP_SEPARATORS
    org.apache.http.HeaderIterator headerIt -> headerIt
    java.lang.String currentHeader -> currentHeader
    java.lang.String currentToken -> currentToken
    int searchPos -> searchPos
    boolean hasNext() -> hasNext
    java.lang.String nextToken() -> nextToken
    java.lang.Object next() -> next
    void remove() -> remove
    int findNext(int) -> findNext
    java.lang.String createToken(java.lang.String,int,int) -> createToken
    int findTokenStart(int) -> findTokenStart
    int findTokenSeparator(int) -> findTokenSeparator
    int findTokenEnd(int) -> findTokenEnd
    boolean isTokenSeparator(char) -> isTokenSeparator
    boolean isWhitespace(char) -> isWhitespace
    boolean isTokenChar(char) -> isTokenChar
    boolean isHttpSeparator(char) -> isHttpSeparator
org.apache.http.message.BufferedHeader -> org.apache.http.message.BufferedHeader:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    org.apache.http.util.CharArrayBuffer buffer -> buffer
    int valuePos -> valuePos
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.HeaderElement[] getElements() -> getElements
    int getValuePos() -> getValuePos
    org.apache.http.util.CharArrayBuffer getBuffer() -> getBuffer
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.HeaderGroup -> org.apache.http.message.HeaderGroup:
    long serialVersionUID -> serialVersionUID
    java.util.List headers -> headers
    void clear() -> clear
    void addHeader(org.apache.http.Header) -> addHeader
    void removeHeader(org.apache.http.Header) -> removeHeader
    void updateHeader(org.apache.http.Header) -> updateHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    org.apache.http.Header getCondensedHeader(java.lang.String) -> getCondensedHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.HeaderIterator iterator() -> iterator
    org.apache.http.HeaderIterator iterator(java.lang.String) -> iterator
    org.apache.http.message.HeaderGroup copy() -> copy
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
org.apache.http.message.HeaderValueFormatter -> org.apache.http.message.HeaderValueFormatter:
    org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement[],boolean) -> formatElements
    org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean) -> formatHeaderElement
    org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair[],boolean) -> formatParameters
    org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean) -> formatNameValuePair
org.apache.http.message.HeaderValueParser -> org.apache.http.message.HeaderValueParser:
    org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseElements
    org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeaderElement
    org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseParameters
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
org.apache.http.message.LineFormatter -> org.apache.http.message.LineFormatter:
    org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion) -> appendProtocolVersion
    org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> formatRequestLine
    org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> formatStatusLine
    org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> formatHeader
org.apache.http.message.LineParser -> org.apache.http.message.LineParser:
    org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseProtocolVersion
    boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> hasProtocolVersion
    org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseRequestLine
    org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseStatusLine
    org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer) -> parseHeader
org.apache.http.message.ParserCursor -> org.apache.http.message.ParserCursor:
    int lowerBound -> lowerBound
    int upperBound -> upperBound
    int pos -> pos
    int getLowerBound() -> getLowerBound
    int getUpperBound() -> getUpperBound
    int getPos() -> getPos
    void updatePos(int) -> updatePos
    boolean atEnd() -> atEnd
    java.lang.String toString() -> toString
org.apache.http.params.AbstractHttpParams -> org.apache.http.params.AbstractHttpParams:
    long getLongParameter(java.lang.String,long) -> getLongParameter
    org.apache.http.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    org.apache.http.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
    java.util.Set getNames() -> getNames
org.apache.http.params.BasicHttpParams -> org.apache.http.params.BasicHttpParams:
    long serialVersionUID -> serialVersionUID
    java.util.Map parameters -> parameters
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    void setParameters(java.lang.String[],java.lang.Object) -> setParameters
    boolean isParameterSet(java.lang.String) -> isParameterSet
    boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    void clear() -> clear
    org.apache.http.params.HttpParams copy() -> copy
    java.lang.Object clone() -> clone
    void copyParams(org.apache.http.params.HttpParams) -> copyParams
    java.util.Set getNames() -> getNames
org.apache.http.params.CoreConnectionPNames -> org.apache.http.params.CoreConnectionPNames:
    java.lang.String SO_TIMEOUT -> SO_TIMEOUT
    java.lang.String TCP_NODELAY -> TCP_NODELAY
    java.lang.String SOCKET_BUFFER_SIZE -> SOCKET_BUFFER_SIZE
    java.lang.String SO_LINGER -> SO_LINGER
    java.lang.String SO_REUSEADDR -> SO_REUSEADDR
    java.lang.String CONNECTION_TIMEOUT -> CONNECTION_TIMEOUT
    java.lang.String STALE_CONNECTION_CHECK -> STALE_CONNECTION_CHECK
    java.lang.String MAX_LINE_LENGTH -> MAX_LINE_LENGTH
    java.lang.String MAX_HEADER_COUNT -> MAX_HEADER_COUNT
    java.lang.String MIN_CHUNK_LIMIT -> MIN_CHUNK_LIMIT
    java.lang.String SO_KEEPALIVE -> SO_KEEPALIVE
org.apache.http.params.CoreProtocolPNames -> org.apache.http.params.CoreProtocolPNames:
    java.lang.String PROTOCOL_VERSION -> PROTOCOL_VERSION
    java.lang.String HTTP_ELEMENT_CHARSET -> HTTP_ELEMENT_CHARSET
    java.lang.String HTTP_CONTENT_CHARSET -> HTTP_CONTENT_CHARSET
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String ORIGIN_SERVER -> ORIGIN_SERVER
    java.lang.String STRICT_TRANSFER_ENCODING -> STRICT_TRANSFER_ENCODING
    java.lang.String USE_EXPECT_CONTINUE -> USE_EXPECT_CONTINUE
    java.lang.String WAIT_FOR_CONTINUE -> WAIT_FOR_CONTINUE
    java.lang.String HTTP_MALFORMED_INPUT_ACTION -> HTTP_MALFORMED_INPUT_ACTION
    java.lang.String HTTP_UNMAPPABLE_INPUT_ACTION -> HTTP_UNMAPPABLE_INPUT_ACTION
org.apache.http.params.DefaultedHttpParams -> org.apache.http.params.DefaultedHttpParams:
    org.apache.http.params.HttpParams local -> local
    org.apache.http.params.HttpParams defaults -> defaults
    org.apache.http.params.HttpParams copy() -> copy
    java.lang.Object getParameter(java.lang.String) -> getParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    org.apache.http.params.HttpParams getDefaults() -> getDefaults
    java.util.Set getNames() -> getNames
    java.util.Set getDefaultNames() -> getDefaultNames
    java.util.Set getLocalNames() -> getLocalNames
    java.util.Set getNames(org.apache.http.params.HttpParams) -> getNames
org.apache.http.params.HttpAbstractParamBean -> org.apache.http.params.HttpAbstractParamBean:
    org.apache.http.params.HttpParams params -> params
org.apache.http.params.HttpConnectionParamBean -> org.apache.http.params.HttpConnectionParamBean:
    void setSoTimeout(int) -> setSoTimeout
    void setTcpNoDelay(boolean) -> setTcpNoDelay
    void setSocketBufferSize(int) -> setSocketBufferSize
    void setLinger(int) -> setLinger
    void setConnectionTimeout(int) -> setConnectionTimeout
    void setStaleCheckingEnabled(boolean) -> setStaleCheckingEnabled
org.apache.http.params.HttpConnectionParams -> org.apache.http.params.HttpConnectionParams:
    int getSoTimeout(org.apache.http.params.HttpParams) -> getSoTimeout
    void setSoTimeout(org.apache.http.params.HttpParams,int) -> setSoTimeout
    boolean getSoReuseaddr(org.apache.http.params.HttpParams) -> getSoReuseaddr
    void setSoReuseaddr(org.apache.http.params.HttpParams,boolean) -> setSoReuseaddr
    boolean getTcpNoDelay(org.apache.http.params.HttpParams) -> getTcpNoDelay
    void setTcpNoDelay(org.apache.http.params.HttpParams,boolean) -> setTcpNoDelay
    int getSocketBufferSize(org.apache.http.params.HttpParams) -> getSocketBufferSize
    void setSocketBufferSize(org.apache.http.params.HttpParams,int) -> setSocketBufferSize
    int getLinger(org.apache.http.params.HttpParams) -> getLinger
    void setLinger(org.apache.http.params.HttpParams,int) -> setLinger
    int getConnectionTimeout(org.apache.http.params.HttpParams) -> getConnectionTimeout
    void setConnectionTimeout(org.apache.http.params.HttpParams,int) -> setConnectionTimeout
    boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams) -> isStaleCheckingEnabled
    void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean) -> setStaleCheckingEnabled
    boolean getSoKeepalive(org.apache.http.params.HttpParams) -> getSoKeepalive
    void setSoKeepalive(org.apache.http.params.HttpParams,boolean) -> setSoKeepalive
org.apache.http.params.HttpParamConfig -> org.apache.http.params.HttpParamConfig:
    org.apache.http.config.SocketConfig getSocketConfig(org.apache.http.params.HttpParams) -> getSocketConfig
    org.apache.http.config.MessageConstraints getMessageConstraints(org.apache.http.params.HttpParams) -> getMessageConstraints
    org.apache.http.config.ConnectionConfig getConnectionConfig(org.apache.http.params.HttpParams) -> getConnectionConfig
org.apache.http.params.HttpParams -> org.apache.http.params.HttpParams:
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    org.apache.http.params.HttpParams copy() -> copy
    boolean removeParameter(java.lang.String) -> removeParameter
    long getLongParameter(java.lang.String,long) -> getLongParameter
    org.apache.http.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    org.apache.http.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
org.apache.http.params.HttpParamsNames -> org.apache.http.params.HttpParamsNames:
    java.util.Set getNames() -> getNames
org.apache.http.params.HttpProtocolParamBean -> org.apache.http.params.HttpProtocolParamBean:
    void setHttpElementCharset(java.lang.String) -> setHttpElementCharset
    void setContentCharset(java.lang.String) -> setContentCharset
    void setVersion(org.apache.http.HttpVersion) -> setVersion
    void setUserAgent(java.lang.String) -> setUserAgent
    void setUseExpectContinue(boolean) -> setUseExpectContinue
org.apache.http.params.HttpProtocolParams -> org.apache.http.params.HttpProtocolParams:
    java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams) -> getHttpElementCharset
    void setHttpElementCharset(org.apache.http.params.HttpParams,java.lang.String) -> setHttpElementCharset
    java.lang.String getContentCharset(org.apache.http.params.HttpParams) -> getContentCharset
    void setContentCharset(org.apache.http.params.HttpParams,java.lang.String) -> setContentCharset
    org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams) -> getVersion
    void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion) -> setVersion
    java.lang.String getUserAgent(org.apache.http.params.HttpParams) -> getUserAgent
    void setUserAgent(org.apache.http.params.HttpParams,java.lang.String) -> setUserAgent
    boolean useExpectContinue(org.apache.http.params.HttpParams) -> useExpectContinue
    void setUseExpectContinue(org.apache.http.params.HttpParams,boolean) -> setUseExpectContinue
    java.nio.charset.CodingErrorAction getMalformedInputAction(org.apache.http.params.HttpParams) -> getMalformedInputAction
    void setMalformedInputAction(org.apache.http.params.HttpParams,java.nio.charset.CodingErrorAction) -> setMalformedInputAction
    java.nio.charset.CodingErrorAction getUnmappableInputAction(org.apache.http.params.HttpParams) -> getUnmappableInputAction
    void setUnmappableInputAction(org.apache.http.params.HttpParams,java.nio.charset.CodingErrorAction) -> setUnmappableInputAction
org.apache.http.params.SyncBasicHttpParams -> org.apache.http.params.SyncBasicHttpParams:
    long serialVersionUID -> serialVersionUID
    boolean removeParameter(java.lang.String) -> removeParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    java.lang.Object getParameter(java.lang.String) -> getParameter
    boolean isParameterSet(java.lang.String) -> isParameterSet
    boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    void setParameters(java.lang.String[],java.lang.Object) -> setParameters
    void clear() -> clear
    java.lang.Object clone() -> clone
org.apache.http.pool.AbstractConnPool -> org.apache.http.pool.AbstractConnPool:
    java.util.concurrent.locks.Lock lock -> lock
    org.apache.http.pool.ConnFactory connFactory -> connFactory
    java.util.Map routeToPool -> routeToPool
    java.util.Set leased -> leased
    java.util.LinkedList available -> available
    java.util.LinkedList pending -> pending
    java.util.Map maxPerRoute -> maxPerRoute
    boolean isShutDown -> isShutDown
    int defaultMaxPerRoute -> defaultMaxPerRoute
    int maxTotal -> maxTotal
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
    void onLease(org.apache.http.pool.PoolEntry) -> onLease
    void onRelease(org.apache.http.pool.PoolEntry) -> onRelease
    boolean isShutdown() -> isShutdown
    void shutdown() -> shutdown
    org.apache.http.pool.RouteSpecificPool getPool(java.lang.Object) -> getPool
    java.util.concurrent.Future lease(java.lang.Object,java.lang.Object,org.apache.http.concurrent.FutureCallback) -> lease
    java.util.concurrent.Future lease(java.lang.Object,java.lang.Object) -> lease
    org.apache.http.pool.PoolEntry getPoolEntryBlocking(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.pool.PoolEntryFuture) -> getPoolEntryBlocking
    void release(org.apache.http.pool.PoolEntry,boolean) -> release
    int getMax(java.lang.Object) -> getMax
    void setMaxTotal(int) -> setMaxTotal
    int getMaxTotal() -> getMaxTotal
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
    int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    org.apache.http.pool.PoolStats getTotalStats() -> getTotalStats
    org.apache.http.pool.PoolStats getStats(java.lang.Object) -> getStats
    void enumAvailable(org.apache.http.pool.PoolEntryCallback) -> enumAvailable
    void enumLeased(org.apache.http.pool.PoolEntryCallback) -> enumLeased
    void purgePoolMap() -> purgePoolMap
    void closeIdle(long,java.util.concurrent.TimeUnit) -> closeIdle
    void closeExpired() -> closeExpired
    java.lang.String toString() -> toString
    void release(java.lang.Object,boolean) -> release
    org.apache.http.pool.PoolEntry access$000(org.apache.http.pool.AbstractConnPool,java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.pool.PoolEntryFuture) -> access$000
org.apache.http.pool.AbstractConnPool$1 -> org.apache.http.pool.AbstractConnPool$1:
    java.lang.Object val$route -> val$route
    org.apache.http.pool.AbstractConnPool this$0 -> this$0
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object) -> createEntry
org.apache.http.pool.AbstractConnPool$2 -> org.apache.http.pool.AbstractConnPool$2:
    java.lang.Object val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.pool.AbstractConnPool this$0 -> this$0
    org.apache.http.pool.PoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    java.lang.Object getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
org.apache.http.pool.AbstractConnPool$3 -> org.apache.http.pool.AbstractConnPool$3:
    long val$deadline -> val$deadline
    org.apache.http.pool.AbstractConnPool this$0 -> this$0
    void process(org.apache.http.pool.PoolEntry) -> process
org.apache.http.pool.AbstractConnPool$4 -> org.apache.http.pool.AbstractConnPool$4:
    long val$now -> val$now
    org.apache.http.pool.AbstractConnPool this$0 -> this$0
    void process(org.apache.http.pool.PoolEntry) -> process
org.apache.http.pool.ConnFactory -> org.apache.http.pool.ConnFactory:
    java.lang.Object create(java.lang.Object) -> create
org.apache.http.pool.ConnPool -> org.apache.http.pool.ConnPool:
    java.util.concurrent.Future lease(java.lang.Object,java.lang.Object,org.apache.http.concurrent.FutureCallback) -> lease
    void release(java.lang.Object,boolean) -> release
org.apache.http.pool.ConnPoolControl -> org.apache.http.pool.ConnPoolControl:
    void setMaxTotal(int) -> setMaxTotal
    int getMaxTotal() -> getMaxTotal
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
    int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    org.apache.http.pool.PoolStats getTotalStats() -> getTotalStats
    org.apache.http.pool.PoolStats getStats(java.lang.Object) -> getStats
org.apache.http.pool.PoolEntry -> org.apache.http.pool.PoolEntry:
    java.lang.String id -> id
    java.lang.Object route -> route
    java.lang.Object conn -> conn
    long created -> created
    long validUnit -> validUnit
    long updated -> updated
    long expiry -> expiry
    java.lang.Object state -> state
    java.lang.String getId() -> getId
    java.lang.Object getRoute() -> getRoute
    java.lang.Object getConnection() -> getConnection
    long getCreated() -> getCreated
    long getValidUnit() -> getValidUnit
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
    long getUpdated() -> getUpdated
    long getExpiry() -> getExpiry
    void updateExpiry(long,java.util.concurrent.TimeUnit) -> updateExpiry
    boolean isExpired(long) -> isExpired
    void close() -> close
    boolean isClosed() -> isClosed
    java.lang.String toString() -> toString
org.apache.http.pool.PoolEntryCallback -> org.apache.http.pool.PoolEntryCallback:
    void process(org.apache.http.pool.PoolEntry) -> process
org.apache.http.pool.PoolEntryFuture -> org.apache.http.pool.PoolEntryFuture:
    java.util.concurrent.locks.Lock lock -> lock
    org.apache.http.concurrent.FutureCallback callback -> callback
    java.util.concurrent.locks.Condition condition -> condition
    boolean cancelled -> cancelled
    boolean completed -> completed
    java.lang.Object result -> result
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    boolean await(java.util.Date) -> await
    void wakeup() -> wakeup
org.apache.http.pool.PoolStats -> org.apache.http.pool.PoolStats:
    int leased -> leased
    int pending -> pending
    int available -> available
    int max -> max
    int getLeased() -> getLeased
    int getPending() -> getPending
    int getAvailable() -> getAvailable
    int getMax() -> getMax
    java.lang.String toString() -> toString
org.apache.http.pool.RouteSpecificPool -> org.apache.http.pool.RouteSpecificPool:
    java.lang.Object route -> route
    java.util.Set leased -> leased
    java.util.LinkedList available -> available
    java.util.LinkedList pending -> pending
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object) -> createEntry
    java.lang.Object getRoute() -> getRoute
    int getLeasedCount() -> getLeasedCount
    int getPendingCount() -> getPendingCount
    int getAvailableCount() -> getAvailableCount
    int getAllocatedCount() -> getAllocatedCount
    org.apache.http.pool.PoolEntry getFree(java.lang.Object) -> getFree
    org.apache.http.pool.PoolEntry getLastUsed() -> getLastUsed
    boolean remove(org.apache.http.pool.PoolEntry) -> remove
    void free(org.apache.http.pool.PoolEntry,boolean) -> free
    org.apache.http.pool.PoolEntry add(java.lang.Object) -> add
    void queue(org.apache.http.pool.PoolEntryFuture) -> queue
    org.apache.http.pool.PoolEntryFuture nextPending() -> nextPending
    void unqueue(org.apache.http.pool.PoolEntryFuture) -> unqueue
    void shutdown() -> shutdown
    java.lang.String toString() -> toString
org.apache.http.protocol.BasicHttpContext -> org.apache.http.protocol.BasicHttpContext:
    org.apache.http.protocol.HttpContext parentContext -> parentContext
    java.util.Map map -> map
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void clear() -> clear
    java.lang.String toString() -> toString
org.apache.http.protocol.BasicHttpProcessor -> org.apache.http.protocol.BasicHttpProcessor:
    java.util.List requestInterceptors -> requestInterceptors
    java.util.List responseInterceptors -> responseInterceptors
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void addInterceptor(org.apache.http.HttpRequestInterceptor) -> addInterceptor
    void addInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addInterceptor(org.apache.http.HttpResponseInterceptor) -> addInterceptor
    void addInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addInterceptor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void setInterceptors(java.util.List) -> setInterceptors
    void clearInterceptors() -> clearInterceptors
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    void copyInterceptors(org.apache.http.protocol.BasicHttpProcessor) -> copyInterceptors
    org.apache.http.protocol.BasicHttpProcessor copy() -> copy
    java.lang.Object clone() -> clone
org.apache.http.protocol.ChainBuilder -> org.apache.http.protocol.ChainBuilder:
    java.util.LinkedList list -> list
    java.util.Map uniqueClasses -> uniqueClasses
    void ensureUnique(java.lang.Object) -> ensureUnique
    org.apache.http.protocol.ChainBuilder addFirst(java.lang.Object) -> addFirst
    org.apache.http.protocol.ChainBuilder addLast(java.lang.Object) -> addLast
    org.apache.http.protocol.ChainBuilder addAllFirst(java.util.Collection) -> addAllFirst
    org.apache.http.protocol.ChainBuilder addAllFirst(java.lang.Object[]) -> addAllFirst
    org.apache.http.protocol.ChainBuilder addAllLast(java.util.Collection) -> addAllLast
    org.apache.http.protocol.ChainBuilder addAllLast(java.lang.Object[]) -> addAllLast
    java.util.LinkedList build() -> build
org.apache.http.protocol.DefaultedHttpContext -> org.apache.http.protocol.DefaultedHttpContext:
    org.apache.http.protocol.HttpContext local -> local
    org.apache.http.protocol.HttpContext defaults -> defaults
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    org.apache.http.protocol.HttpContext getDefaults() -> getDefaults
    java.lang.String toString() -> toString
org.apache.http.protocol.ExecutionContext -> org.apache.http.protocol.ExecutionContext:
    java.lang.String HTTP_CONNECTION -> HTTP_CONNECTION
    java.lang.String HTTP_REQUEST -> HTTP_REQUEST
    java.lang.String HTTP_RESPONSE -> HTTP_RESPONSE
    java.lang.String HTTP_TARGET_HOST -> HTTP_TARGET_HOST
    java.lang.String HTTP_PROXY_HOST -> HTTP_PROXY_HOST
    java.lang.String HTTP_REQ_SENT -> HTTP_REQ_SENT
org.apache.http.protocol.HTTP -> org.apache.http.protocol.HTTP:
    int CR -> CR
    int LF -> LF
    int SP -> SP
    int HT -> HT
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String CONTENT_LEN -> CONTENT_LEN
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String EXPECT_DIRECTIVE -> EXPECT_DIRECTIVE
    java.lang.String CONN_DIRECTIVE -> CONN_DIRECTIVE
    java.lang.String TARGET_HOST -> TARGET_HOST
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String DATE_HEADER -> DATE_HEADER
    java.lang.String SERVER_HEADER -> SERVER_HEADER
    java.lang.String EXPECT_CONTINUE -> EXPECT_CONTINUE
    java.lang.String CONN_CLOSE -> CONN_CLOSE
    java.lang.String CONN_KEEP_ALIVE -> CONN_KEEP_ALIVE
    java.lang.String CHUNK_CODING -> CHUNK_CODING
    java.lang.String IDENTITY_CODING -> IDENTITY_CODING
    java.nio.charset.Charset DEF_CONTENT_CHARSET -> DEF_CONTENT_CHARSET
    java.nio.charset.Charset DEF_PROTOCOL_CHARSET -> DEF_PROTOCOL_CHARSET
    java.lang.String UTF_8 -> UTF_8
    java.lang.String UTF_16 -> UTF_16
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String ASCII -> ASCII
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String DEFAULT_CONTENT_CHARSET -> DEFAULT_CONTENT_CHARSET
    java.lang.String DEFAULT_PROTOCOL_CHARSET -> DEFAULT_PROTOCOL_CHARSET
    java.lang.String OCTET_STREAM_TYPE -> OCTET_STREAM_TYPE
    java.lang.String PLAIN_TEXT_TYPE -> PLAIN_TEXT_TYPE
    java.lang.String CHARSET_PARAM -> CHARSET_PARAM
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    boolean isWhitespace(char) -> isWhitespace
org.apache.http.protocol.HttpContext -> org.apache.http.protocol.HttpContext:
    java.lang.String RESERVED_PREFIX -> RESERVED_PREFIX
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
org.apache.http.protocol.HttpCoreContext -> org.apache.http.protocol.HttpCoreContext:
    java.lang.String HTTP_CONNECTION -> HTTP_CONNECTION
    java.lang.String HTTP_REQUEST -> HTTP_REQUEST
    java.lang.String HTTP_RESPONSE -> HTTP_RESPONSE
    java.lang.String HTTP_TARGET_HOST -> HTTP_TARGET_HOST
    java.lang.String HTTP_REQ_SENT -> HTTP_REQ_SENT
    org.apache.http.protocol.HttpContext context -> context
    org.apache.http.protocol.HttpCoreContext create() -> create
    org.apache.http.protocol.HttpCoreContext adapt(org.apache.http.protocol.HttpContext) -> adapt
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    java.lang.Object getAttribute(java.lang.String,java.lang.Class) -> getAttribute
    org.apache.http.HttpConnection getConnection(java.lang.Class) -> getConnection
    org.apache.http.HttpConnection getConnection() -> getConnection
    org.apache.http.HttpRequest getRequest() -> getRequest
    boolean isRequestSent() -> isRequestSent
    org.apache.http.HttpResponse getResponse() -> getResponse
    void setTargetHost(org.apache.http.HttpHost) -> setTargetHost
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
org.apache.http.protocol.HttpDateGenerator -> org.apache.http.protocol.HttpDateGenerator:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.util.TimeZone GMT -> GMT
    java.text.DateFormat dateformat -> dateformat
    long dateAsLong -> dateAsLong
    java.lang.String dateAsText -> dateAsText
    java.lang.String getCurrentDate() -> getCurrentDate
org.apache.http.protocol.HttpExpectationVerifier -> org.apache.http.protocol.HttpExpectationVerifier:
    void verify(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> verify
org.apache.http.protocol.HttpProcessor -> org.apache.http.protocol.HttpProcessor:
org.apache.http.protocol.HttpProcessorBuilder -> org.apache.http.protocol.HttpProcessorBuilder:
    org.apache.http.protocol.ChainBuilder requestChainBuilder -> requestChainBuilder
    org.apache.http.protocol.ChainBuilder responseChainBuilder -> responseChainBuilder
    org.apache.http.protocol.HttpProcessorBuilder create() -> create
    org.apache.http.protocol.ChainBuilder getRequestChainBuilder() -> getRequestChainBuilder
    org.apache.http.protocol.ChainBuilder getResponseChainBuilder() -> getResponseChainBuilder
    org.apache.http.protocol.HttpProcessorBuilder addFirst(org.apache.http.HttpRequestInterceptor) -> addFirst
    org.apache.http.protocol.HttpProcessorBuilder addLast(org.apache.http.HttpRequestInterceptor) -> addLast
    org.apache.http.protocol.HttpProcessorBuilder add(org.apache.http.HttpRequestInterceptor) -> add
    org.apache.http.protocol.HttpProcessorBuilder addAllFirst(org.apache.http.HttpRequestInterceptor[]) -> addAllFirst
    org.apache.http.protocol.HttpProcessorBuilder addAllLast(org.apache.http.HttpRequestInterceptor[]) -> addAllLast
    org.apache.http.protocol.HttpProcessorBuilder addAll(org.apache.http.HttpRequestInterceptor[]) -> addAll
    org.apache.http.protocol.HttpProcessorBuilder addFirst(org.apache.http.HttpResponseInterceptor) -> addFirst
    org.apache.http.protocol.HttpProcessorBuilder addLast(org.apache.http.HttpResponseInterceptor) -> addLast
    org.apache.http.protocol.HttpProcessorBuilder add(org.apache.http.HttpResponseInterceptor) -> add
    org.apache.http.protocol.HttpProcessorBuilder addAllFirst(org.apache.http.HttpResponseInterceptor[]) -> addAllFirst
    org.apache.http.protocol.HttpProcessorBuilder addAllLast(org.apache.http.HttpResponseInterceptor[]) -> addAllLast
    org.apache.http.protocol.HttpProcessorBuilder addAll(org.apache.http.HttpResponseInterceptor[]) -> addAll
    org.apache.http.protocol.HttpProcessor build() -> build
org.apache.http.protocol.HttpRequestExecutor -> org.apache.http.protocol.HttpRequestExecutor:
    int DEFAULT_WAIT_FOR_CONTINUE -> DEFAULT_WAIT_FOR_CONTINUE
    int waitForContinue -> waitForContinue
    boolean canResponseHaveBody(org.apache.http.HttpRequest,org.apache.http.HttpResponse) -> canResponseHaveBody
    org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> execute
    void closeConnection(org.apache.http.HttpClientConnection) -> closeConnection
    void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext) -> preProcess
    org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> doSendRequest
    org.apache.http.HttpResponse doReceiveResponse(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> doReceiveResponse
    void postProcess(org.apache.http.HttpResponse,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext) -> postProcess
org.apache.http.protocol.HttpRequestHandler -> org.apache.http.protocol.HttpRequestHandler:
    void handle(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> handle
org.apache.http.protocol.HttpRequestHandlerMapper -> org.apache.http.protocol.HttpRequestHandlerMapper:
    org.apache.http.protocol.HttpRequestHandler lookup(org.apache.http.HttpRequest) -> lookup
org.apache.http.protocol.HttpRequestHandlerRegistry -> org.apache.http.protocol.HttpRequestHandlerRegistry:
    org.apache.http.protocol.UriPatternMatcher matcher -> matcher
    void register(java.lang.String,org.apache.http.protocol.HttpRequestHandler) -> register
    void unregister(java.lang.String) -> unregister
    void setHandlers(java.util.Map) -> setHandlers
    java.util.Map getHandlers() -> getHandlers
    org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String) -> lookup
org.apache.http.protocol.HttpRequestHandlerResolver -> org.apache.http.protocol.HttpRequestHandlerResolver:
    org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String) -> lookup
org.apache.http.protocol.HttpRequestInterceptorList -> org.apache.http.protocol.HttpRequestInterceptorList:
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    void setInterceptors(java.util.List) -> setInterceptors
org.apache.http.protocol.HttpResponseInterceptorList -> org.apache.http.protocol.HttpResponseInterceptorList:
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void setInterceptors(java.util.List) -> setInterceptors
org.apache.http.protocol.HttpService -> org.apache.http.protocol.HttpService:
    org.apache.http.params.HttpParams params -> params
    org.apache.http.protocol.HttpProcessor processor -> processor
    org.apache.http.protocol.HttpRequestHandlerMapper handlerMapper -> handlerMapper
    org.apache.http.ConnectionReuseStrategy connStrategy -> connStrategy
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.protocol.HttpExpectationVerifier expectationVerifier -> expectationVerifier
    void setHttpProcessor(org.apache.http.protocol.HttpProcessor) -> setHttpProcessor
    void setConnReuseStrategy(org.apache.http.ConnectionReuseStrategy) -> setConnReuseStrategy
    void setResponseFactory(org.apache.http.HttpResponseFactory) -> setResponseFactory
    void setParams(org.apache.http.params.HttpParams) -> setParams
    void setHandlerResolver(org.apache.http.protocol.HttpRequestHandlerResolver) -> setHandlerResolver
    void setExpectationVerifier(org.apache.http.protocol.HttpExpectationVerifier) -> setExpectationVerifier
    org.apache.http.params.HttpParams getParams() -> getParams
    void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext) -> handleRequest
    void handleException(org.apache.http.HttpException,org.apache.http.HttpResponse) -> handleException
    void doService(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> doService
org.apache.http.protocol.HttpService$HttpRequestHandlerResolverAdapter -> org.apache.http.protocol.HttpService$HttpRequestHandlerResolverAdapter:
    org.apache.http.protocol.HttpRequestHandlerResolver resolver -> resolver
    org.apache.http.protocol.HttpRequestHandler lookup(org.apache.http.HttpRequest) -> lookup
org.apache.http.protocol.ImmutableHttpProcessor -> org.apache.http.protocol.ImmutableHttpProcessor:
    org.apache.http.HttpRequestInterceptor[] requestInterceptors -> requestInterceptors
    org.apache.http.HttpResponseInterceptor[] responseInterceptors -> responseInterceptors
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestConnControl -> org.apache.http.protocol.RequestConnControl:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestContent -> org.apache.http.protocol.RequestContent:
    boolean overwrite -> overwrite
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestDate -> org.apache.http.protocol.RequestDate:
    org.apache.http.protocol.HttpDateGenerator DATE_GENERATOR -> DATE_GENERATOR
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestExpectContinue -> org.apache.http.protocol.RequestExpectContinue:
    boolean activeByDefault -> activeByDefault
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestTargetHost -> org.apache.http.protocol.RequestTargetHost:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestUserAgent -> org.apache.http.protocol.RequestUserAgent:
    java.lang.String userAgent -> userAgent
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseConnControl -> org.apache.http.protocol.ResponseConnControl:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseContent -> org.apache.http.protocol.ResponseContent:
    boolean overwrite -> overwrite
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseDate -> org.apache.http.protocol.ResponseDate:
    org.apache.http.protocol.HttpDateGenerator DATE_GENERATOR -> DATE_GENERATOR
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseServer -> org.apache.http.protocol.ResponseServer:
    java.lang.String originServer -> originServer
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.SyncBasicHttpContext -> org.apache.http.protocol.SyncBasicHttpContext:
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void clear() -> clear
org.apache.http.protocol.UriHttpRequestHandlerMapper -> org.apache.http.protocol.UriHttpRequestHandlerMapper:
    org.apache.http.protocol.UriPatternMatcher matcher -> matcher
    void register(java.lang.String,org.apache.http.protocol.HttpRequestHandler) -> register
    void unregister(java.lang.String) -> unregister
    java.lang.String getRequestPath(org.apache.http.HttpRequest) -> getRequestPath
    org.apache.http.protocol.HttpRequestHandler lookup(org.apache.http.HttpRequest) -> lookup
org.apache.http.protocol.UriPatternMatcher -> org.apache.http.protocol.UriPatternMatcher:
    java.util.Map map -> map
    void register(java.lang.String,java.lang.Object) -> register
    void unregister(java.lang.String) -> unregister
    void setHandlers(java.util.Map) -> setHandlers
    void setObjects(java.util.Map) -> setObjects
    java.util.Map getObjects() -> getObjects
    java.lang.Object lookup(java.lang.String) -> lookup
    boolean matchUriRequestPattern(java.lang.String,java.lang.String) -> matchUriRequestPattern
    java.lang.String toString() -> toString
org.apache.http.util.Args -> org.apache.http.util.Args:
    void check(boolean,java.lang.String) -> check
    void check(boolean,java.lang.String,java.lang.Object[]) -> check
    java.lang.Object notNull(java.lang.Object,java.lang.String) -> notNull
    java.lang.CharSequence notEmpty(java.lang.CharSequence,java.lang.String) -> notEmpty
    java.lang.CharSequence notBlank(java.lang.CharSequence,java.lang.String) -> notBlank
    java.util.Collection notEmpty(java.util.Collection,java.lang.String) -> notEmpty
    int positive(int,java.lang.String) -> positive
    long positive(long,java.lang.String) -> positive
    int notNegative(int,java.lang.String) -> notNegative
    long notNegative(long,java.lang.String) -> notNegative
org.apache.http.util.Asserts -> org.apache.http.util.Asserts:
    void check(boolean,java.lang.String) -> check
    void check(boolean,java.lang.String,java.lang.Object[]) -> check
    void notNull(java.lang.Object,java.lang.String) -> notNull
    void notEmpty(java.lang.CharSequence,java.lang.String) -> notEmpty
    void notBlank(java.lang.CharSequence,java.lang.String) -> notBlank
org.apache.http.util.ByteArrayBuffer -> org.apache.http.util.ByteArrayBuffer:
    long serialVersionUID -> serialVersionUID
    byte[] buffer -> buffer
    int len -> len
    void expand(int) -> expand
    void append(byte[],int,int) -> append
    void append(int) -> append
    void append(char[],int,int) -> append
    void append(org.apache.http.util.CharArrayBuffer,int,int) -> append
    void clear() -> clear
    byte[] toByteArray() -> toByteArray
    int byteAt(int) -> byteAt
    int capacity() -> capacity
    int length() -> length
    void ensureCapacity(int) -> ensureCapacity
    byte[] buffer() -> buffer
    void setLength(int) -> setLength
    boolean isEmpty() -> isEmpty
    boolean isFull() -> isFull
    int indexOf(byte,int,int) -> indexOf
    int indexOf(byte) -> indexOf
org.apache.http.util.CharArrayBuffer -> org.apache.http.util.CharArrayBuffer:
    long serialVersionUID -> serialVersionUID
    char[] buffer -> buffer
    int len -> len
    void expand(int) -> expand
    void append(char[],int,int) -> append
    void append(java.lang.String) -> append
    void append(org.apache.http.util.CharArrayBuffer,int,int) -> append
    void append(org.apache.http.util.CharArrayBuffer) -> append
    void append(char) -> append
    void append(byte[],int,int) -> append
    void append(org.apache.http.util.ByteArrayBuffer,int,int) -> append
    void append(java.lang.Object) -> append
    void clear() -> clear
    char[] toCharArray() -> toCharArray
    char charAt(int) -> charAt
    char[] buffer() -> buffer
    int capacity() -> capacity
    int length() -> length
    void ensureCapacity(int) -> ensureCapacity
    void setLength(int) -> setLength
    boolean isEmpty() -> isEmpty
    boolean isFull() -> isFull
    int indexOf(int,int,int) -> indexOf
    int indexOf(int) -> indexOf
    java.lang.String substring(int,int) -> substring
    java.lang.String substringTrimmed(int,int) -> substringTrimmed
    java.lang.String toString() -> toString
org.apache.http.util.CharsetUtils -> org.apache.http.util.CharsetUtils:
    java.nio.charset.Charset lookup(java.lang.String) -> lookup
    java.nio.charset.Charset get(java.lang.String) -> get
org.apache.http.util.EncodingUtils -> org.apache.http.util.EncodingUtils:
    java.lang.String getString(byte[],int,int,java.lang.String) -> getString
    java.lang.String getString(byte[],java.lang.String) -> getString
    byte[] getBytes(java.lang.String,java.lang.String) -> getBytes
    byte[] getAsciiBytes(java.lang.String) -> getAsciiBytes
    java.lang.String getAsciiString(byte[],int,int) -> getAsciiString
    java.lang.String getAsciiString(byte[]) -> getAsciiString
org.apache.http.util.EntityUtils -> org.apache.http.util.EntityUtils:
    void consumeQuietly(org.apache.http.HttpEntity) -> consumeQuietly
    void consume(org.apache.http.HttpEntity) -> consume
    void updateEntity(org.apache.http.HttpResponse,org.apache.http.HttpEntity) -> updateEntity
    byte[] toByteArray(org.apache.http.HttpEntity) -> toByteArray
    java.lang.String getContentCharSet(org.apache.http.HttpEntity) -> getContentCharSet
    java.lang.String getContentMimeType(org.apache.http.HttpEntity) -> getContentMimeType
    java.lang.String toString(org.apache.http.HttpEntity,java.nio.charset.Charset) -> toString
    java.lang.String toString(org.apache.http.HttpEntity,java.lang.String) -> toString
    java.lang.String toString(org.apache.http.HttpEntity) -> toString
org.apache.http.util.ExceptionUtils -> org.apache.http.util.ExceptionUtils:
    java.lang.reflect.Method INIT_CAUSE_METHOD -> INIT_CAUSE_METHOD
    java.lang.reflect.Method getInitCauseMethod() -> getInitCauseMethod
    void initCause(java.lang.Throwable,java.lang.Throwable) -> initCause
org.apache.http.util.LangUtils -> org.apache.http.util.LangUtils:
    int HASH_SEED -> HASH_SEED
    int HASH_OFFSET -> HASH_OFFSET
    int hashCode(int,int) -> hashCode
    int hashCode(int,boolean) -> hashCode
    int hashCode(int,java.lang.Object) -> hashCode
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    boolean equals(java.lang.Object[],java.lang.Object[]) -> equals
org.apache.http.util.NetUtils -> org.apache.http.util.NetUtils:
    void formatAddress(java.lang.StringBuilder,java.net.SocketAddress) -> formatAddress
org.apache.http.util.TextUtils -> org.apache.http.util.TextUtils:
    boolean isEmpty(java.lang.CharSequence) -> isEmpty
    boolean isBlank(java.lang.CharSequence) -> isBlank
org.apache.http.util.VersionInfo -> org.apache.http.util.VersionInfo:
    java.lang.String UNAVAILABLE -> UNAVAILABLE
    java.lang.String VERSION_PROPERTY_FILE -> VERSION_PROPERTY_FILE
    java.lang.String PROPERTY_MODULE -> PROPERTY_MODULE
    java.lang.String PROPERTY_RELEASE -> PROPERTY_RELEASE
    java.lang.String PROPERTY_TIMESTAMP -> PROPERTY_TIMESTAMP
    java.lang.String infoPackage -> infoPackage
    java.lang.String infoModule -> infoModule
    java.lang.String infoRelease -> infoRelease
    java.lang.String infoTimestamp -> infoTimestamp
    java.lang.String infoClassloader -> infoClassloader
    java.lang.String getPackage() -> getPackage
    java.lang.String getModule() -> getModule
    java.lang.String getRelease() -> getRelease
    java.lang.String getTimestamp() -> getTimestamp
    java.lang.String getClassloader() -> getClassloader
    java.lang.String toString() -> toString
    org.apache.http.util.VersionInfo[] loadVersionInfo(java.lang.String[],java.lang.ClassLoader) -> loadVersionInfo
    org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader) -> loadVersionInfo
    org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader) -> fromMap
    java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class) -> getUserAgent
